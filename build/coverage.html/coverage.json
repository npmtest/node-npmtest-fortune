{"/home/travis/build/npmtest/node-npmtest-fortune/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_fortune */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-fortune/lib.npmtest_fortune.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/lib.npmtest_fortune.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":52}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":58}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_fortune */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_fortune = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_fortune = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-fortune/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":51}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":65},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-fortune && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_fortune */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_fortune","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_fortune.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_fortune.rollup.js'] =","            local.assetsDict['/assets.npmtest_fortune.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_fortune.__dirname + '/lib.npmtest_fortune.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":1,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":1,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":1,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":1,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":1,"135":1,"136":1,"137":2,"138":0,"139":1,"140":0,"141":0,"142":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":2,"21":0,"22":0,"23":0},"fnMap":{"1":{"name":"Fortune","line":40,"loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":40}}},"2":{"name":"Fortune","line":244,"loc":{"start":{"line":244,"column":32},"end":{"line":244,"column":72}}},"3":{"name":"(anonymous_3)","line":367,"loc":{"start":{"line":367,"column":28},"end":{"line":367,"column":47}}},"4":{"name":"(anonymous_4)","line":374,"loc":{"start":{"line":374,"column":10},"end":{"line":374,"column":22}}},"5":{"name":"(anonymous_5)","line":377,"loc":{"start":{"line":377,"column":23},"end":{"line":377,"column":50}}},"6":{"name":"(anonymous_6)","line":379,"loc":{"start":{"line":379,"column":32},"end":{"line":379,"column":44}}},"7":{"name":"(anonymous_7)","line":382,"loc":{"start":{"line":382,"column":32},"end":{"line":382,"column":44}}},"8":{"name":"(anonymous_8)","line":403,"loc":{"start":{"line":403,"column":25},"end":{"line":403,"column":70}}},"9":{"name":"(anonymous_9)","line":426,"loc":{"start":{"line":426,"column":27},"end":{"line":426,"column":67}}},"10":{"name":"(anonymous_10)","line":449,"loc":{"start":{"line":449,"column":27},"end":{"line":449,"column":67}}},"11":{"name":"(anonymous_11)","line":471,"loc":{"start":{"line":471,"column":27},"end":{"line":471,"column":63}}},"12":{"name":"(anonymous_12)","line":490,"loc":{"start":{"line":490,"column":28},"end":{"line":490,"column":40}}},"13":{"name":"(anonymous_13)","line":502,"loc":{"start":{"line":502,"column":21},"end":{"line":502,"column":48}}},"14":{"name":"(anonymous_14)","line":509,"loc":{"start":{"line":509,"column":32},"end":{"line":509,"column":44}}},"15":{"name":"(anonymous_15)","line":513,"loc":{"start":{"line":513,"column":7},"end":{"line":513,"column":24}}},"16":{"name":"(anonymous_16)","line":528,"loc":{"start":{"line":528,"column":31},"end":{"line":528,"column":43}}},"17":{"name":"(anonymous_17)","line":537,"loc":{"start":{"line":537,"column":21},"end":{"line":537,"column":48}}},"18":{"name":"(anonymous_18)","line":538,"loc":{"start":{"line":538,"column":42},"end":{"line":538,"column":54}}},"19":{"name":"(anonymous_19)","line":542,"loc":{"start":{"line":542,"column":7},"end":{"line":542,"column":24}}},"20":{"name":"(anonymous_20)","line":572,"loc":{"start":{"line":572,"column":7},"end":{"line":572,"column":19}}},"21":{"name":"(anonymous_21)","line":575,"loc":{"start":{"line":575,"column":7},"end":{"line":575,"column":24}}},"22":{"name":"bindMiddleware","line":582,"loc":{"start":{"line":582,"column":0},"end":{"line":582,"column":40}}},"23":{"name":"(anonymous_23)","line":583,"loc":{"start":{"line":583,"column":9},"end":{"line":583,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":37}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":56}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":53}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":48}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":55}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":41}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":36}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":38}},"9":{"start":{"line":15,"column":0},"end":{"line":15,"column":34}},"10":{"start":{"line":16,"column":0},"end":{"line":16,"column":32}},"11":{"start":{"line":17,"column":0},"end":{"line":17,"column":26}},"12":{"start":{"line":18,"column":0},"end":{"line":18,"column":28}},"13":{"start":{"line":19,"column":0},"end":{"line":19,"column":26}},"14":{"start":{"line":40,"column":0},"end":{"line":45,"column":1}},"15":{"start":{"line":41,"column":2},"end":{"line":42,"column":44}},"16":{"start":{"line":42,"column":4},"end":{"line":42,"column":44}},"17":{"start":{"line":44,"column":2},"end":{"line":44,"column":40}},"18":{"start":{"line":49,"column":0},"end":{"line":49,"column":35}},"19":{"start":{"line":244,"column":0},"end":{"line":318,"column":1}},"20":{"start":{"line":245,"column":2},"end":{"line":245,"column":17}},"21":{"start":{"line":246,"column":2},"end":{"line":246,"column":22}},"22":{"start":{"line":247,"column":2},"end":{"line":247,"column":54}},"23":{"start":{"line":249,"column":2},"end":{"line":249,"column":46}},"24":{"start":{"line":249,"column":30},"end":{"line":249,"column":46}},"25":{"start":{"line":250,"column":2},"end":{"line":250,"column":38}},"26":{"start":{"line":250,"column":26},"end":{"line":250,"column":38}},"27":{"start":{"line":252,"column":2},"end":{"line":252,"column":75}},"28":{"start":{"line":252,"column":31},"end":{"line":252,"column":75}},"29":{"start":{"line":253,"column":2},"end":{"line":253,"column":53}},"30":{"start":{"line":253,"column":32},"end":{"line":253,"column":53}},"31":{"start":{"line":254,"column":2},"end":{"line":254,"column":47}},"32":{"start":{"line":254,"column":29},"end":{"line":254,"column":47}},"33":{"start":{"line":255,"column":2},"end":{"line":256,"column":40}},"34":{"start":{"line":256,"column":4},"end":{"line":256,"column":40}},"35":{"start":{"line":259,"column":2},"end":{"line":259,"column":12}},"36":{"start":{"line":260,"column":2},"end":{"line":267,"column":3}},"37":{"start":{"line":261,"column":4},"end":{"line":261,"column":73}},"38":{"start":{"line":263,"column":4},"end":{"line":264,"column":47}},"39":{"start":{"line":264,"column":6},"end":{"line":264,"column":47}},"40":{"start":{"line":266,"column":4},"end":{"line":266,"column":34}},"41":{"start":{"line":269,"column":2},"end":{"line":269,"column":23}},"42":{"start":{"line":272,"column":2},"end":{"line":279,"column":3}},"43":{"start":{"line":273,"column":4},"end":{"line":275,"column":30}},"44":{"start":{"line":273,"column":43},"end":{"line":275,"column":30}},"45":{"start":{"line":276,"column":4},"end":{"line":278,"column":28}},"46":{"start":{"line":277,"column":6},"end":{"line":278,"column":28}},"47":{"start":{"line":282,"column":2},"end":{"line":289,"column":3}},"48":{"start":{"line":283,"column":4},"end":{"line":285,"column":42}},"49":{"start":{"line":284,"column":6},"end":{"line":285,"column":42}},"50":{"start":{"line":287,"column":4},"end":{"line":287,"column":31}},"51":{"start":{"line":288,"column":4},"end":{"line":288,"column":53}},"52":{"start":{"line":288,"column":37},"end":{"line":288,"column":53}},"53":{"start":{"line":296,"column":2},"end":{"line":300,"column":4}},"54":{"start":{"line":303,"column":2},"end":{"line":317,"column":4}},"55":{"start":{"line":367,"column":0},"end":{"line":388,"column":1}},"56":{"start":{"line":368,"column":2},"end":{"line":368,"column":17}},"57":{"start":{"line":369,"column":2},"end":{"line":369,"column":46}},"58":{"start":{"line":370,"column":2},"end":{"line":370,"column":31}},"59":{"start":{"line":372,"column":2},"end":{"line":385,"column":6}},"60":{"start":{"line":373,"column":4},"end":{"line":374,"column":62}},"61":{"start":{"line":374,"column":24},"end":{"line":374,"column":60}},"62":{"start":{"line":376,"column":7},"end":{"line":385,"column":6}},"63":{"start":{"line":377,"column":4},"end":{"line":385,"column":6}},"64":{"start":{"line":379,"column":6},"end":{"line":381,"column":8}},"65":{"start":{"line":380,"column":8},"end":{"line":380,"column":47}},"66":{"start":{"line":382,"column":6},"end":{"line":384,"column":8}},"67":{"start":{"line":383,"column":8},"end":{"line":383,"column":45}},"68":{"start":{"line":387,"column":2},"end":{"line":387,"column":37}},"69":{"start":{"line":403,"column":0},"end":{"line":412,"column":1}},"70":{"start":{"line":404,"column":2},"end":{"line":404,"column":48}},"71":{"start":{"line":406,"column":2},"end":{"line":406,"column":55}},"72":{"start":{"line":406,"column":11},"end":{"line":406,"column":55}},"73":{"start":{"line":407,"column":2},"end":{"line":407,"column":36}},"74":{"start":{"line":407,"column":15},"end":{"line":407,"column":36}},"75":{"start":{"line":408,"column":2},"end":{"line":408,"column":36}},"76":{"start":{"line":408,"column":15},"end":{"line":408,"column":36}},"77":{"start":{"line":409,"column":2},"end":{"line":409,"column":27}},"78":{"start":{"line":409,"column":12},"end":{"line":409,"column":27}},"79":{"start":{"line":411,"column":2},"end":{"line":411,"column":26}},"80":{"start":{"line":426,"column":0},"end":{"line":434,"column":1}},"81":{"start":{"line":427,"column":2},"end":{"line":428,"column":61}},"82":{"start":{"line":430,"column":2},"end":{"line":430,"column":40}},"83":{"start":{"line":430,"column":15},"end":{"line":430,"column":40}},"84":{"start":{"line":431,"column":2},"end":{"line":431,"column":31}},"85":{"start":{"line":431,"column":12},"end":{"line":431,"column":31}},"86":{"start":{"line":433,"column":2},"end":{"line":433,"column":30}},"87":{"start":{"line":449,"column":0},"end":{"line":457,"column":1}},"88":{"start":{"line":450,"column":2},"end":{"line":451,"column":61}},"89":{"start":{"line":453,"column":2},"end":{"line":453,"column":40}},"90":{"start":{"line":453,"column":15},"end":{"line":453,"column":40}},"91":{"start":{"line":454,"column":2},"end":{"line":454,"column":31}},"92":{"start":{"line":454,"column":12},"end":{"line":454,"column":31}},"93":{"start":{"line":456,"column":2},"end":{"line":456,"column":30}},"94":{"start":{"line":471,"column":0},"end":{"line":479,"column":1}},"95":{"start":{"line":472,"column":2},"end":{"line":472,"column":54}},"96":{"start":{"line":474,"column":2},"end":{"line":474,"column":59}},"97":{"start":{"line":474,"column":11},"end":{"line":474,"column":59}},"98":{"start":{"line":475,"column":2},"end":{"line":475,"column":40}},"99":{"start":{"line":475,"column":15},"end":{"line":475,"column":40}},"100":{"start":{"line":476,"column":2},"end":{"line":476,"column":31}},"101":{"start":{"line":476,"column":12},"end":{"line":476,"column":31}},"102":{"start":{"line":478,"column":2},"end":{"line":478,"column":30}},"103":{"start":{"line":490,"column":0},"end":{"line":519,"column":1}},"104":{"start":{"line":491,"column":2},"end":{"line":491,"column":17}},"105":{"start":{"line":492,"column":2},"end":{"line":492,"column":31}},"106":{"start":{"line":494,"column":2},"end":{"line":498,"column":67}},"107":{"start":{"line":495,"column":4},"end":{"line":495,"column":66}},"108":{"start":{"line":497,"column":7},"end":{"line":498,"column":67}},"109":{"start":{"line":498,"column":4},"end":{"line":498,"column":67}},"110":{"start":{"line":500,"column":2},"end":{"line":500,"column":27}},"111":{"start":{"line":502,"column":2},"end":{"line":518,"column":4}},"112":{"start":{"line":503,"column":4},"end":{"line":507,"column":6}},"113":{"start":{"line":509,"column":4},"end":{"line":517,"column":6}},"114":{"start":{"line":510,"column":6},"end":{"line":510,"column":31}},"115":{"start":{"line":511,"column":6},"end":{"line":511,"column":31}},"116":{"start":{"line":512,"column":6},"end":{"line":512,"column":26}},"117":{"start":{"line":514,"column":6},"end":{"line":514,"column":31}},"118":{"start":{"line":515,"column":6},"end":{"line":515,"column":31}},"119":{"start":{"line":516,"column":6},"end":{"line":516,"column":26}},"120":{"start":{"line":528,"column":0},"end":{"line":548,"column":1}},"121":{"start":{"line":529,"column":2},"end":{"line":529,"column":17}},"122":{"start":{"line":530,"column":2},"end":{"line":530,"column":31}},"123":{"start":{"line":532,"column":2},"end":{"line":533,"column":72}},"124":{"start":{"line":533,"column":4},"end":{"line":533,"column":72}},"125":{"start":{"line":535,"column":2},"end":{"line":535,"column":27}},"126":{"start":{"line":537,"column":2},"end":{"line":547,"column":4}},"127":{"start":{"line":538,"column":4},"end":{"line":546,"column":6}},"128":{"start":{"line":539,"column":6},"end":{"line":539,"column":31}},"129":{"start":{"line":540,"column":6},"end":{"line":540,"column":34}},"130":{"start":{"line":541,"column":6},"end":{"line":541,"column":26}},"131":{"start":{"line":543,"column":6},"end":{"line":543,"column":31}},"132":{"start":{"line":544,"column":6},"end":{"line":544,"column":31}},"133":{"start":{"line":545,"column":6},"end":{"line":545,"column":26}},"134":{"start":{"line":553,"column":0},"end":{"line":553,"column":33}},"135":{"start":{"line":557,"column":0},"end":{"line":566,"column":2}},"136":{"start":{"line":570,"column":0},"end":{"line":578,"column":2}},"137":{"start":{"line":573,"column":4},"end":{"line":573,"column":26}},"138":{"start":{"line":576,"column":4},"end":{"line":576,"column":27}},"139":{"start":{"line":582,"column":0},"end":{"line":586,"column":1}},"140":{"start":{"line":583,"column":2},"end":{"line":585,"column":3}},"141":{"start":{"line":584,"column":4},"end":{"line":584,"column":32}},"142":{"start":{"line":589,"column":0},"end":{"line":589,"column":24}}},"branchMap":{"1":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"2":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":2},"end":{"line":249,"column":2}},{"start":{"line":249,"column":2},"end":{"line":249,"column":2}}]},"3":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":2},"end":{"line":250,"column":2}},{"start":{"line":250,"column":2},"end":{"line":250,"column":2}}]},"4":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":2},"end":{"line":252,"column":2}},{"start":{"line":252,"column":2},"end":{"line":252,"column":2}}]},"5":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":2},"end":{"line":253,"column":2}},{"start":{"line":253,"column":2},"end":{"line":253,"column":2}}]},"6":{"line":254,"type":"if","locations":[{"start":{"line":254,"column":2},"end":{"line":254,"column":2}},{"start":{"line":254,"column":2},"end":{"line":254,"column":2}}]},"7":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":2},"end":{"line":255,"column":2}},{"start":{"line":255,"column":2},"end":{"line":255,"column":2}}]},"8":{"line":273,"type":"if","locations":[{"start":{"line":273,"column":4},"end":{"line":273,"column":4}},{"start":{"line":273,"column":4},"end":{"line":273,"column":4}}]},"9":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":4},"end":{"line":276,"column":4}},{"start":{"line":276,"column":4},"end":{"line":276,"column":4}}]},"10":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":4},"end":{"line":283,"column":4}},{"start":{"line":283,"column":4},"end":{"line":283,"column":4}}]},"11":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":4},"end":{"line":288,"column":4}},{"start":{"line":288,"column":4},"end":{"line":288,"column":4}}]},"12":{"line":372,"type":"if","locations":[{"start":{"line":372,"column":2},"end":{"line":372,"column":2}},{"start":{"line":372,"column":2},"end":{"line":372,"column":2}}]},"13":{"line":376,"type":"if","locations":[{"start":{"line":376,"column":7},"end":{"line":376,"column":7}},{"start":{"line":376,"column":7},"end":{"line":376,"column":7}}]},"14":{"line":406,"type":"if","locations":[{"start":{"line":406,"column":2},"end":{"line":406,"column":2}},{"start":{"line":406,"column":2},"end":{"line":406,"column":2}}]},"15":{"line":406,"type":"cond-expr","locations":[{"start":{"line":406,"column":42},"end":{"line":406,"column":45}},{"start":{"line":406,"column":48},"end":{"line":406,"column":55}}]},"16":{"line":407,"type":"if","locations":[{"start":{"line":407,"column":2},"end":{"line":407,"column":2}},{"start":{"line":407,"column":2},"end":{"line":407,"column":2}}]},"17":{"line":408,"type":"if","locations":[{"start":{"line":408,"column":2},"end":{"line":408,"column":2}},{"start":{"line":408,"column":2},"end":{"line":408,"column":2}}]},"18":{"line":409,"type":"if","locations":[{"start":{"line":409,"column":2},"end":{"line":409,"column":2}},{"start":{"line":409,"column":2},"end":{"line":409,"column":2}}]},"19":{"line":428,"type":"cond-expr","locations":[{"start":{"line":428,"column":38},"end":{"line":428,"column":45}},{"start":{"line":428,"column":48},"end":{"line":428,"column":59}}]},"20":{"line":430,"type":"if","locations":[{"start":{"line":430,"column":2},"end":{"line":430,"column":2}},{"start":{"line":430,"column":2},"end":{"line":430,"column":2}}]},"21":{"line":431,"type":"if","locations":[{"start":{"line":431,"column":2},"end":{"line":431,"column":2}},{"start":{"line":431,"column":2},"end":{"line":431,"column":2}}]},"22":{"line":451,"type":"cond-expr","locations":[{"start":{"line":451,"column":38},"end":{"line":451,"column":45}},{"start":{"line":451,"column":48},"end":{"line":451,"column":59}}]},"23":{"line":453,"type":"if","locations":[{"start":{"line":453,"column":2},"end":{"line":453,"column":2}},{"start":{"line":453,"column":2},"end":{"line":453,"column":2}}]},"24":{"line":454,"type":"if","locations":[{"start":{"line":454,"column":2},"end":{"line":454,"column":2}},{"start":{"line":454,"column":2},"end":{"line":454,"column":2}}]},"25":{"line":474,"type":"if","locations":[{"start":{"line":474,"column":2},"end":{"line":474,"column":2}},{"start":{"line":474,"column":2},"end":{"line":474,"column":2}}]},"26":{"line":474,"type":"cond-expr","locations":[{"start":{"line":474,"column":46},"end":{"line":474,"column":49}},{"start":{"line":474,"column":52},"end":{"line":474,"column":59}}]},"27":{"line":475,"type":"if","locations":[{"start":{"line":475,"column":2},"end":{"line":475,"column":2}},{"start":{"line":475,"column":2},"end":{"line":475,"column":2}}]},"28":{"line":476,"type":"if","locations":[{"start":{"line":476,"column":2},"end":{"line":476,"column":2}},{"start":{"line":476,"column":2},"end":{"line":476,"column":2}}]},"29":{"line":494,"type":"if","locations":[{"start":{"line":494,"column":2},"end":{"line":494,"column":2}},{"start":{"line":494,"column":2},"end":{"line":494,"column":2}}]},"30":{"line":497,"type":"if","locations":[{"start":{"line":497,"column":7},"end":{"line":497,"column":7}},{"start":{"line":497,"column":7},"end":{"line":497,"column":7}}]},"31":{"line":532,"type":"if","locations":[{"start":{"line":532,"column":2},"end":{"line":532,"column":2}},{"start":{"line":532,"column":2},"end":{"line":532,"column":2}}]}},"code":["'use strict'","","var EventLite = require('event-lite')","","// Local modules.","var memoryAdapter = require('./adapter/adapters/memory')","var AdapterSingleton = require('./adapter/singleton')","var validate = require('./record_type/validate')","var ensureTypes = require('./record_type/ensure_types')","var promise = require('./common/promise')","var dispatch = require('./dispatch')","var middlewares = dispatch.middlewares","","// Static re-exports.","var Adapter = require('./adapter')","var common = require('./common')","var assign = common.assign","var methods = common.methods","var events = common.events","","","/**"," * This is the default export of the `fortune` package. It implements a"," * [subset of `EventEmitter`](https://www.npmjs.com/package/event-lite), and it"," * has a few static properties attached to it that may be useful to access:"," *"," * - `Adapter`: abstract base class for the Adapter."," * - `adapters`: included adapters, defaults to memory adapter."," * - `errors`: custom error types, useful for throwing errors in I/O hooks."," * - `methods`: a hash that maps to string constants. Available are: `find`,"," *   `create`, `update`, and `delete`."," * - `events`: names for events on the Fortune instance. Available are:"," *   `change`, `sync`, `connect`, `disconnect`, `failure`."," * - `message`: a function which accepts the arguments (`id`, `language`,"," *   `data`). It has properties keyed by two-letter language codes, which by"," *   default includes only `en`."," * - `Promise`: assign this to set the Promise implementation that Fortune"," *   will use."," */","function Fortune (recordTypes, options) {","  if (!(this instanceof Fortune))","    return new Fortune(recordTypes, options)","","  this.constructor(recordTypes, options)","}","","","// Inherit from EventLite class.","Fortune.prototype = new EventLite()","","","/**"," * Create a new instance, the only required input is record type definitions."," * The first argument must be an object keyed by name, valued by definition"," * objects."," *"," * Here are some example field definitions:"," *"," * ```js"," * {"," *   // Top level keys are names of record types."," *   person: {"," *     // Data types may be singular or plural."," *     name: String, // Singular string value."," *     luckyNumbers: Array(Number), // Array of numbers."," *"," *     // Relationships may be singular or plural. They must specify which"," *     // record type it refers to, and may also specify an inverse field"," *     // which is optional but recommended."," *     pets: [ Array('animal'), 'owner' ], // Has many."," *     employer: [ 'organization', 'employees' ], // Belongs to."," *     likes: Array('thing'), // Has many (no inverse)."," *     doing: 'activity', // Belongs to (no inverse)."," *"," *     // Reflexive relationships are relationships in which the record type,"," *     // the first position, is of the same type."," *     following: [ Array('person'), 'followers' ],"," *     followers: [ Array('person'), 'following' ],"," *"," *     // Mutual relationships are relationships in which the inverse,"," *     // the second position, is defined to be the same field on the same"," *     // record type."," *     friends: [ Array('person'), 'friends' ],"," *     spouse: [ 'person', 'spouse' ]"," *   }"," * }"," * ```"," *"," * The above shows the shorthand which will be transformed internally to a"," * more verbose data structure. The internal structure is as follows:"," *"," * ```js"," * {"," *   person: {"," *     // A singular value."," *     name: { type: String },"," *"," *     // An array containing values of a single type."," *     luckyNumbers: { type: Number, isArray: true },"," *"," *     // Creates a to-many link to `animal` record type. If the field `owner`"," *     // on the `animal` record type is not an array, this is a many-to-one"," *     // relationship, otherwise it is many-to-many."," *     pets: { link: 'animal', isArray: true, inverse: 'owner' },"," *"," *     // The `min` and `max` keys are open to interpretation by the specific"," *     // adapter, which may introspect the field definition."," *     thing: { type: Number, min: 0, max: 100 },"," *"," *     // Nested field definitions are invalid. Use `Object` type instead."," *     nested: { thing: { ... } } // Will throw an error."," *   }"," * }"," * ```"," *"," * The allowed native types are `String`, `Number`, `Boolean`, `Date`,"," * `Object`, and `Buffer`. Note that the `Object` type should be a JSON"," * serializable object that may be persisted. The only other allowed type is"," * a `Function`, which may be used to define custom types."," *"," * A custom type function should accept one argument, the value, and return a"," * boolean based on whether the value is valid for the type or not. It may"," * optionally have a method `compare`, used for sorting in the built-in"," * adapters. The `compare` method should have the same signature as the native"," * `Array.prototype.sort`."," *"," * A custom type function must inherit one of the allowed native types. For"," * example:"," *"," * ```js"," * function Integer (x) { return (x | 0) === x }"," * Integer.prototype = new Number()"," * ```"," *"," * The options object may contain the following keys:"," *"," * - `adapter`: configuration array for the adapter. The default type is the"," *   memory adapter. If the value is not an array, its settings will be"," *   considered omitted."," *"," *   ```js"," *   {"," *     adapter: ["," *       // Must be a class that extends `Fortune.Adapter`, or a function"," *       // that accepts the Adapter class and returns a subclass. Required."," *       Adapter => { ... },"," *"," *       // An options object that is specific to the adapter. Optional."," *       { ... }"," *     ]"," *   }"," *   ```"," *"," * - `hooks`: keyed by type name, valued by an array containing an `input`"," *   and/or `output` function at indices `0` and `1` respectively."," *"," *   A hook function takes at least two arguments, the internal `context`"," *   object and a single `record`. A special case is the `update` argument for"," *   the `update` method."," *"," *   There are only two kinds of hooks, before a record is written (input),"," *   and after a record is read (output), both are optional. If an error occurs"," *   within a hook function, it will be forwarded to the response. Use typed"," *   errors to provide the appropriate feedback."," *"," *   For a create request, the input hook may return the second argument"," *   `record` either synchronously, or asynchronously as a Promise. The return"," *   value of a delete request is inconsequential, but it may return a value or"," *   a Promise. The `update` method accepts a `update` object as a third"," *   parameter, which may be returned synchronously or as a Promise."," *"," *   An example hook to apply a timestamp on a record before creation, and"," *   displaying the timestamp in the server's locale:"," *"," *   ```js"," *   {"," *     recordType: ["," *       (context, record, update) => {"," *         switch (context.request.method) {"," *           case 'create':"," *             record.timestamp = new Date()"," *             return record"," *           case 'update': return update"," *           case 'delete': return null"," *         }"," *       },"," *       (context, record) => {"," *         record.timestamp = record.timestamp.toLocaleString()"," *         return record"," *       }"," *     ]"," *   }"," *   ```"," *"," *   Requests to update a record will **NOT** have the updates already applied"," *   to the record."," *"," *   Another feature of the input hook is that it will have access to a"," *   temporary field `context.transaction`. This is useful for ensuring that"," *   bulk write operations are all or nothing. Each request is treated as a"," *   single transaction."," *"," * - `documentation`: an object mapping names to descriptions. Note that there"," *   is only one namepspace, so field names can only have one description."," *   This is optional, but useful for the HTML serializer, which also emits"," *   this information as micro-data."," *"," *   ```js"," *   {"," *     documentation: {"," *       recordType: 'Description of a type.',"," *       fieldName: 'Description of a field.',"," *       anotherFieldName: {"," *         en: 'Two letter language code indicates localized description.'"," *       }"," *     }"," *   }"," *   ```"," *"," * - `settings`: internal settings to configure."," *"," *   ```js"," *   {"," *     settings: {"," *       // Whether or not to enforce referential integrity. Default: `true`"," *       // for server, `false` for browser."," *       enforceLinks: true,"," *"," *       // Name of the application used for display purposes."," *       name: 'My Awesome Application',"," *"," *       // Description of the application used for display purposes."," *       description: 'media type \"application/vnd.micro+json\"'"," *     }"," *   }"," *   ```"," *"," * The return value of the constructor is the instance itself."," *"," * @param {Object} [recordTypes]"," * @param {Object} [options]"," * @return {Fortune}"," */","Fortune.prototype.constructor = function Fortune (recordTypes, options) {","  var self = this","  var plainObject = {}","  var adapter, method, stack, flows, type, hooks, i, j","","  if (recordTypes === void 0) recordTypes = {}","  if (options === void 0) options = {}","","  if (!('adapter' in options)) options.adapter = [ memoryAdapter(Adapter) ]","  if (!('settings' in options)) options.settings = {}","  if (!('hooks' in options)) options.hooks = {}","  if (!('enforceLinks' in options.settings))","    options.settings.enforceLinks = true","","  // Bind middleware methods to instance.","  flows = {}","  for (method in methods) {","    stack = [ middlewares[method], middlewares.include, middlewares.end ]","","    for (i = 0, j = stack.length; i < j; i++)","      stack[i] = bindMiddleware(self, stack[i])","","    flows[methods[method]] = stack","  }","","  hooks = options.hooks","","  // Validate hooks.","  for (type in hooks) {","    if (!recordTypes.hasOwnProperty(type)) throw new Error(","      'Attempted to define hook on \"' + type + '\" type ' +","      'which does not exist.')","    if (!Array.isArray(hooks[type]))","      throw new TypeError('Hook value for \"' + type + '\" type ' +","        'must be an array.')","  }","","  // Validate record types.","  for (type in recordTypes) {","    if (type in plainObject)","      throw new Error('Can not define type name \"' + type +","        '\" which is in Object.prototype.')","","    validate(recordTypes[type])","    if (!hooks.hasOwnProperty(type)) hooks[type] = []","  }","","  /*!","   * Adapter singleton that is coupled to the Fortune instance.","   *","   * @type {Adapter}","   */","  adapter = new AdapterSingleton({","    adapter: options.adapter,","    recordTypes: recordTypes,","    hooks: hooks","  })","","  // Internal properties.","  Object.defineProperties(self, {","    // 0 = not started, 1 = started, 2 = done.","    connectionStatus: { value: 0, writable: true },","","    // Configuration settings.","    options: { value: options },","    hooks: { value: hooks },","    recordTypes: { value: recordTypes, enumerable: true },","","    // Singleton instances.","    adapter: { value: adapter, enumerable: true, configurable: true },","","    // Dispatch.","    flows: { value: flows }","  })","}","","","/**"," * This is the primary method for initiating a request. The options object"," * may contain the following keys:"," *"," * - `method`: The method is a either a function or a constant, which is keyed"," *   under `Fortune.common.methods` and may be one of `find`, `create`,"," *   `update`, or `delete`. Default: `find`."," *"," * - `type`: Name of a type. **Required**."," *"," * - `ids`: An array of IDs. Used for `find` and `delete` methods only. This is"," *   optional for the `find` method."," *"," * - `include`: A 2-dimensional array specifying links to include. The first"," *   dimension is a list, the second dimension is depth. For example:"," *   `[['comments'], ['comments', 'author', { ... }]]`. The last item within"," *   the list may be an `options` object, useful for specifying how the"," *   included records should appear. Optional."," *"," * - `options`: Exactly the same as the [`find` method](#adapter-find)"," *   options in the adapter. These options do not apply on methods other than"," *   `find`, and do not affect the records returned from `include`. Optional."," *"," * - `meta`: Meta-information object of the request. Optional."," *"," * - `payload`: Payload of the request. **Required** for `create` and `update`"," *   methods only, and must be an array of objects. The objects must be the"," *   records to create, or update objects as expected by the Adapter."," *"," * The response object may contain the following keys:"," *"," * - `meta`: Meta-info of the response."," *"," * - `payload`: An object containing the following keys:"," *   - `records`: An array of records returned."," *   - `count`: Total number of records without options applied (only for"," *     responses to the `find` method)."," *   - `include`: An object keyed by type, valued by arrays of included"," *     records."," *"," * The resolved response object should always be an instance of a response"," * type."," *"," * @param {Object} options"," * @return {Promise}"," */","Fortune.prototype.request = function (options) {","  var self = this","  var connectionStatus = self.connectionStatus","  var Promise = promise.Promise","","  if (connectionStatus === 0)","    return self.connect()","    .then(function () { return dispatch.call(self, options) })","","  else if (connectionStatus === 1)","    return new Promise(function (resolve, reject) {","      // Wait for changes to connection status.","      self.once(events.failure, function () {","        reject(new Error('Connection failed.'))","      })","      self.once(events.connect, function () {","        resolve(dispatch.call(self, options))","      })","    })","","  return dispatch.call(self, options)","}","","","/**"," * The `find` method retrieves record by type given IDs, querying options,"," * or both. This is a convenience method that wraps around the `request`"," * method, see the `request` method for documentation on its arguments."," *"," * @param {String} type"," * @param {*|*[]} [ids]"," * @param {Object} [options]"," * @param {Array[]} [include]"," * @param {Object} [meta]"," * @return {Promise}"," */","Fortune.prototype.find = function (type, ids, options, include, meta) {","  var obj = { method: methods.find, type: type }","","  if (ids) obj.ids = Array.isArray(ids) ? ids : [ ids ]","  if (options) obj.options = options","  if (include) obj.include = include","  if (meta) obj.meta = meta","","  return this.request(obj)","}","","","/**"," * The `create` method creates records by type given records to create. This"," * is a convenience method that wraps around the `request` method, see the"," * request `method` for documentation on its arguments."," *"," * @param {String} type"," * @param {Object|Object[]} records"," * @param {Array[]} [include]"," * @param {Object} [meta]"," * @return {Promise}"," */","Fortune.prototype.create = function (type, records, include, meta) {","  var options = { method: methods.create, type: type,","    payload: Array.isArray(records) ? records : [ records ] }","","  if (include) options.include = include","  if (meta) options.meta = meta","","  return this.request(options)","}","","","/**"," * The `update` method updates records by type given update objects. See the"," * [Adapter.update](#adapter-update) method for the format of the update"," * objects. This is a convenience method that wraps around the `request`"," * method, see the `request` method for documentation on its arguments."," *"," * @param {String} type"," * @param {Object|Object[]} updates"," * @param {Array[]} [include]"," * @param {Object} [meta]"," * @return {Promise}"," */","Fortune.prototype.update = function (type, updates, include, meta) {","  var options = { method: methods.update, type: type,","    payload: Array.isArray(updates) ? updates : [ updates ] }","","  if (include) options.include = include","  if (meta) options.meta = meta","","  return this.request(options)","}","","","/**"," * The `delete` method deletes records by type given IDs (optional). This is a"," * convenience method that wraps around the `request` method, see the `request`"," * method for documentation on its arguments."," *"," * @param {String} type"," * @param {*|*[]} [ids]"," * @param {Array[]} [include]"," * @param {Object} [meta]"," * @return {Promise}"," */","Fortune.prototype.delete = function (type, ids, include, meta) {","  var options = { method: methods.delete, type: type }","","  if (ids) options.ids = Array.isArray(ids) ? ids : [ ids ]","  if (include) options.include = include","  if (meta) options.meta = meta","","  return this.request(options)","}","","","/**"," * This method does not need to be called manually, it is automatically called"," * upon the first request if it is not connected already. However, it may be"," * useful if manually reconnect is needed. The resolved value is the instance"," * itself."," *"," * @return {Promise}"," */","Fortune.prototype.connect = function () {","  var self = this","  var Promise = promise.Promise","","  if (self.connectionStatus === 1)","    return Promise.reject(new Error('Connection is in progress.'))","","  else if (self.connectionStatus === 2)","    return Promise.reject(new Error('Connection is already done.'))","","  self.connectionStatus = 1","","  return new Promise(function (resolve, reject) {","    Object.defineProperty(self, 'denormalizedFields', {","      value: ensureTypes(self.recordTypes),","      writable: true,","      configurable: true","    })","","    self.adapter.connect().then(function () {","      self.connectionStatus = 2","      self.emit(events.connect)","      return resolve(self)","    }, function (error) {","      self.connectionStatus = 0","      self.emit(events.failure)","      return reject(error)","    })","  })","}","","","/**"," * Close adapter connection, and reset connection state. The resolved value is"," * the instance itself."," *"," * @return {Promise}"," */","Fortune.prototype.disconnect = function () {","  var self = this","  var Promise = promise.Promise","","  if (self.connectionStatus !== 2)","    return Promise.reject(new Error('Instance has not been connected.'))","","  self.connectionStatus = 1","","  return new Promise(function (resolve, reject) {","    return self.adapter.disconnect().then(function () {","      self.connectionStatus = 0","      self.emit(events.disconnect)","      return resolve(self)","    }, function (error) {","      self.connectionStatus = 2","      self.emit(events.failure)","      return reject(error)","    })","  })","}","","","// Useful for dependency injection. All instances of Fortune have the same","// common internal dependencies.","Fortune.prototype.common = common","","","// Assign useful static properties to the default export.","assign(Fortune, {","  Adapter: Adapter,","  adapters: {","    memory: memoryAdapter(Adapter)","  },","  errors: common.errors,","  message: common.message,","  methods: methods,","  events: events","})","","","// Set the `Promise` property.","Object.defineProperty(Fortune, 'Promise', {","  enumerable: true,","  get: function () {","    return promise.Promise","  },","  set: function (value) {","    promise.Promise = value","  }","})","","","// Internal helper function.","function bindMiddleware (scope, method) {","  return function (x) {","    return method.call(scope, x)","  }","}","","","module.exports = Fortune",""],"l":{"3":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"15":1,"16":1,"17":1,"18":1,"19":1,"40":1,"41":0,"42":0,"44":0,"49":1,"244":1,"245":0,"246":0,"247":0,"249":0,"250":0,"252":0,"253":0,"254":0,"255":0,"256":0,"259":0,"260":0,"261":0,"263":0,"264":0,"266":0,"269":0,"272":0,"273":0,"276":0,"277":0,"282":0,"283":0,"284":0,"287":0,"288":0,"296":0,"303":0,"367":1,"368":0,"369":0,"370":0,"372":0,"373":0,"374":0,"376":0,"377":0,"379":0,"380":0,"382":0,"383":0,"387":0,"403":1,"404":0,"406":0,"407":0,"408":0,"409":0,"411":0,"426":1,"427":0,"430":0,"431":0,"433":0,"449":1,"450":0,"453":0,"454":0,"456":0,"471":1,"472":0,"474":0,"475":0,"476":0,"478":0,"490":1,"491":0,"492":0,"494":0,"495":0,"497":0,"498":0,"500":0,"502":0,"503":0,"509":0,"510":0,"511":0,"512":0,"514":0,"515":0,"516":0,"528":1,"529":0,"530":0,"532":0,"533":0,"535":0,"537":0,"538":0,"539":0,"540":0,"541":0,"543":0,"544":0,"545":0,"553":1,"557":1,"570":1,"573":2,"576":0,"582":1,"583":0,"584":0,"589":1}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/adapter/adapters/memory/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/adapter/adapters/memory/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":2,"17":2,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":2,"26":0,"27":0,"28":0,"29":2,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":2,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":2,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":2,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":2,"119":2,"120":2},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"f":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"(anonymous_1)","line":18,"loc":{"start":{"line":18,"column":17},"end":{"line":18,"column":36}}},"2":{"name":"MemoryAdapter","line":19,"loc":{"start":{"line":19,"column":2},"end":{"line":19,"column":38}}},"3":{"name":"(anonymous_3)","line":28,"loc":{"start":{"line":28,"column":36},"end":{"line":28,"column":48}}},"4":{"name":"(anonymous_4)","line":42,"loc":{"start":{"line":42,"column":39},"end":{"line":42,"column":51}}},"5":{"name":"(anonymous_5)","line":50,"loc":{"start":{"line":50,"column":33},"end":{"line":50,"column":69}}},"6":{"name":"(anonymous_6)","line":81,"loc":{"start":{"line":81,"column":35},"end":{"line":81,"column":66}}},"7":{"name":"(anonymous_7)","line":94,"loc":{"start":{"line":94,"column":27},"end":{"line":94,"column":45}}},"8":{"name":"(anonymous_8)","line":126,"loc":{"start":{"line":126,"column":40},"end":{"line":126,"column":58}}},"9":{"name":"(anonymous_9)","line":132,"loc":{"start":{"line":132,"column":35},"end":{"line":132,"column":60}}},"10":{"name":"(anonymous_10)","line":164,"loc":{"start":{"line":164,"column":35},"end":{"line":164,"column":56}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":57}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":46}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":48}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":33}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":38}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":34}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":39}},"9":{"start":{"line":18,"column":0},"end":{"line":197,"column":1}},"10":{"start":{"line":19,"column":2},"end":{"line":24,"column":3}},"11":{"start":{"line":20,"column":4},"end":{"line":20,"column":34}},"12":{"start":{"line":21,"column":4},"end":{"line":21,"column":40}},"13":{"start":{"line":21,"column":23},"end":{"line":21,"column":40}},"14":{"start":{"line":22,"column":4},"end":{"line":23,"column":40}},"15":{"start":{"line":23,"column":6},"end":{"line":23,"column":40}},"16":{"start":{"line":26,"column":2},"end":{"line":26,"column":41}},"17":{"start":{"line":28,"column":2},"end":{"line":39,"column":3}},"18":{"start":{"line":29,"column":4},"end":{"line":29,"column":33}},"19":{"start":{"line":30,"column":4},"end":{"line":30,"column":38}},"20":{"start":{"line":31,"column":4},"end":{"line":31,"column":12}},"21":{"start":{"line":33,"column":4},"end":{"line":33,"column":16}},"22":{"start":{"line":35,"column":4},"end":{"line":36,"column":24}},"23":{"start":{"line":36,"column":6},"end":{"line":36,"column":24}},"24":{"start":{"line":38,"column":4},"end":{"line":38,"column":28}},"25":{"start":{"line":42,"column":2},"end":{"line":47,"column":3}},"26":{"start":{"line":43,"column":4},"end":{"line":43,"column":33}},"27":{"start":{"line":45,"column":4},"end":{"line":45,"column":18}},"28":{"start":{"line":46,"column":4},"end":{"line":46,"column":28}},"29":{"start":{"line":50,"column":2},"end":{"line":78,"column":3}},"30":{"start":{"line":51,"column":4},"end":{"line":51,"column":33}},"31":{"start":{"line":52,"column":4},"end":{"line":52,"column":19}},"32":{"start":{"line":53,"column":4},"end":{"line":53,"column":38}},"33":{"start":{"line":54,"column":4},"end":{"line":54,"column":34}},"34":{"start":{"line":55,"column":4},"end":{"line":55,"column":34}},"35":{"start":{"line":56,"column":4},"end":{"line":56,"column":20}},"36":{"start":{"line":57,"column":4},"end":{"line":57,"column":24}},"37":{"start":{"line":59,"column":4},"end":{"line":59,"column":68}},"38":{"start":{"line":59,"column":28},"end":{"line":59,"column":68}},"39":{"start":{"line":61,"column":4},"end":{"line":75,"column":65}},"40":{"start":{"line":61,"column":13},"end":{"line":72,"column":5}},"41":{"start":{"line":62,"column":6},"end":{"line":62,"column":17}},"42":{"start":{"line":63,"column":6},"end":{"line":71,"column":7}},"43":{"start":{"line":64,"column":8},"end":{"line":64,"column":31}},"44":{"start":{"line":67,"column":8},"end":{"line":67,"column":29}},"45":{"start":{"line":68,"column":8},"end":{"line":68,"column":31}},"46":{"start":{"line":70,"column":8},"end":{"line":70,"column":59}},"47":{"start":{"line":74,"column":9},"end":{"line":75,"column":65}},"48":{"start":{"line":75,"column":6},"end":{"line":75,"column":65}},"49":{"start":{"line":77,"column":4},"end":{"line":77,"column":72}},"50":{"start":{"line":81,"column":2},"end":{"line":129,"column":3}},"51":{"start":{"line":82,"column":4},"end":{"line":82,"column":33}},"52":{"start":{"line":83,"column":4},"end":{"line":83,"column":19}},"53":{"start":{"line":84,"column":4},"end":{"line":84,"column":30}},"54":{"start":{"line":85,"column":4},"end":{"line":85,"column":52}},"55":{"start":{"line":86,"column":4},"end":{"line":86,"column":38}},"56":{"start":{"line":87,"column":4},"end":{"line":87,"column":49}},"57":{"start":{"line":88,"column":4},"end":{"line":88,"column":34}},"58":{"start":{"line":89,"column":4},"end":{"line":89,"column":39}},"59":{"start":{"line":91,"column":4},"end":{"line":91,"column":24}},"60":{"start":{"line":91,"column":15},"end":{"line":91,"column":24}},"61":{"start":{"line":92,"column":4},"end":{"line":92,"column":28}},"62":{"start":{"line":94,"column":4},"end":{"line":96,"column":6}},"63":{"start":{"line":95,"column":6},"end":{"line":95,"column":49}},"64":{"start":{"line":99,"column":4},"end":{"line":106,"column":5}},"65":{"start":{"line":100,"column":6},"end":{"line":100,"column":25}},"66":{"start":{"line":101,"column":6},"end":{"line":101,"column":29}},"67":{"start":{"line":103,"column":6},"end":{"line":105,"column":57}},"68":{"start":{"line":104,"column":8},"end":{"line":105,"column":57}},"69":{"start":{"line":109,"column":4},"end":{"line":112,"column":5}},"70":{"start":{"line":110,"column":6},"end":{"line":110,"column":25}},"71":{"start":{"line":111,"column":6},"end":{"line":111,"column":45}},"72":{"start":{"line":115,"column":4},"end":{"line":124,"column":5}},"73":{"start":{"line":116,"column":6},"end":{"line":116,"column":35}},"74":{"start":{"line":118,"column":6},"end":{"line":123,"column":7}},"75":{"start":{"line":119,"column":8},"end":{"line":119,"column":55}},"76":{"start":{"line":121,"column":8},"end":{"line":122,"column":35}},"77":{"start":{"line":122,"column":10},"end":{"line":122,"column":35}},"78":{"start":{"line":126,"column":4},"end":{"line":128,"column":7}},"79":{"start":{"line":127,"column":6},"end":{"line":127,"column":50}},"80":{"start":{"line":132,"column":2},"end":{"line":161,"column":3}},"81":{"start":{"line":133,"column":4},"end":{"line":133,"column":33}},"82":{"start":{"line":134,"column":4},"end":{"line":134,"column":19}},"83":{"start":{"line":135,"column":4},"end":{"line":135,"column":38}},"84":{"start":{"line":136,"column":4},"end":{"line":136,"column":34}},"85":{"start":{"line":137,"column":4},"end":{"line":137,"column":17}},"86":{"start":{"line":138,"column":4},"end":{"line":138,"column":32}},"87":{"start":{"line":140,"column":4},"end":{"line":140,"column":67}},"88":{"start":{"line":140,"column":25},"end":{"line":140,"column":67}},"89":{"start":{"line":142,"column":4},"end":{"line":158,"column":5}},"90":{"start":{"line":143,"column":6},"end":{"line":143,"column":25}},"91":{"start":{"line":144,"column":6},"end":{"line":144,"column":29}},"92":{"start":{"line":145,"column":6},"end":{"line":145,"column":29}},"93":{"start":{"line":147,"column":6},"end":{"line":147,"column":27}},"94":{"start":{"line":147,"column":19},"end":{"line":147,"column":27}},"95":{"start":{"line":149,"column":6},"end":{"line":149,"column":13}},"96":{"start":{"line":150,"column":6},"end":{"line":150,"column":52}},"97":{"start":{"line":152,"column":6},"end":{"line":152,"column":33}},"98":{"start":{"line":155,"column":6},"end":{"line":155,"column":27}},"99":{"start":{"line":157,"column":6},"end":{"line":157,"column":59}},"100":{"start":{"line":160,"column":4},"end":{"line":160,"column":33}},"101":{"start":{"line":164,"column":2},"end":{"line":186,"column":3}},"102":{"start":{"line":165,"column":4},"end":{"line":165,"column":33}},"103":{"start":{"line":166,"column":4},"end":{"line":166,"column":34}},"104":{"start":{"line":167,"column":4},"end":{"line":167,"column":17}},"105":{"start":{"line":168,"column":4},"end":{"line":168,"column":16}},"106":{"start":{"line":170,"column":4},"end":{"line":170,"column":70}},"107":{"start":{"line":170,"column":28},"end":{"line":170,"column":70}},"108":{"start":{"line":172,"column":4},"end":{"line":183,"column":5}},"109":{"start":{"line":172,"column":13},"end":{"line":178,"column":5}},"110":{"start":{"line":173,"column":6},"end":{"line":173,"column":17}},"111":{"start":{"line":174,"column":6},"end":{"line":177,"column":7}},"112":{"start":{"line":175,"column":8},"end":{"line":175,"column":29}},"113":{"start":{"line":176,"column":8},"end":{"line":176,"column":15}},"114":{"start":{"line":180,"column":9},"end":{"line":183,"column":5}},"115":{"start":{"line":181,"column":6},"end":{"line":181,"column":27}},"116":{"start":{"line":182,"column":6},"end":{"line":182,"column":13}},"117":{"start":{"line":185,"column":4},"end":{"line":185,"column":33}},"118":{"start":{"line":189,"column":2},"end":{"line":189,"column":31}},"119":{"start":{"line":192,"column":2},"end":{"line":194,"column":3}},"120":{"start":{"line":196,"column":2},"end":{"line":196,"column":22}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":4}},{"start":{"line":21,"column":4},"end":{"line":21,"column":4}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":4}},{"start":{"line":22,"column":4},"end":{"line":22,"column":4}}]},"3":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":59,"column":4}},{"start":{"line":59,"column":4},"end":{"line":59,"column":4}}]},"4":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":8},"end":{"line":59,"column":11}},{"start":{"line":59,"column":15},"end":{"line":59,"column":26}}]},"5":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":61,"column":4}},{"start":{"line":61,"column":4},"end":{"line":61,"column":4}}]},"6":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":6},"end":{"line":63,"column":6}},{"start":{"line":63,"column":6},"end":{"line":63,"column":6}}]},"7":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":4},"end":{"line":91,"column":4}},{"start":{"line":91,"column":4},"end":{"line":91,"column":4}}]},"8":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":6},"end":{"line":103,"column":6}},{"start":{"line":103,"column":6},"end":{"line":103,"column":6}}]},"9":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":4},"end":{"line":115,"column":4}},{"start":{"line":115,"column":4},"end":{"line":115,"column":4}}]},"10":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":6},"end":{"line":118,"column":6}},{"start":{"line":118,"column":6},"end":{"line":118,"column":6}}]},"11":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":4},"end":{"line":140,"column":4}},{"start":{"line":140,"column":4},"end":{"line":140,"column":4}}]},"12":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":6},"end":{"line":147,"column":6}},{"start":{"line":147,"column":6},"end":{"line":147,"column":6}}]},"13":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":4},"end":{"line":170,"column":4}},{"start":{"line":170,"column":4},"end":{"line":170,"column":4}}]},"14":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":8},"end":{"line":170,"column":11}},{"start":{"line":170,"column":15},"end":{"line":170,"column":26}}]},"15":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":4},"end":{"line":172,"column":4}},{"start":{"line":172,"column":4},"end":{"line":172,"column":4}}]},"16":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":6},"end":{"line":174,"column":6}},{"start":{"line":174,"column":6},"end":{"line":174,"column":6}}]}},"code":["'use strict'","","var applyUpdate = require('../../../common/apply_update')","var map = require('../../../common/array/map')","var promise = require('../../../common/promise')","","var common = require('../common')","var applyOptions = common.applyOptions","","var helpers = require('./helpers')","var inputRecord = helpers.inputRecord","var outputRecord = helpers.outputRecord","","","/**"," * Memory adapter."," */","module.exports = function (Adapter) {","  function MemoryAdapter (properties) {","    Adapter.call(this, properties)","    if (!this.options) this.options = {}","    if (!('recordsPerType' in this.options))","      this.options.recordsPerType = 1000","  }","","  MemoryAdapter.prototype = new Adapter()","","  MemoryAdapter.prototype.connect = function () {","    var Promise = promise.Promise","    var recordTypes = this.recordTypes","    var type","","    this.db = {}","","    for (type in recordTypes)","      this.db[type] = {}","","    return Promise.resolve()","  }","","","  MemoryAdapter.prototype.disconnect = function () {","    var Promise = promise.Promise","","    delete this.db","    return Promise.resolve()","  }","","","  MemoryAdapter.prototype.find = function (type, ids, options, meta) {","    var Promise = promise.Promise","    var self = this","    var recordTypes = self.recordTypes","    var fields = recordTypes[type]","    var collection = self.db[type]","    var records = []","    var i, j, id, record","","    if (ids && !ids.length) return Adapter.prototype.find.call(self)","","    if (ids) for (i = 0, j = ids.length; i < j; i++) {","      id = ids[i]","      if (collection.hasOwnProperty(id)) {","        record = collection[id]","","        // LRU update.","        delete collection[id]","        collection[id] = record","","        records.push(outputRecord.call(self, type, record))","      }","    }","","    else for (id in collection)","      records.push(outputRecord.call(self, type, collection[id]))","","    return Promise.resolve(applyOptions(fields, records, options, meta))","  }","","","  MemoryAdapter.prototype.create = function (type, records, meta) {","    var Promise = promise.Promise","    var self = this","    var message = self.message","    var recordsPerType = self.options.recordsPerType","    var primaryKey = self.keys.primary","    var ConflictError = self.errors.ConflictError","    var collection = self.db[type]","    var i, j, record, id, ids, language","","    if (!meta) meta = {}","    language = meta.language","","    records = map(records, function (record) {","      return inputRecord.call(self, type, record)","    })","","    // First check for collisions.","    for (i = 0, j = records.length; i < j; i++) {","      record = records[i]","      id = record[primaryKey]","","      if (collection.hasOwnProperty(id))","        return Promise.reject(new ConflictError(","          message('RecordExists', language, { id: id })))","    }","","    // Then save it to memory.","    for (i = 0, j = records.length; i < j; i++) {","      record = records[i]","      collection[record[primaryKey]] = record","    }","","    // Clear least recently used records.","    if (recordsPerType) {","      ids = Object.keys(collection)","","      if (ids.length > recordsPerType) {","        ids = ids.slice(0, ids.length - recordsPerType)","","        for (i = 0, j = ids.length; i < j; i++)","          delete collection[ids[i]]","      }","    }","","    return Promise.resolve(map(records, function (record) {","      return outputRecord.call(self, type, record)","    }))","  }","","","  MemoryAdapter.prototype.update = function (type, updates) {","    var Promise = promise.Promise","    var self = this","    var primaryKey = self.keys.primary","    var collection = self.db[type]","    var count = 0","    var i, j, update, id, record","","    if (!updates.length) return Adapter.prototype.update.call(self)","","    for (i = 0, j = updates.length; i < j; i++) {","      update = updates[i]","      id = update[primaryKey]","      record = collection[id]","","      if (!record) continue","","      count++","      record = outputRecord.call(self, type, record)","","      applyUpdate(record, update)","","      // LRU update.","      delete collection[id]","","      collection[id] = inputRecord.call(self, type, record)","    }","","    return Promise.resolve(count)","  }","","","  MemoryAdapter.prototype.delete = function (type, ids) {","    var Promise = promise.Promise","    var collection = this.db[type]","    var count = 0","    var i, j, id","","    if (ids && !ids.length) return Adapter.prototype.delete.call(this)","","    if (ids) for (i = 0, j = ids.length; i < j; i++) {","      id = ids[i]","      if (collection[id]) {","        delete collection[id]","        count++","      }","    }","","    else for (id in collection) {","      delete collection[id]","      count++","    }","","    return Promise.resolve(count)","  }","","  // Expose utility functions.","  MemoryAdapter.common = common","","  // Expose features for introspection.","  MemoryAdapter.features = {","    logicalOperators: true","  }","","  return MemoryAdapter","}",""],"l":{"3":1,"4":1,"5":1,"7":1,"8":1,"10":1,"11":1,"12":1,"18":1,"19":1,"20":0,"21":0,"22":0,"23":0,"26":2,"28":2,"29":0,"30":0,"31":0,"33":0,"35":0,"36":0,"38":0,"42":2,"43":0,"45":0,"46":0,"50":2,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"59":0,"61":0,"62":0,"63":0,"64":0,"67":0,"68":0,"70":0,"74":0,"75":0,"77":0,"81":2,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"91":0,"92":0,"94":0,"95":0,"99":0,"100":0,"101":0,"103":0,"104":0,"109":0,"110":0,"111":0,"115":0,"116":0,"118":0,"119":0,"121":0,"122":0,"126":0,"127":0,"132":2,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"140":0,"142":0,"143":0,"144":0,"145":0,"147":0,"149":0,"150":0,"152":0,"155":0,"157":0,"160":0,"164":2,"165":0,"166":0,"167":0,"168":0,"170":0,"172":0,"173":0,"174":0,"175":0,"176":0,"180":0,"181":0,"182":0,"185":0,"189":2,"192":2,"196":2}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/apply_update.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/apply_update.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"applyUpdate","line":13,"loc":{"start":{"line":13,"column":17},"end":{"line":13,"column":55}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":13,"column":0},"end":{"line":27,"column":1}},"3":{"start":{"line":14,"column":2},"end":{"line":14,"column":11}},"4":{"start":{"line":16,"column":2},"end":{"line":17,"column":41}},"5":{"start":{"line":17,"column":4},"end":{"line":17,"column":41}},"6":{"start":{"line":19,"column":2},"end":{"line":22,"column":35}},"7":{"start":{"line":20,"column":4},"end":{"line":22,"column":35}},"8":{"start":{"line":24,"column":2},"end":{"line":26,"column":50}},"9":{"start":{"line":25,"column":4},"end":{"line":26,"column":50}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":21,"column":6},"end":{"line":21,"column":46}},{"start":{"line":22,"column":6},"end":{"line":22,"column":35}}]},"2":{"line":25,"type":"cond-expr","locations":[{"start":{"line":26,"column":6},"end":{"line":26,"column":45}},{"start":{"line":26,"column":48},"end":{"line":26,"column":50}}]}},"code":["'use strict'","","var pull = require('./array/pull')","","","/**"," * Given a record and an update object, apply the update on the record. Note"," * that the `operate` object is unapplied here."," *"," * @param {Object} record"," * @param {Object} update"," */","module.exports = function applyUpdate (record, update) {","  var field","","  for (field in update.replace)","    record[field] = update.replace[field]","","  for (field in update.push)","    record[field] = record[field] ?","      record[field].concat(update.push[field]) :","      [].concat(update.push[field])","","  for (field in update.pull)","    record[field] = record[field] ?","      pull(record[field], update.pull[field]) : []","}",""],"l":{"3":1,"13":1,"14":0,"16":0,"17":0,"19":0,"20":0,"24":0,"25":0}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/array/pull.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/array/pull.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"pull","line":11,"loc":{"start":{"line":11,"column":17},"end":{"line":11,"column":47}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":27,"column":1}},"2":{"start":{"line":12,"column":2},"end":{"line":12,"column":34}},"3":{"start":{"line":13,"column":2},"end":{"line":13,"column":10}},"4":{"start":{"line":15,"column":2},"end":{"line":18,"column":26}},"5":{"start":{"line":16,"column":4},"end":{"line":17,"column":28}},"6":{"start":{"line":17,"column":6},"end":{"line":17,"column":28}},"7":{"start":{"line":18,"column":7},"end":{"line":18,"column":26}},"8":{"start":{"line":21,"column":2},"end":{"line":24,"column":3}},"9":{"start":{"line":22,"column":4},"end":{"line":22,"column":20}},"10":{"start":{"line":23,"column":4},"end":{"line":23,"column":54}},"11":{"start":{"line":23,"column":37},"end":{"line":23,"column":54}},"12":{"start":{"line":26,"column":2},"end":{"line":26,"column":14}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":2},"end":{"line":15,"column":2}},{"start":{"line":15,"column":2},"end":{"line":15,"column":2}}]},"2":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":23,"column":4}},{"start":{"line":23,"column":4},"end":{"line":23,"column":4}}]}},"code":["'use strict'","","","/**"," * Pull primitive values from an array."," *"," * @param {*[]} array"," * @param {*|*[]} values"," * @return {*[]}"," */","module.exports = function pull (array, values) {","  var hash = {}, clone = [], value","  var i, j","","  if (Array.isArray(values))","    for (i = 0, j = values.length; i < j; i++)","      hash[values[i]] = true","  else hash[values] = true","","  // Need to iterate backwards.","  for (i = array.length; i--;) {","    value = array[i]","    if (!hash.hasOwnProperty(value)) clone.push(value)","  }","","  return clone","}",""],"l":{"11":1,"12":0,"13":0,"15":0,"16":0,"17":0,"18":0,"21":0,"22":0,"23":0,"26":0}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/array/map.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/array/map.js","s":{"1":1,"2":1,"3":1,"4":6,"5":1},"b":{},"f":{"1":1},"fnMap":{"1":{"name":"map","line":10,"loc":{"start":{"line":10,"column":17},"end":{"line":10,"column":42}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":17,"column":1}},"2":{"start":{"line":11,"column":2},"end":{"line":11,"column":25}},"3":{"start":{"line":13,"column":2},"end":{"line":14,"column":35}},"4":{"start":{"line":14,"column":4},"end":{"line":14,"column":35}},"5":{"start":{"line":16,"column":2},"end":{"line":16,"column":10}}},"branchMap":{},"code":["'use strict'","","/**"," * A more performant `Array.prototype.map`."," *"," * @param {*[]} array"," * @param {Function} fn"," * @return {Boolean}"," */","module.exports = function map (array, fn) {","  var i, j, k = [], l = 0","","  for (i = 0, j = array.length; i < j; i++)","    k[l++] = fn(array[i], i, array)","","  return k","}",""],"l":{"10":1,"11":1,"13":1,"14":6,"16":1}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/promise.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/promise.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":25}}},"branchMap":{},"code":["'use strict'","","// This object exists as a container for the Promise implementation. By","// default, it's the native one.","exports.Promise = Promise",""],"l":{"5":1}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/adapter/adapters/common.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/adapter/adapters/common.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":0,"73":0,"74":0,"75":1,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":1,"99":0,"100":0,"101":0,"102":0,"103":0,"104":1,"105":0,"106":0,"107":0,"108":0,"109":0,"110":1,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":1,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":1,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":1,"157":0,"158":0,"159":1,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0,0,0,0,0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"fnMap":{"1":{"name":"(anonymous_1)","line":18,"loc":{"start":{"line":18,"column":10},"end":{"line":18,"column":26}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":12},"end":{"line":19,"column":28}}},"3":{"name":"(anonymous_3)","line":20,"loc":{"start":{"line":20,"column":12},"end":{"line":20,"column":28}}},"4":{"name":"(anonymous_4)","line":25,"loc":{"start":{"line":25,"column":12},"end":{"line":25,"column":28}}},"5":{"name":"(anonymous_5)","line":26,"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":28}}},"6":{"name":"(anonymous_6)","line":27,"loc":{"start":{"line":27,"column":13},"end":{"line":27,"column":29}}},"7":{"name":"(anonymous_7)","line":28,"loc":{"start":{"line":28,"column":10},"end":{"line":28,"column":26}}},"8":{"name":"(anonymous_8)","line":33,"loc":{"start":{"line":33,"column":12},"end":{"line":33,"column":24}}},"9":{"name":"(anonymous_9)","line":41,"loc":{"start":{"line":41,"column":23},"end":{"line":41,"column":65}}},"10":{"name":"(anonymous_10)","line":65,"loc":{"start":{"line":65,"column":6},"end":{"line":65,"column":23}}},"11":{"name":"(anonymous_11)","line":67,"loc":{"start":{"line":67,"column":6},"end":{"line":67,"column":23}}},"12":{"name":"check","line":96,"loc":{"start":{"line":96,"column":0},"end":{"line":96,"column":28}}},"13":{"name":"(anonymous_13)","line":103,"loc":{"start":{"line":103,"column":29},"end":{"line":103,"column":45}}},"14":{"name":"checkValue","line":112,"loc":{"start":{"line":112,"column":0},"end":{"line":112,"column":41}}},"15":{"name":"(anonymous_15)","line":113,"loc":{"start":{"line":113,"column":9},"end":{"line":113,"column":22}}},"16":{"name":"(anonymous_16)","line":115,"loc":{"start":{"line":115,"column":14},"end":{"line":115,"column":27}}},"17":{"name":"match","line":121,"loc":{"start":{"line":121,"column":0},"end":{"line":121,"column":41}}},"18":{"name":"matchByLogicalAnd","line":150,"loc":{"start":{"line":150,"column":0},"end":{"line":150,"column":53}}},"19":{"name":"matchByLogicalOr","line":159,"loc":{"start":{"line":159,"column":0},"end":{"line":159,"column":52}}},"20":{"name":"matchByField","line":168,"loc":{"start":{"line":168,"column":0},"end":{"line":168,"column":46}}},"21":{"name":"matchByExistence","line":182,"loc":{"start":{"line":182,"column":0},"end":{"line":182,"column":51}}},"22":{"name":"matchByRange","line":202,"loc":{"start":{"line":202,"column":0},"end":{"line":202,"column":47}}},"23":{"name":"findByType","line":236,"loc":{"start":{"line":236,"column":0},"end":{"line":236,"column":27}}},"24":{"name":"(anonymous_24)","line":237,"loc":{"start":{"line":237,"column":9},"end":{"line":237,"column":25}}},"25":{"name":"compare","line":243,"loc":{"start":{"line":243,"column":0},"end":{"line":243,"column":32}}},"26":{"name":"(anonymous_26)","line":247,"loc":{"start":{"line":247,"column":9},"end":{"line":247,"column":25}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":50}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":45}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":45}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":52}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":43}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":44}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":39}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":29}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":23}},"10":{"start":{"line":14,"column":0},"end":{"line":14,"column":29}},"11":{"start":{"line":17,"column":0},"end":{"line":21,"column":1}},"12":{"start":{"line":18,"column":28},"end":{"line":18,"column":63}},"13":{"start":{"line":19,"column":30},"end":{"line":19,"column":49}},"14":{"start":{"line":20,"column":30},"end":{"line":20,"column":53}},"15":{"start":{"line":24,"column":0},"end":{"line":34,"column":1}},"16":{"start":{"line":25,"column":30},"end":{"line":25,"column":43}},"17":{"start":{"line":26,"column":30},"end":{"line":26,"column":66}},"18":{"start":{"line":27,"column":31},"end":{"line":27,"column":63}},"19":{"start":{"line":28,"column":28},"end":{"line":28,"column":61}},"20":{"start":{"line":33,"column":26},"end":{"line":33,"column":35}},"21":{"start":{"line":38,"column":0},"end":{"line":38,"column":31}},"22":{"start":{"line":41,"column":0},"end":{"line":93,"column":1}},"23":{"start":{"line":42,"column":2},"end":{"line":42,"column":75}},"24":{"start":{"line":43,"column":2},"end":{"line":43,"column":10}},"25":{"start":{"line":45,"column":2},"end":{"line":45,"column":28}},"26":{"start":{"line":45,"column":16},"end":{"line":45,"column":28}},"27":{"start":{"line":46,"column":2},"end":{"line":46,"column":22}},"28":{"start":{"line":46,"column":13},"end":{"line":46,"column":22}},"29":{"start":{"line":48,"column":2},"end":{"line":48,"column":26}},"30":{"start":{"line":51,"column":2},"end":{"line":59,"column":3}},"31":{"start":{"line":52,"column":4},"end":{"line":52,"column":29}},"32":{"start":{"line":53,"column":4},"end":{"line":53,"column":16}},"33":{"start":{"line":54,"column":4},"end":{"line":58,"column":5}},"34":{"start":{"line":55,"column":6},"end":{"line":55,"column":33}},"35":{"start":{"line":56,"column":6},"end":{"line":57,"column":28}},"36":{"start":{"line":57,"column":8},"end":{"line":57,"column":28}},"37":{"start":{"line":61,"column":2},"end":{"line":61,"column":24}},"38":{"start":{"line":63,"column":2},"end":{"line":81,"column":3}},"39":{"start":{"line":64,"column":4},"end":{"line":65,"column":57}},"40":{"start":{"line":65,"column":25},"end":{"line":65,"column":55}},"41":{"start":{"line":66,"column":4},"end":{"line":67,"column":56}},"42":{"start":{"line":67,"column":25},"end":{"line":67,"column":54}},"43":{"start":{"line":69,"column":4},"end":{"line":70,"column":66}},"44":{"start":{"line":70,"column":6},"end":{"line":70,"column":66}},"45":{"start":{"line":72,"column":4},"end":{"line":80,"column":5}},"46":{"start":{"line":73,"column":6},"end":{"line":73,"column":25}},"47":{"start":{"line":74,"column":6},"end":{"line":79,"column":7}},"48":{"start":{"line":75,"column":8},"end":{"line":75,"column":42}},"49":{"start":{"line":75,"column":34},"end":{"line":75,"column":42}},"50":{"start":{"line":76,"column":8},"end":{"line":78,"column":30}},"51":{"start":{"line":78,"column":10},"end":{"line":78,"column":30}},"52":{"start":{"line":83,"column":2},"end":{"line":84,"column":57}},"53":{"start":{"line":84,"column":4},"end":{"line":84,"column":57}},"54":{"start":{"line":86,"column":2},"end":{"line":88,"column":61}},"55":{"start":{"line":87,"column":4},"end":{"line":88,"column":61}},"56":{"start":{"line":90,"column":2},"end":{"line":90,"column":23}},"57":{"start":{"line":92,"column":2},"end":{"line":92,"column":16}},"58":{"start":{"line":96,"column":0},"end":{"line":109,"column":1}},"59":{"start":{"line":97,"column":2},"end":{"line":97,"column":13}},"60":{"start":{"line":99,"column":2},"end":{"line":99,"column":35}},"61":{"start":{"line":99,"column":18},"end":{"line":99,"column":35}},"62":{"start":{"line":100,"column":2},"end":{"line":100,"column":27}},"63":{"start":{"line":100,"column":13},"end":{"line":100,"column":27}},"64":{"start":{"line":101,"column":2},"end":{"line":101,"column":51}},"65":{"start":{"line":101,"column":20},"end":{"line":101,"column":51}},"66":{"start":{"line":103,"column":2},"end":{"line":105,"column":4}},"67":{"start":{"line":104,"column":4},"end":{"line":104,"column":49}},"68":{"start":{"line":106,"column":2},"end":{"line":106,"column":38}},"69":{"start":{"line":106,"column":15},"end":{"line":106,"column":38}},"70":{"start":{"line":108,"column":2},"end":{"line":108,"column":16}},"71":{"start":{"line":112,"column":0},"end":{"line":119,"column":1}},"72":{"start":{"line":113,"column":2},"end":{"line":118,"column":3}},"73":{"start":{"line":114,"column":4},"end":{"line":117,"column":48}},"74":{"start":{"line":116,"column":8},"end":{"line":116,"column":52}},"75":{"start":{"line":121,"column":0},"end":{"line":148,"column":1}},"76":{"start":{"line":122,"column":2},"end":{"line":122,"column":9}},"77":{"start":{"line":124,"column":2},"end":{"line":145,"column":5}},"78":{"start":{"line":125,"column":4},"end":{"line":145,"column":5}},"79":{"start":{"line":127,"column":6},"end":{"line":127,"column":72}},"80":{"start":{"line":127,"column":60},"end":{"line":127,"column":72}},"81":{"start":{"line":128,"column":6},"end":{"line":128,"column":11}},"82":{"start":{"line":130,"column":6},"end":{"line":130,"column":71}},"83":{"start":{"line":130,"column":59},"end":{"line":130,"column":71}},"84":{"start":{"line":131,"column":6},"end":{"line":131,"column":11}},"85":{"start":{"line":133,"column":6},"end":{"line":133,"column":59}},"86":{"start":{"line":133,"column":47},"end":{"line":133,"column":59}},"87":{"start":{"line":134,"column":6},"end":{"line":134,"column":11}},"88":{"start":{"line":136,"column":6},"end":{"line":136,"column":67}},"89":{"start":{"line":136,"column":55},"end":{"line":136,"column":67}},"90":{"start":{"line":137,"column":6},"end":{"line":137,"column":11}},"91":{"start":{"line":139,"column":6},"end":{"line":139,"column":67}},"92":{"start":{"line":139,"column":55},"end":{"line":139,"column":67}},"93":{"start":{"line":140,"column":6},"end":{"line":140,"column":11}},"94":{"start":{"line":142,"column":6},"end":{"line":142,"column":71}},"95":{"start":{"line":142,"column":59},"end":{"line":142,"column":71}},"96":{"start":{"line":143,"column":6},"end":{"line":143,"column":11}},"97":{"start":{"line":147,"column":2},"end":{"line":147,"column":13}},"98":{"start":{"line":150,"column":0},"end":{"line":157,"column":1}},"99":{"start":{"line":151,"column":2},"end":{"line":151,"column":7}},"100":{"start":{"line":153,"column":2},"end":{"line":154,"column":56}},"101":{"start":{"line":154,"column":4},"end":{"line":154,"column":56}},"102":{"start":{"line":154,"column":44},"end":{"line":154,"column":56}},"103":{"start":{"line":156,"column":2},"end":{"line":156,"column":13}},"104":{"start":{"line":159,"column":0},"end":{"line":166,"column":1}},"105":{"start":{"line":160,"column":2},"end":{"line":160,"column":7}},"106":{"start":{"line":162,"column":2},"end":{"line":163,"column":54}},"107":{"start":{"line":163,"column":4},"end":{"line":163,"column":54}},"108":{"start":{"line":163,"column":43},"end":{"line":163,"column":54}},"109":{"start":{"line":165,"column":2},"end":{"line":165,"column":14}},"110":{"start":{"line":168,"column":0},"end":{"line":179,"column":1}},"111":{"start":{"line":169,"column":2},"end":{"line":169,"column":20}},"112":{"start":{"line":171,"column":2},"end":{"line":176,"column":3}},"113":{"start":{"line":172,"column":4},"end":{"line":172,"column":26}},"114":{"start":{"line":173,"column":4},"end":{"line":173,"column":54}},"115":{"start":{"line":173,"column":33},"end":{"line":173,"column":54}},"116":{"start":{"line":174,"column":4},"end":{"line":175,"column":18}},"117":{"start":{"line":175,"column":6},"end":{"line":175,"column":18}},"118":{"start":{"line":178,"column":2},"end":{"line":178,"column":13}},"119":{"start":{"line":182,"column":0},"end":{"line":199,"column":1}},"120":{"start":{"line":183,"column":2},"end":{"line":183,"column":27}},"121":{"start":{"line":185,"column":2},"end":{"line":196,"column":3}},"122":{"start":{"line":186,"column":4},"end":{"line":186,"column":25}},"123":{"start":{"line":187,"column":4},"end":{"line":187,"column":39}},"124":{"start":{"line":188,"column":4},"end":{"line":195,"column":5}},"125":{"start":{"line":189,"column":6},"end":{"line":189,"column":30}},"126":{"start":{"line":189,"column":18},"end":{"line":189,"column":30}},"127":{"start":{"line":190,"column":6},"end":{"line":190,"column":48}},"128":{"start":{"line":190,"column":36},"end":{"line":190,"column":48}},"129":{"start":{"line":193,"column":6},"end":{"line":193,"column":41}},"130":{"start":{"line":193,"column":29},"end":{"line":193,"column":41}},"131":{"start":{"line":194,"column":6},"end":{"line":194,"column":47}},"132":{"start":{"line":194,"column":35},"end":{"line":194,"column":47}},"133":{"start":{"line":198,"column":2},"end":{"line":198,"column":13}},"134":{"start":{"line":202,"column":0},"end":{"line":233,"column":1}},"135":{"start":{"line":203,"column":2},"end":{"line":203,"column":18}},"136":{"start":{"line":204,"column":2},"end":{"line":204,"column":67}},"137":{"start":{"line":206,"column":2},"end":{"line":230,"column":3}},"138":{"start":{"line":207,"column":4},"end":{"line":207,"column":35}},"139":{"start":{"line":208,"column":4},"end":{"line":208,"column":40}},"140":{"start":{"line":209,"column":4},"end":{"line":209,"column":46}},"141":{"start":{"line":212,"column":4},"end":{"line":212,"column":45}},"142":{"start":{"line":212,"column":37},"end":{"line":212,"column":45}},"143":{"start":{"line":214,"column":4},"end":{"line":214,"column":25}},"144":{"start":{"line":215,"column":4},"end":{"line":215,"column":25}},"145":{"start":{"line":217,"column":4},"end":{"line":217,"column":35}},"146":{"start":{"line":217,"column":23},"end":{"line":217,"column":35}},"147":{"start":{"line":218,"column":4},"end":{"line":218,"column":54}},"148":{"start":{"line":218,"column":22},"end":{"line":218,"column":54}},"149":{"start":{"line":220,"column":4},"end":{"line":223,"column":48}},"150":{"start":{"line":221,"column":6},"end":{"line":223,"column":48}},"151":{"start":{"line":225,"column":4},"end":{"line":226,"column":18}},"152":{"start":{"line":226,"column":6},"end":{"line":226,"column":18}},"153":{"start":{"line":228,"column":4},"end":{"line":229,"column":18}},"154":{"start":{"line":229,"column":6},"end":{"line":229,"column":18}},"155":{"start":{"line":232,"column":2},"end":{"line":232,"column":13}},"156":{"start":{"line":236,"column":0},"end":{"line":240,"column":1}},"157":{"start":{"line":237,"column":2},"end":{"line":239,"column":3}},"158":{"start":{"line":238,"column":4},"end":{"line":238,"column":49}},"159":{"start":{"line":243,"column":0},"end":{"line":276,"column":1}},"160":{"start":{"line":244,"column":2},"end":{"line":245,"column":52}},"161":{"start":{"line":247,"column":2},"end":{"line":275,"column":3}},"162":{"start":{"line":248,"column":4},"end":{"line":272,"column":5}},"163":{"start":{"line":249,"column":6},"end":{"line":249,"column":18}},"164":{"start":{"line":250,"column":6},"end":{"line":250,"column":18}},"165":{"start":{"line":251,"column":6},"end":{"line":251,"column":31}},"166":{"start":{"line":252,"column":6},"end":{"line":252,"column":37}},"167":{"start":{"line":253,"column":6},"end":{"line":253,"column":48}},"168":{"start":{"line":254,"column":6},"end":{"line":254,"column":42}},"169":{"start":{"line":256,"column":6},"end":{"line":256,"column":30}},"170":{"start":{"line":256,"column":22},"end":{"line":256,"column":30}},"171":{"start":{"line":257,"column":6},"end":{"line":257,"column":31}},"172":{"start":{"line":257,"column":22},"end":{"line":257,"column":31}},"173":{"start":{"line":259,"column":6},"end":{"line":259,"column":16}},"174":{"start":{"line":261,"column":6},"end":{"line":267,"column":7}},"175":{"start":{"line":261,"column":24},"end":{"line":261,"column":52}},"176":{"start":{"line":262,"column":11},"end":{"line":267,"column":7}},"177":{"start":{"line":263,"column":8},"end":{"line":264,"column":53}},"178":{"start":{"line":265,"column":8},"end":{"line":265,"column":68}},"179":{"start":{"line":265,"column":22},"end":{"line":265,"column":68}},"180":{"start":{"line":266,"column":8},"end":{"line":266,"column":30}},"181":{"start":{"line":269,"column":6},"end":{"line":269,"column":32}},"182":{"start":{"line":269,"column":24},"end":{"line":269,"column":32}},"183":{"start":{"line":271,"column":6},"end":{"line":271,"column":43}},"184":{"start":{"line":274,"column":4},"end":{"line":274,"column":12}}},"branchMap":{"1":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":47},"end":{"line":26,"column":48}},{"start":{"line":26,"column":51},"end":{"line":26,"column":65}}]},"2":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":59},"end":{"line":26,"column":60}},{"start":{"line":26,"column":63},"end":{"line":26,"column":65}}]},"3":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":48},"end":{"line":27,"column":49}},{"start":{"line":27,"column":52},"end":{"line":27,"column":62}}]},"4":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":56},"end":{"line":27,"column":57}},{"start":{"line":27,"column":60},"end":{"line":27,"column":62}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"6":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":46,"column":2}},{"start":{"line":46,"column":2},"end":{"line":46,"column":2}}]},"7":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":2},"end":{"line":51,"column":2}},{"start":{"line":51,"column":2},"end":{"line":51,"column":2}}]},"8":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":6},"end":{"line":56,"column":6}},{"start":{"line":56,"column":6},"end":{"line":56,"column":6}}]},"9":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":63,"column":2}},{"start":{"line":63,"column":2},"end":{"line":63,"column":2}}]},"10":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]},"11":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":8},"end":{"line":69,"column":18}},{"start":{"line":69,"column":22},"end":{"line":69,"column":32}}]},"12":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":8},"end":{"line":75,"column":8}},{"start":{"line":75,"column":8},"end":{"line":75,"column":8}}]},"13":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":8},"end":{"line":76,"column":8}},{"start":{"line":76,"column":8},"end":{"line":76,"column":8}}]},"14":{"line":76,"type":"binary-expr","locations":[{"start":{"line":76,"column":13},"end":{"line":76,"column":22}},{"start":{"line":76,"column":26},"end":{"line":76,"column":65}},{"start":{"line":77,"column":11},"end":{"line":77,"column":20}},{"start":{"line":77,"column":24},"end":{"line":77,"column":60}}]},"15":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":2},"end":{"line":83,"column":2}},{"start":{"line":83,"column":2},"end":{"line":83,"column":2}}]},"16":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":2},"end":{"line":86,"column":2}},{"start":{"line":86,"column":2},"end":{"line":86,"column":2}}]},"17":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":6},"end":{"line":86,"column":24}},{"start":{"line":86,"column":28},"end":{"line":86,"column":47}}]},"18":{"line":87,"type":"cond-expr","locations":[{"start":{"line":88,"column":6},"end":{"line":88,"column":43}},{"start":{"line":88,"column":46},"end":{"line":88,"column":60}}]},"19":{"line":88,"type":"binary-expr","locations":[{"start":{"line":88,"column":7},"end":{"line":88,"column":21}},{"start":{"line":88,"column":25},"end":{"line":88,"column":26}}]},"20":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":2},"end":{"line":99,"column":2}},{"start":{"line":99,"column":2},"end":{"line":99,"column":2}}]},"21":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":2},"end":{"line":100,"column":2}},{"start":{"line":100,"column":2},"end":{"line":100,"column":2}}]},"22":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":2},"end":{"line":101,"column":2}},{"start":{"line":101,"column":2},"end":{"line":101,"column":2}}]},"23":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":2},"end":{"line":106,"column":2}},{"start":{"line":106,"column":2},"end":{"line":106,"column":2}}]},"24":{"line":114,"type":"cond-expr","locations":[{"start":{"line":115,"column":6},"end":{"line":117,"column":8}},{"start":{"line":117,"column":11},"end":{"line":117,"column":48}}]},"25":{"line":125,"type":"switch","locations":[{"start":{"line":126,"column":4},"end":{"line":128,"column":11}},{"start":{"line":129,"column":4},"end":{"line":131,"column":11}},{"start":{"line":132,"column":4},"end":{"line":134,"column":11}},{"start":{"line":135,"column":4},"end":{"line":137,"column":11}},{"start":{"line":138,"column":4},"end":{"line":140,"column":11}},{"start":{"line":141,"column":4},"end":{"line":143,"column":11}},{"start":{"line":144,"column":4},"end":{"line":144,"column":12}}]},"26":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":6},"end":{"line":127,"column":6}},{"start":{"line":127,"column":6},"end":{"line":127,"column":6}}]},"27":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":6},"end":{"line":130,"column":6}},{"start":{"line":130,"column":6},"end":{"line":130,"column":6}}]},"28":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":6},"end":{"line":133,"column":6}},{"start":{"line":133,"column":6},"end":{"line":133,"column":6}}]},"29":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":6},"end":{"line":136,"column":6}},{"start":{"line":136,"column":6},"end":{"line":136,"column":6}}]},"30":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":6},"end":{"line":139,"column":6}},{"start":{"line":139,"column":6},"end":{"line":139,"column":6}}]},"31":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":6},"end":{"line":142,"column":6}},{"start":{"line":142,"column":6},"end":{"line":142,"column":6}}]},"32":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":4},"end":{"line":154,"column":4}},{"start":{"line":154,"column":4},"end":{"line":154,"column":4}}]},"33":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":4},"end":{"line":163,"column":4}},{"start":{"line":163,"column":4},"end":{"line":163,"column":4}}]},"34":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":4},"end":{"line":173,"column":4}},{"start":{"line":173,"column":4},"end":{"line":173,"column":4}}]},"35":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":4},"end":{"line":174,"column":4}},{"start":{"line":174,"column":4},"end":{"line":174,"column":4}}]},"36":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":4},"end":{"line":188,"column":4}},{"start":{"line":188,"column":4},"end":{"line":188,"column":4}}]},"37":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":6},"end":{"line":189,"column":6}},{"start":{"line":189,"column":6},"end":{"line":189,"column":6}}]},"38":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":6},"end":{"line":190,"column":6}},{"start":{"line":190,"column":6},"end":{"line":190,"column":6}}]},"39":{"line":190,"type":"binary-expr","locations":[{"start":{"line":190,"column":10},"end":{"line":190,"column":17}},{"start":{"line":190,"column":21},"end":{"line":190,"column":34}}]},"40":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":6},"end":{"line":193,"column":6}},{"start":{"line":193,"column":6},"end":{"line":193,"column":6}}]},"41":{"line":193,"type":"binary-expr","locations":[{"start":{"line":193,"column":10},"end":{"line":193,"column":15}},{"start":{"line":193,"column":19},"end":{"line":193,"column":27}}]},"42":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":6},"end":{"line":194,"column":6}},{"start":{"line":194,"column":6},"end":{"line":194,"column":6}}]},"43":{"line":194,"type":"binary-expr","locations":[{"start":{"line":194,"column":10},"end":{"line":194,"column":17}},{"start":{"line":194,"column":21},"end":{"line":194,"column":33}}]},"44":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":4},"end":{"line":212,"column":4}},{"start":{"line":212,"column":4},"end":{"line":212,"column":4}}]},"45":{"line":212,"type":"binary-expr","locations":[{"start":{"line":212,"column":8},"end":{"line":212,"column":18}},{"start":{"line":212,"column":22},"end":{"line":212,"column":35}}]},"46":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":4},"end":{"line":217,"column":4}},{"start":{"line":217,"column":4},"end":{"line":217,"column":4}}]},"47":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":4},"end":{"line":218,"column":4}},{"start":{"line":218,"column":4},"end":{"line":218,"column":4}}]},"48":{"line":218,"type":"cond-expr","locations":[{"start":{"line":218,"column":38},"end":{"line":218,"column":50}},{"start":{"line":218,"column":53},"end":{"line":218,"column":54}}]},"49":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":4},"end":{"line":220,"column":4}},{"start":{"line":220,"column":4},"end":{"line":220,"column":4}}]},"50":{"line":221,"type":"cond-expr","locations":[{"start":{"line":221,"column":39},"end":{"line":222,"column":51}},{"start":{"line":223,"column":8},"end":{"line":223,"column":48}}]},"51":{"line":221,"type":"binary-expr","locations":[{"start":{"line":221,"column":39},"end":{"line":221,"column":56}},{"start":{"line":222,"column":8},"end":{"line":222,"column":51}}]},"52":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":4},"end":{"line":225,"column":4}},{"start":{"line":225,"column":4},"end":{"line":225,"column":4}}]},"53":{"line":225,"type":"binary-expr","locations":[{"start":{"line":225,"column":8},"end":{"line":225,"column":25}},{"start":{"line":225,"column":29},"end":{"line":225,"column":64}}]},"54":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":4},"end":{"line":228,"column":4}},{"start":{"line":228,"column":4},"end":{"line":228,"column":4}}]},"55":{"line":228,"type":"binary-expr","locations":[{"start":{"line":228,"column":8},"end":{"line":228,"column":25}},{"start":{"line":228,"column":29},"end":{"line":228,"column":64}}]},"56":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":6},"end":{"line":256,"column":6}},{"start":{"line":256,"column":6},"end":{"line":256,"column":6}}]},"57":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":6},"end":{"line":257,"column":6}},{"start":{"line":257,"column":6},"end":{"line":257,"column":6}}]},"58":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":6},"end":{"line":261,"column":6}},{"start":{"line":261,"column":6},"end":{"line":261,"column":6}}]},"59":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":11},"end":{"line":262,"column":11}},{"start":{"line":262,"column":11},"end":{"line":262,"column":11}}]},"60":{"line":263,"type":"binary-expr","locations":[{"start":{"line":263,"column":18},"end":{"line":263,"column":35}},{"start":{"line":264,"column":10},"end":{"line":264,"column":53}}]},"61":{"line":265,"type":"if","locations":[{"start":{"line":265,"column":8},"end":{"line":265,"column":8}},{"start":{"line":265,"column":8},"end":{"line":265,"column":8}}]},"62":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":6},"end":{"line":269,"column":6}},{"start":{"line":269,"column":6},"end":{"line":269,"column":6}}]},"63":{"line":271,"type":"cond-expr","locations":[{"start":{"line":271,"column":27},"end":{"line":271,"column":33}},{"start":{"line":271,"column":36},"end":{"line":271,"column":43}}]}},"code":["'use strict'","","var deepEqual = require('../../common/deep_equal')","var message = require('../../common/message')","var find = require('../../common/array/find')","var generateId = require('../../common/generate_id')","","var errors = require('../../common/errors')","var BadRequestError = errors.BadRequestError","","var keys = require('../../common/keys')","var primaryKey = keys.primary","var typeKey = keys.type","var isArrayKey = keys.isArray","","// For complex types.","var matchCheck = [","  [ Date, function (a, b) { return a.getTime() === b.getTime() } ],","  [ Buffer, function (a, b) { return a.equals(b) } ],","  [ Object, function (a, b) { return deepEqual(a, b) } ]","]","","// For comparing sort order.","var comparisons = [","  [ Number, function (a, b) { return a - b } ],","  [ String, function (a, b) { return a === b ? 0 : a > b ? 1 : -1 } ],","  [ Boolean, function (a, b) { return a === b ? 0 : a ? 1 : -1 } ],","  [ Date, function (a, b) { return a.getTime() - b.getTime() } ],","  [ Buffer, Buffer.compare ],","","  // There is no comparison here that makes sense, so this should simply be a","  // no-op by default.","  [ Object, function () { return 0 } ]","]","","","// Browser-safe ID generation.","exports.generateId = generateId","","","exports.applyOptions = function (fields, records, options, meta) {","  var count, record, field, isInclude, isExclude, language, memoizedRecords","  var i, j","","  if (!options) options = {}","  if (!meta) meta = {}","","  language = meta.language","","  // Apply filters.","  if (options) {","    memoizedRecords = records","    records = []","    for (i = 0, j = memoizedRecords.length; i < j; i++) {","      record = memoizedRecords[i]","      if (match(fields, options, record))","        records.push(record)","    }","  }","","  count = records.length","","  if ('fields' in options) {","    isInclude = !find(Object.keys(options.fields),","      function (field) { return !options.fields[field] })","    isExclude = !find(Object.keys(options.fields),","      function (field) { return options.fields[field] })","","    if (!isInclude && !isExclude)","      throw new BadRequestError(message('FieldsFormat', language))","","    for (i = 0, j = records.length; i < j; i++) {","      record = records[i]","      for (field in record) {","        if (field === primaryKey) continue","        if ((isInclude && !(options.fields.hasOwnProperty(field))) ||","          (isExclude && options.fields.hasOwnProperty(field)))","          delete record[field]","      }","    }","  }","","  if ('sort' in options)","    records = records.sort(compare(fields, options.sort))","","  if ('limit' in options || 'offset' in options)","    records = records.slice(options.offset, options.limit ?","      (options.offset || 0) + options.limit : records.length)","","  records.count = count","","  return records","}","","","function check (type, a, b) {","  var matcher","","  if (b === null) return a === null","  if (!type) return a === b","  if (type.compare) return type.compare(a, b) === 0","","  matcher = find(matchCheck, function (pair) {","    return pair[0] === type.prototype.constructor","  })","  if (matcher) return matcher[1](a, b)","","  return a === b","}","","","function checkValue (fieldDefinition, a) {","  return function (b) {","    return fieldDefinition[isArrayKey] ?","      find(a, function (a) {","        return check(fieldDefinition[typeKey], b, a)","      }) : check(fieldDefinition[typeKey], b, a)","  }","}","","function match (fields, options, record) {","  var key","","  for (key in options)","    switch (key) {","    case 'and':","      if (!matchByLogicalAnd(fields, options[key], record)) return false","      break","    case 'or':","      if (!matchByLogicalOr(fields, options[key], record)) return false","      break","    case 'not':","      if (match(fields, options[key], record)) return false","      break","    case 'range':","      if (!matchByRange(fields, options[key], record)) return false","      break","    case 'match':","      if (!matchByField(fields, options[key], record)) return false","      break","    case 'exists':","      if (!matchByExistence(fields, options[key], record)) return false","      break","    default:","    }","","  return true","}","","function matchByLogicalAnd (fields, clauses, record) {","  var i","","  for (i = 0; i < clauses.length; i++)","    if (!match(fields, clauses[i], record)) return false","","  return true","}","","function matchByLogicalOr (fields, clauses, record) {","  var i","","  for (i = 0; i < clauses.length; i++)","    if (match(fields, clauses[i], record)) return true","","  return false","}","","function matchByField (fields, match, record) {","  var field, matches","","  for (field in match) {","    matches = match[field]","    if (!Array.isArray(matches)) matches = [ matches ]","    if (find(matches, checkValue(fields[field], record[field])) === void 0)","      return false","  }","","  return true","}","","","function matchByExistence (fields, exists, record) {","  var field, value, isArray","","  for (field in exists) {","    value = record[field]","    isArray = fields[field][isArrayKey]","    if (exists[field]) {","      if (!value) return false","      if (isArray && !value.length) return false","    }","    else {","      if (value && !isArray) return false","      if (isArray && value.length) return false","    }","  }","","  return true","}","","","function matchByRange (fields, ranges, record) {","  var compare = {}","  var field, fieldDefinition, fieldType, fieldIsArray, range, value","","  for (field in ranges) {","    fieldDefinition = fields[field]","    fieldType = fieldDefinition[typeKey]","    fieldIsArray = fieldDefinition[isArrayKey]","","    // Skip for singular link fields.","    if (!fieldType && !fieldIsArray) continue","","    range = ranges[field]","    value = record[field]","","    if (value == null) return false","    if (fieldIsArray) value = value ? value.length : 0","","    if (!compare[field])","      compare[field] = !fieldIsArray ? fieldType.compare ||","        find(comparisons, findByType(fieldType))[1] :","        find(comparisons, findByType(Number))[1]","","    if (range[0] !== null && compare[field](value, range[0]) < 0)","      return false","","    if (range[1] !== null && compare[field](range[1], value) < 0)","      return false","  }","","  return true","}","","","function findByType (type) {","  return function (pair) {","    return pair[0] === type.prototype.constructor","  }","}","","","function compare (fields, sort) {","  var field, compare, a, b, isAscending,","    fieldDefinition, fieldIsArray, fieldType, result","","  return function (x, y) {","    for (field in sort) {","      a = x[field]","      b = y[field]","      isAscending = sort[field]","      fieldDefinition = fields[field]","      fieldIsArray = fieldDefinition[isArrayKey]","      fieldType = fieldDefinition[typeKey]","","      if (a === null) return 1","      if (b === null) return -1","","      result = 0","","      if (fieldIsArray) result = a.length - b.length","      else if (fieldType) {","        compare = fieldType.compare ||","          find(comparisons, findByType(fieldType))[1]","        if (!compare) throw new Error('Missing \"compare\" function.')","        result = compare(a, b)","      }","","      if (result === 0) continue","","      return isAscending ? result : -result","    }","","    return 0","  }","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"8":1,"9":1,"11":1,"12":1,"13":1,"14":1,"17":1,"18":0,"19":0,"20":0,"24":1,"25":0,"26":0,"27":0,"28":0,"33":0,"38":1,"41":1,"42":0,"43":0,"45":0,"46":0,"48":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"61":0,"63":0,"64":0,"65":0,"66":0,"67":0,"69":0,"70":0,"72":0,"73":0,"74":0,"75":0,"76":0,"78":0,"83":0,"84":0,"86":0,"87":0,"90":0,"92":0,"96":1,"97":0,"99":0,"100":0,"101":0,"103":0,"104":0,"106":0,"108":0,"112":1,"113":0,"114":0,"116":0,"121":1,"122":0,"124":0,"125":0,"127":0,"128":0,"130":0,"131":0,"133":0,"134":0,"136":0,"137":0,"139":0,"140":0,"142":0,"143":0,"147":0,"150":1,"151":0,"153":0,"154":0,"156":0,"159":1,"160":0,"162":0,"163":0,"165":0,"168":1,"169":0,"171":0,"172":0,"173":0,"174":0,"175":0,"178":0,"182":1,"183":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"193":0,"194":0,"198":0,"202":1,"203":0,"204":0,"206":0,"207":0,"208":0,"209":0,"212":0,"214":0,"215":0,"217":0,"218":0,"220":0,"221":0,"225":0,"226":0,"228":0,"229":0,"232":0,"236":1,"237":0,"238":0,"243":1,"244":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"256":0,"257":0,"259":0,"261":0,"262":0,"263":0,"265":0,"266":0,"269":0,"271":0,"274":0}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/deep_equal.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/deep_equal.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0],"15":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"deepEqual","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":26}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":53,"column":1}},"2":{"start":{"line":11,"column":2},"end":{"line":11,"column":51}},"3":{"start":{"line":14,"column":2},"end":{"line":14,"column":26}},"4":{"start":{"line":14,"column":15},"end":{"line":14,"column":26}},"5":{"start":{"line":17,"column":2},"end":{"line":17,"column":28}},"6":{"start":{"line":17,"column":16},"end":{"line":17,"column":28}},"7":{"start":{"line":20,"column":2},"end":{"line":20,"column":47}},"8":{"start":{"line":20,"column":35},"end":{"line":20,"column":47}},"9":{"start":{"line":22,"column":2},"end":{"line":47,"column":3}},"10":{"start":{"line":23,"column":4},"end":{"line":23,"column":13}},"11":{"start":{"line":24,"column":4},"end":{"line":24,"column":18}},"12":{"start":{"line":25,"column":4},"end":{"line":25,"column":20}},"13":{"start":{"line":27,"column":4},"end":{"line":31,"column":5}},"14":{"start":{"line":28,"column":6},"end":{"line":29,"column":20}},"15":{"start":{"line":29,"column":8},"end":{"line":29,"column":20}},"16":{"start":{"line":30,"column":6},"end":{"line":30,"column":14}},"17":{"start":{"line":33,"column":4},"end":{"line":37,"column":5}},"18":{"start":{"line":34,"column":6},"end":{"line":35,"column":20}},"19":{"start":{"line":35,"column":8},"end":{"line":35,"column":20}},"20":{"start":{"line":36,"column":6},"end":{"line":36,"column":14}},"21":{"start":{"line":39,"column":4},"end":{"line":44,"column":5}},"22":{"start":{"line":40,"column":6},"end":{"line":42,"column":20}},"23":{"start":{"line":42,"column":8},"end":{"line":42,"column":20}},"24":{"start":{"line":43,"column":6},"end":{"line":43,"column":14}},"25":{"start":{"line":46,"column":4},"end":{"line":46,"column":39}},"26":{"start":{"line":46,"column":27},"end":{"line":46,"column":39}},"27":{"start":{"line":49,"column":2},"end":{"line":49,"column":26}},"28":{"start":{"line":49,"column":17},"end":{"line":49,"column":26}},"29":{"start":{"line":52,"column":2},"end":{"line":52,"column":28}},"30":{"start":{"line":56,"column":0},"end":{"line":56,"column":26}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":2},"end":{"line":14,"column":2}},{"start":{"line":14,"column":2},"end":{"line":14,"column":2}}]},"2":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":2},"end":{"line":17,"column":2}},{"start":{"line":17,"column":2},"end":{"line":17,"column":2}}]},"3":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":6},"end":{"line":17,"column":8}},{"start":{"line":17,"column":12},"end":{"line":17,"column":14}}]},"4":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"5":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":27,"column":4}},{"start":{"line":27,"column":4},"end":{"line":27,"column":4}}]},"6":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":6},"end":{"line":28,"column":6}},{"start":{"line":28,"column":6},"end":{"line":28,"column":6}}]},"7":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":10},"end":{"line":28,"column":37}},{"start":{"line":28,"column":41},"end":{"line":28,"column":67}}]},"8":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4}},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]},"9":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":6},"end":{"line":34,"column":6}},{"start":{"line":34,"column":6},"end":{"line":34,"column":6}}]},"10":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":10},"end":{"line":34,"column":35}},{"start":{"line":34,"column":39},"end":{"line":34,"column":61}}]},"11":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"12":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":8},"end":{"line":39,"column":13}},{"start":{"line":39,"column":17},"end":{"line":39,"column":52}}]},"13":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":6},"end":{"line":40,"column":6}},{"start":{"line":40,"column":6},"end":{"line":40,"column":6}}]},"14":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":10},"end":{"line":40,"column":18}},{"start":{"line":40,"column":22},"end":{"line":40,"column":59}},{"start":{"line":41,"column":8},"end":{"line":41,"column":45}}]},"15":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]}},"code":["'use strict'","","/**"," * A fast recursive equality check, which covers limited use cases."," *"," * @param {Object}"," * @param {Object}"," * @return {Boolean}"," */","function deepEqual (a, b) {","  var key, value, compare, aLength = 0, bLength = 0","","  // If they are the same object, don't need to go further.","  if (a === b) return true","","  // Both objects must be defined.","  if (!a || !b) return false","","  // Objects must be of the same type.","  if (a.prototype !== b.prototype) return false","","  for (key in a) {","    aLength++","    value = a[key]","    compare = b[key]","","    if (typeof value === 'object') {","      if (typeof compare !== 'object' || !deepEqual(value, compare))","        return false","      continue","    }","","    if (Buffer.isBuffer(value)) {","      if (!Buffer.isBuffer(compare) || !value.equals(compare))","        return false","      continue","    }","","    if (value && typeof value.getTime === 'function') {","      if (!compare || typeof compare.getTime !== 'function' ||","        value.getTime() !== compare.getTime())","        return false","      continue","    }","","    if (value !== compare) return false","  }","","  for (key in b) bLength++","","  // Keys must be of same length.","  return aLength === bLength","}","","","module.exports = deepEqual",""],"l":{"10":1,"11":0,"14":0,"17":0,"20":0,"22":0,"23":0,"24":0,"25":0,"27":0,"28":0,"29":0,"30":0,"33":0,"34":0,"35":0,"36":0,"39":0,"40":0,"42":0,"43":0,"46":0,"49":0,"52":0,"56":1}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/message.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/message.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"message","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":38}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":24}},"3":{"start":{"line":16,"column":0},"end":{"line":34,"column":1}},"4":{"start":{"line":17,"column":2},"end":{"line":17,"column":22}},"5":{"start":{"line":19,"column":2},"end":{"line":24,"column":3}},"6":{"start":{"line":20,"column":4},"end":{"line":20,"column":51}},"7":{"start":{"line":21,"column":4},"end":{"line":21,"column":34}},"8":{"start":{"line":21,"column":16},"end":{"line":21,"column":34}},"9":{"start":{"line":22,"column":4},"end":{"line":23,"column":43}},"10":{"start":{"line":22,"column":40},"end":{"line":22,"column":57}},"11":{"start":{"line":23,"column":9},"end":{"line":23,"column":43}},"12":{"start":{"line":26,"column":2},"end":{"line":27,"column":74}},"13":{"start":{"line":27,"column":4},"end":{"line":27,"column":74}},"14":{"start":{"line":29,"column":2},"end":{"line":29,"column":29}},"15":{"start":{"line":31,"column":2},"end":{"line":31,"column":65}},"16":{"start":{"line":31,"column":20},"end":{"line":31,"column":65}},"17":{"start":{"line":33,"column":2},"end":{"line":33,"column":12}},"18":{"start":{"line":37,"column":0},"end":{"line":39,"column":2}},"19":{"start":{"line":43,"column":0},"end":{"line":105,"column":1}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":19,"column":2}},{"start":{"line":19,"column":2},"end":{"line":19,"column":2}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":13},"end":{"line":20,"column":21}},{"start":{"line":20,"column":25},"end":{"line":20,"column":51}}]},"3":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":4}},{"start":{"line":21,"column":4},"end":{"line":21,"column":4}}]},"4":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":4}},{"start":{"line":22,"column":4},"end":{"line":22,"column":4}}]},"5":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"6":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":11},"end":{"line":27,"column":44}},{"start":{"line":27,"column":48},"end":{"line":27,"column":74}}]}},"code":["'use strict'","","var genericMessage = 'GenericError'","","module.exports = message","","","/**"," * Message function for i18n."," *"," * @param {String} id"," * @param {String} language"," * @param {Object} [data]"," * @return {String}"," */","function message (id, language, data) {","  var str, key, subtag","","  if (!message.hasOwnProperty(language)) {","    subtag = language && language.match(/.+?(?=-)/)","    if (subtag) subtag = subtag[0]","    if (message.hasOwnProperty(subtag)) language = subtag","    else language = message.defaultLanguage","  }","","  if (!message[language].hasOwnProperty(id))","    return message[language][genericMessage] || message.en[genericMessage]","","  str = message[language][id]","","  for (key in data) str = str.replace('{' + key + '}', data[key])","","  return str","}","","// Assign fallback language to \"en\".","Object.defineProperty(message, 'defaultLanguage', {","  value: 'en', writable: true","})","","// Default language messages.","/* eslint-disable max-len */","message.en = {","  'GenericError': 'An internal error occurred.',","","   // Various errors.","  'MalformedRequest': 'The request was malformed.',","  'InvalidBody': 'The request body is invalid.',","  'SerializerNotFound': 'The serializer for \"{id}\" does not exist.',","  'InputOnly': 'Input only.',","  'InvalidID': 'An ID is invalid.',","  'DateISO8601': 'Date string must be an ISO 8601 formatted string.',","  'DateInvalid': 'Date value is invalid.',","  'BufferEncoding': 'Buffer value must be a {bufferEncoding}-encoded string.',","  'JSONParse': 'Could not parse value as JSON.',","  'MissingPayload': 'Payload is missing.',","  'SpecifiedIDs': 'IDs should not be specified.',","  'InvalidURL': 'Invalid URL.',","  'RelatedRecordNotFound': 'A related record for the field \"{field}\" was not found.',","  'CreateRecordsInvalid': 'There are no valid records to be created.',","  'CreateRecordsFail': 'Records could not be created.',","  'CreateRecordMissingID': 'An ID on a created record is missing.',","  'DeleteRecordsMissingID': 'IDs are required for deleting records.',","  'DeleteRecordsInvalid': 'A record to be deleted could not be found.',","  'DeleteRecordsFail': 'Not all records specified could be deleted.',","  'UnspecifiedType': 'The type is unspecified.',","  'InvalidType': 'The requested type \"{type}\" is not a valid type.',","  'InvalidMethod': 'The method \"{method}\" is unrecognized.',","  'CollisionToOne': 'Multiple records can not have the same to-one link value on the field \"{field}\".',","  'CollisionDuplicate': 'Duplicate ID \"{id}\" in the field \"{field}\".',","  'UpdateRecordMissing': 'A record to be updated could not be found.',","  'UpdateRecordsInvalid': 'There are no valid updates.',","  'UpdateRecordMissingID': 'An ID on an update is missing.',","  'EnforceArrayType': 'The value of \"{key}\" is invalid, it must be an array with values of type \"{type}\".',","  'EnforceArray': 'The value of \"{key}\" is invalid, it must be an array.',","  'EnforceSameID': 'An ID of \"{key}\" is invalid, it cannot be the same ID of the record.',","  'EnforceSingular': 'The value of \"{key}\" can not be an array, it must be a singular value.',","  'EnforceValue': 'The value of \"{key}\" is invalid, it must be a \"{type}\".',","  'EnforceValueArray': 'A value in the array of \"{key}\" is invalid, it must be a \"{type}\".',","  'FieldsFormat': 'Fields format is invalid. It may either be inclusive or exclusive, but not both.',","  'RecordExists': 'A record with ID \"{id}\" already exists.',","","  // Used for HTML serializer.","  'Index': 'Index',","  'Class': 'Class',","  'Properties': 'Properties',","  'Include': 'Include',","  'QueryOptions': 'Query Options',","  'IncludedLabel': 'included',","  'NoResults': 'No results.',","  'Create': 'Create',","  'Update': 'Update',","  'Delete': 'Delete',","  'True': 'True',","  'False': 'False',","  'IncludePath': 'Path (dot-separated)',","  'Query': 'Query',","  'Fields': 'Fields',","  'Match': 'Match',","  'Sort': 'Sort',","  'Field': 'Field',","  'Pagination': 'Pagination',","  'Limit': 'Limit',","  'Offset': 'Offset'","}","/* eslint-enable max-len */",""],"l":{"3":1,"5":1,"16":1,"17":0,"19":0,"20":0,"21":0,"22":0,"23":0,"26":0,"27":0,"29":0,"31":0,"33":0,"37":1,"43":1}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/array/find.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/array/find.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"find","line":10,"loc":{"start":{"line":10,"column":17},"end":{"line":10,"column":43}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":20,"column":1}},"2":{"start":{"line":11,"column":2},"end":{"line":11,"column":25}},"3":{"start":{"line":13,"column":2},"end":{"line":17,"column":3}},"4":{"start":{"line":14,"column":4},"end":{"line":14,"column":20}},"5":{"start":{"line":15,"column":4},"end":{"line":15,"column":22}},"6":{"start":{"line":16,"column":4},"end":{"line":16,"column":28}},"7":{"start":{"line":16,"column":16},"end":{"line":16,"column":28}},"8":{"start":{"line":19,"column":2},"end":{"line":19,"column":15}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":16,"column":4}},{"start":{"line":16,"column":4},"end":{"line":16,"column":4}}]}},"code":["'use strict'","","/**"," * A more performant `Array.prototype.find`."," *"," * @param {*[]} array"," * @param {Function} fn"," * @return {*}"," */","module.exports = function find (array, fn) {","  var i, j, value, result","","  for (i = 0, j = array.length; i < j; i++) {","    value = array[i]","    result = fn(value)","    if (result) return value","  }","","  return void 0","}",""],"l":{"10":1,"11":0,"13":0,"14":0,"15":0,"16":0,"19":0}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/generate_id.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/generate_id.js","s":{"1":1,"2":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"generateId","line":3,"loc":{"start":{"line":3,"column":17},"end":{"line":3,"column":40}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":7,"column":1}},"2":{"start":{"line":4,"column":2},"end":{"line":6,"column":14}}},"branchMap":{},"code":["'use strict'","","module.exports = function generateId () {","  return Date.now() + '-' +","    ('00000000' + Math.floor(Math.random() * Math.pow(2, 32)).toString(16))","    .slice(-8)","}",""],"l":{"3":1,"4":0}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/errors.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/errors.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":49}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":55}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":59}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":53}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":51}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":47}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":61}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":51}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":57}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":61}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":49}}},"branchMap":{},"code":["'use strict'","","var responseClass = require('./response_classes')","","exports.BadRequestError = responseClass.BadRequestError","exports.UnauthorizedError = responseClass.UnauthorizedError","exports.ForbiddenError = responseClass.ForbiddenError","exports.NotFoundError = responseClass.NotFoundError","exports.MethodError = responseClass.MethodError","exports.NotAcceptableError = responseClass.NotAcceptableError","exports.ConflictError = responseClass.ConflictError","exports.UnsupportedError = responseClass.UnsupportedError","exports.UnprocessableError = responseClass.UnprocessableError","exports.nativeErrors = responseClass.nativeErrors",""],"l":{"3":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/response_classes.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/response_classes.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":3},"b":{},"f":{"1":3},"fnMap":{"1":{"name":"successClass","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":29}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":39}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":32}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":41}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":37}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":55}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":59}},"8":{"start":{"line":16,"column":0},"end":{"line":16,"column":53}},"9":{"start":{"line":17,"column":0},"end":{"line":17,"column":51}},"10":{"start":{"line":18,"column":0},"end":{"line":18,"column":47}},"11":{"start":{"line":19,"column":0},"end":{"line":19,"column":61}},"12":{"start":{"line":20,"column":0},"end":{"line":20,"column":51}},"13":{"start":{"line":21,"column":0},"end":{"line":21,"column":57}},"14":{"start":{"line":22,"column":0},"end":{"line":22,"column":61}},"15":{"start":{"line":28,"column":0},"end":{"line":31,"column":1}},"16":{"start":{"line":34,"column":0},"end":{"line":38,"column":1}},"17":{"start":{"line":35,"column":2},"end":{"line":37,"column":32}}},"branchMap":{},"code":["'use strict'","","var errorClass = require('error-class')","var assign = require('./assign')","","","// Successes.","exports.OK = successClass('OK')","exports.Created = successClass('Created')","exports.Empty = successClass('Empty')","","","// Errors.","exports.BadRequestError = errorClass('BadRequestError')","exports.UnauthorizedError = errorClass('UnauthorizedError')","exports.ForbiddenError = errorClass('ForbiddenError')","exports.NotFoundError = errorClass('NotFoundError')","exports.MethodError = errorClass('MethodError')","exports.NotAcceptableError = errorClass('NotAcceptableError')","exports.ConflictError = errorClass('ConflictError')","exports.UnsupportedError = errorClass('UnsupportedError')","exports.UnprocessableError = errorClass('UnprocessableError')","","","// White-list native error types. The list is gathered from here:","// https://developer.mozilla.org/en-US/docs/Web/JavaScript/","// Reference/Global_Objects/Error","exports.nativeErrors = [","  Error, TypeError, ReferenceError, RangeError,","  SyntaxError, EvalError, URIError","]","","","function successClass (name) {","  return Function('assign', // eslint-disable-line","    'return function ' + name + ' (x) { ' +","    'assign(this, x) }')(assign)","}",""],"l":{"3":1,"4":1,"8":1,"9":1,"10":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"28":1,"34":1,"35":3}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/assign.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/assign.js","s":{"1":1,"2":3,"3":3,"4":3,"5":3,"6":2,"7":1,"8":6,"9":3},"b":{"1":[2,1]},"f":{"1":3},"fnMap":{"1":{"name":"assign","line":9,"loc":{"start":{"line":9,"column":17},"end":{"line":9,"column":42}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":22,"column":1}},"2":{"start":{"line":10,"column":2},"end":{"line":10,"column":23}},"3":{"start":{"line":12,"column":2},"end":{"line":19,"column":3}},"4":{"start":{"line":13,"column":4},"end":{"line":13,"column":25}},"5":{"start":{"line":15,"column":4},"end":{"line":15,"column":32}},"6":{"start":{"line":15,"column":24},"end":{"line":15,"column":32}},"7":{"start":{"line":17,"column":4},"end":{"line":18,"column":31}},"8":{"start":{"line":18,"column":6},"end":{"line":18,"column":31}},"9":{"start":{"line":21,"column":2},"end":{"line":21,"column":15}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":4}},{"start":{"line":15,"column":4},"end":{"line":15,"column":4}}]}},"code":["'use strict'","","/**"," * Like `Object.assign`, but faster and more restricted in what it does."," *"," * @param {Object} target"," * @return {Object}"," */","module.exports = function assign (target) {","  var i, j, key, source","","  for (i = 1, j = arguments.length; i < j; i++) {","    source = arguments[i]","","    if (source == null) continue","","    for (key in source)","      target[key] = source[key]","  }","","  return target","}",""],"l":{"9":1,"10":3,"12":3,"13":3,"15":3,"17":1,"18":6,"21":3}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/keys.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/keys.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":29}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":35}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":59}}},"branchMap":{},"code":["'use strict'","","var constants = require('./constants')","","exports.primary = constants.primary","exports.type = constants.type","exports.link = constants.link","exports.isArray = constants.isArray","exports.inverse = constants.inverse","exports.denormalizedInverse = constants.denormalizedInverse",""],"l":{"3":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/constants.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/constants.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":3,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1},"b":{"1":[3,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":13}},"3":{"start":{"line":5,"column":0},"end":{"line":15,"column":1}},"4":{"start":{"line":18,"column":0},"end":{"line":18,"column":22}},"5":{"start":{"line":21,"column":0},"end":{"line":21,"column":21}},"6":{"start":{"line":22,"column":0},"end":{"line":22,"column":21}},"7":{"start":{"line":23,"column":0},"end":{"line":23,"column":27}},"8":{"start":{"line":24,"column":0},"end":{"line":24,"column":27}},"9":{"start":{"line":27,"column":0},"end":{"line":30,"column":1}},"10":{"start":{"line":28,"column":2},"end":{"line":28,"column":22}},"11":{"start":{"line":29,"column":2},"end":{"line":29,"column":60}},"12":{"start":{"line":33,"column":0},"end":{"line":33,"column":25}},"13":{"start":{"line":34,"column":0},"end":{"line":34,"column":21}},"14":{"start":{"line":35,"column":0},"end":{"line":35,"column":27}},"15":{"start":{"line":36,"column":0},"end":{"line":36,"column":33}},"16":{"start":{"line":37,"column":0},"end":{"line":37,"column":27}},"17":{"start":{"line":40,"column":0},"end":{"line":40,"column":21}},"18":{"start":{"line":41,"column":0},"end":{"line":41,"column":25}},"19":{"start":{"line":42,"column":0},"end":{"line":42,"column":25}},"20":{"start":{"line":43,"column":0},"end":{"line":43,"column":25}}},"branchMap":{"1":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":29},"end":{"line":29,"column":40}},{"start":{"line":29,"column":43},"end":{"line":29,"column":60}}]}},"code":["'use strict'","","var hasSymbol = typeof Symbol === 'function'","var i, j, key","var privateKeys = [","  // This is set on the field definition object internally if it is an","  // automatically generated denormalized field.","  'denormalizedInverse',","","  // Used to map update objects to records.","  'updateRecord',","","  // Used to map update objects to a hash of linked records.","  'linkedHash'","]","","// The primary key that must exist per record, can not be user defined.","exports.primary = 'id'","","// The names of certain reserved keys per field definition.","exports.type = 'type'","exports.link = 'link'","exports.inverse = 'inverse'","exports.isArray = 'isArray'","","// Should be reserved for private use.","for (i = 0, j = privateKeys.length; i < j; i++) {","  key = privateKeys[i]","  exports[key] = hasSymbol ? Symbol(key) : '__' + key + '__'","}","","// Events.","exports.change = 'change'","exports.sync = 'sync'","exports.connect = 'connect'","exports.disconnect = 'disconnect'","exports.failure = 'failure'","","// Methods.","exports.find = 'find'","exports.create = 'create'","exports.update = 'update'","exports.delete = 'delete'",""],"l":{"3":1,"4":1,"5":1,"18":1,"21":1,"22":1,"23":1,"24":1,"27":1,"28":3,"29":3,"33":1,"34":1,"35":1,"36":1,"37":1,"40":1,"41":1,"42":1,"43":1}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/adapter/adapters/memory/helpers.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/adapter/adapters/memory/helpers.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":22},"end":{"line":7,"column":46}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":23},"end":{"line":34,"column":47}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":34}},"3":{"start":{"line":7,"column":0},"end":{"line":31,"column":1}},"4":{"start":{"line":8,"column":2},"end":{"line":8,"column":36}},"5":{"start":{"line":9,"column":2},"end":{"line":9,"column":36}},"6":{"start":{"line":10,"column":2},"end":{"line":10,"column":36}},"7":{"start":{"line":11,"column":2},"end":{"line":11,"column":32}},"8":{"start":{"line":12,"column":2},"end":{"line":12,"column":54}},"9":{"start":{"line":13,"column":2},"end":{"line":13,"column":17}},"10":{"start":{"line":14,"column":2},"end":{"line":14,"column":17}},"11":{"start":{"line":17,"column":2},"end":{"line":18,"column":37}},"12":{"start":{"line":20,"column":2},"end":{"line":28,"column":3}},"13":{"start":{"line":21,"column":4},"end":{"line":21,"column":26}},"14":{"start":{"line":22,"column":4},"end":{"line":25,"column":5}},"15":{"start":{"line":23,"column":6},"end":{"line":23,"column":59}},"16":{"start":{"line":24,"column":6},"end":{"line":24,"column":14}},"17":{"start":{"line":27,"column":4},"end":{"line":27,"column":33}},"18":{"start":{"line":30,"column":2},"end":{"line":30,"column":15}},"19":{"start":{"line":34,"column":0},"end":{"line":65,"column":1}},"20":{"start":{"line":35,"column":2},"end":{"line":35,"column":36}},"21":{"start":{"line":36,"column":2},"end":{"line":36,"column":36}},"22":{"start":{"line":37,"column":2},"end":{"line":37,"column":36}},"23":{"start":{"line":38,"column":2},"end":{"line":38,"column":60}},"24":{"start":{"line":39,"column":2},"end":{"line":39,"column":32}},"25":{"start":{"line":40,"column":2},"end":{"line":40,"column":54}},"26":{"start":{"line":41,"column":2},"end":{"line":41,"column":17}},"27":{"start":{"line":42,"column":2},"end":{"line":42,"column":34}},"28":{"start":{"line":45,"column":2},"end":{"line":45,"column":41}},"29":{"start":{"line":47,"column":2},"end":{"line":62,"column":3}},"30":{"start":{"line":48,"column":4},"end":{"line":48,"column":26}},"31":{"start":{"line":49,"column":4},"end":{"line":49,"column":43}},"32":{"start":{"line":50,"column":4},"end":{"line":51,"column":43}},"33":{"start":{"line":54,"column":4},"end":{"line":59,"column":5}},"34":{"start":{"line":55,"column":6},"end":{"line":57,"column":8}},"35":{"start":{"line":58,"column":6},"end":{"line":58,"column":14}},"36":{"start":{"line":61,"column":4},"end":{"line":61,"column":39}},"37":{"start":{"line":61,"column":18},"end":{"line":61,"column":39}},"38":{"start":{"line":64,"column":2},"end":{"line":64,"column":15}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":18,"column":4},"end":{"line":18,"column":22}},{"start":{"line":18,"column":25},"end":{"line":18,"column":37}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":4}},{"start":{"line":22,"column":4},"end":{"line":22,"column":4}}]},"3":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":50},"end":{"line":23,"column":52}},{"start":{"line":23,"column":55},"end":{"line":23,"column":59}}]},"4":{"line":50,"type":"cond-expr","locations":[{"start":{"line":50,"column":23},"end":{"line":50,"column":36}},{"start":{"line":51,"column":6},"end":{"line":51,"column":43}}]},"5":{"line":51,"type":"cond-expr","locations":[{"start":{"line":51,"column":34},"end":{"line":51,"column":36}},{"start":{"line":51,"column":39},"end":{"line":51,"column":43}}]},"6":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]},"7":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":61,"column":4}},{"start":{"line":61,"column":4},"end":{"line":61,"column":4}}]}},"code":["'use strict'","","var common = require('../common')","var generateId = common.generateId","","","exports.inputRecord = function (type, record) {","  var recordTypes = this.recordTypes","  var primaryKey = this.keys.primary","  var isArrayKey = this.keys.isArray","  var fields = recordTypes[type]","  var fieldsArray = Object.getOwnPropertyNames(fields)","  var result = {}","  var i, j, field","","  // Ensure that ID exists on the record.","  result[primaryKey] = primaryKey in record ?","    record[primaryKey] : generateId()","","  for (i = 0, j = fieldsArray.length; i < j; i++) {","    field = fieldsArray[i]","    if (!record.hasOwnProperty(field)) {","      result[field] = fields[field][isArrayKey] ? [] : null","      continue","    }","","    result[field] = record[field]","  }","","  return result","}","","","exports.outputRecord = function (type, record) {","  var recordTypes = this.recordTypes","  var primaryKey = this.keys.primary","  var isArrayKey = this.keys.isArray","  var denormalizedInverseKey = this.keys.denormalizedInverse","  var fields = recordTypes[type]","  var fieldsArray = Object.getOwnPropertyNames(fields)","  var result = {}","  var i, j, field, hasField, value","","  // Ensure that ID exists on the record.","  result[primaryKey] = record[primaryKey]","","  for (i = 0, j = fieldsArray.length; i < j; i++) {","    field = fieldsArray[i]","    hasField = record.hasOwnProperty(field)","    value = hasField ? record[field] :","      fields[field][isArrayKey] ? [] : null","","    // Do not enumerate denormalized fields.","    if (fields[field][denormalizedInverseKey]) {","      Object.defineProperty(result, field, {","        configurable: true, writable: true, value: value","      })","      continue","    }","","    if (hasField) result[field] = value","  }","","  return result","}",""],"l":{"3":1,"4":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"17":0,"20":0,"21":0,"22":0,"23":0,"24":0,"27":0,"30":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"45":0,"47":0,"48":0,"49":0,"50":0,"54":0,"55":0,"58":0,"61":0,"64":0}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/adapter/singleton.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/adapter/singleton.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"AdapterSingleton","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":39}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":33}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":40}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":36}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":42}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":42}},"7":{"start":{"line":14,"column":0},"end":{"line":39,"column":1}},"8":{"start":{"line":15,"column":2},"end":{"line":15,"column":26}},"9":{"start":{"line":17,"column":2},"end":{"line":18,"column":47}},"10":{"start":{"line":20,"column":2},"end":{"line":21,"column":58}},"11":{"start":{"line":21,"column":4},"end":{"line":21,"column":58}},"12":{"start":{"line":23,"column":2},"end":{"line":24,"column":69}},"13":{"start":{"line":26,"column":2},"end":{"line":27,"column":70}},"14":{"start":{"line":27,"column":4},"end":{"line":27,"column":70}},"15":{"start":{"line":29,"column":2},"end":{"line":38,"column":4}},"16":{"start":{"line":42,"column":0},"end":{"line":42,"column":33}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":18,"column":4},"end":{"line":18,"column":22}},{"start":{"line":18,"column":25},"end":{"line":18,"column":47}}]},"2":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"3":{"line":23,"type":"cond-expr","locations":[{"start":{"line":24,"column":41},"end":{"line":24,"column":49}},{"start":{"line":24,"column":52},"end":{"line":24,"column":69}}]},"4":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"5":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":13},"end":{"line":30,"column":21}},{"start":{"line":30,"column":25},"end":{"line":30,"column":27}}]}},"code":["'use strict'","","var Adapter = require('./')","var common = require('../common')","var errors = require('../common/errors')","var keys = require('../common/keys')","var message = require('../common/message')","var promise = require('../common/promise')","","","/**"," * A singleton for the adapter. For internal use."," */","function AdapterSingleton (properties) {","  var CustomAdapter, input","","  input = Array.isArray(properties.adapter) ?","    properties.adapter : [ properties.adapter ]","","  if (typeof input[0] !== 'function')","    throw new TypeError('The adapter must be a function.')","","  CustomAdapter = Adapter.prototype","    .isPrototypeOf(input[0].prototype) ? input[0] : input[0](Adapter)","","  if (!Adapter.prototype.isPrototypeOf(CustomAdapter.prototype))","    throw new TypeError('The adapter must inherit the Adapter class.')","","  return new CustomAdapter({","    options: input[1] || {},","    recordTypes: properties.recordTypes,","    features: CustomAdapter.features,","    common: common,","    errors: errors,","    keys: keys,","    message: message,","    Promise: promise.Promise","  })","}","","","module.exports = AdapterSingleton",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"14":1,"15":0,"17":0,"20":0,"21":0,"23":0,"26":0,"27":0,"29":0,"42":1}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/adapter/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/adapter/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":2,"6":1,"7":1,"8":1,"9":0,"10":0,"11":1,"12":0,"13":0,"14":1,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":1,"26":0,"27":0,"28":1,"29":0,"30":0,"31":1,"32":0,"33":0,"34":1,"35":0,"36":1,"37":1,"38":1},"b":{},"f":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"Adapter","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":30}}},"2":{"name":"(anonymous_2)","line":42,"loc":{"start":{"line":42,"column":32},"end":{"line":42,"column":44}}},"3":{"name":"(anonymous_3)","line":60,"loc":{"start":{"line":60,"column":28},"end":{"line":60,"column":40}}},"4":{"name":"(anonymous_4)","line":71,"loc":{"start":{"line":71,"column":31},"end":{"line":71,"column":43}}},"5":{"name":"(anonymous_5)","line":93,"loc":{"start":{"line":93,"column":27},"end":{"line":93,"column":39}}},"6":{"name":"(anonymous_6)","line":196,"loc":{"start":{"line":196,"column":25},"end":{"line":196,"column":37}}},"7":{"name":"(anonymous_7)","line":243,"loc":{"start":{"line":243,"column":27},"end":{"line":243,"column":39}}},"8":{"name":"(anonymous_8)","line":259,"loc":{"start":{"line":259,"column":27},"end":{"line":259,"column":39}}},"9":{"name":"(anonymous_9)","line":272,"loc":{"start":{"line":272,"column":37},"end":{"line":272,"column":49}}},"10":{"name":"(anonymous_10)","line":286,"loc":{"start":{"line":286,"column":35},"end":{"line":286,"column":47}}},"11":{"name":"(anonymous_11)","line":302,"loc":{"start":{"line":302,"column":35},"end":{"line":302,"column":53}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":48}},"4":{"start":{"line":16,"column":0},"end":{"line":18,"column":1}},"5":{"start":{"line":17,"column":2},"end":{"line":17,"column":26}},"6":{"start":{"line":42,"column":0},"end":{"line":44,"column":1}},"7":{"start":{"line":46,"column":0},"end":{"line":46,"column":36}},"8":{"start":{"line":60,"column":0},"end":{"line":63,"column":1}},"9":{"start":{"line":61,"column":2},"end":{"line":61,"column":31}},"10":{"start":{"line":62,"column":2},"end":{"line":62,"column":26}},"11":{"start":{"line":71,"column":0},"end":{"line":74,"column":1}},"12":{"start":{"line":72,"column":2},"end":{"line":72,"column":31}},"13":{"start":{"line":73,"column":2},"end":{"line":73,"column":26}},"14":{"start":{"line":93,"column":0},"end":{"line":96,"column":1}},"15":{"start":{"line":94,"column":2},"end":{"line":94,"column":31}},"16":{"start":{"line":95,"column":2},"end":{"line":95,"column":28}},"17":{"start":{"line":196,"column":0},"end":{"line":201,"column":1}},"18":{"start":{"line":197,"column":2},"end":{"line":197,"column":31}},"19":{"start":{"line":198,"column":2},"end":{"line":198,"column":18}},"20":{"start":{"line":199,"column":2},"end":{"line":199,"column":19}},"21":{"start":{"line":200,"column":2},"end":{"line":200,"column":33}},"22":{"start":{"line":243,"column":0},"end":{"line":246,"column":1}},"23":{"start":{"line":244,"column":2},"end":{"line":244,"column":31}},"24":{"start":{"line":245,"column":2},"end":{"line":245,"column":27}},"25":{"start":{"line":259,"column":0},"end":{"line":262,"column":1}},"26":{"start":{"line":260,"column":2},"end":{"line":260,"column":31}},"27":{"start":{"line":261,"column":2},"end":{"line":261,"column":27}},"28":{"start":{"line":272,"column":0},"end":{"line":275,"column":1}},"29":{"start":{"line":273,"column":2},"end":{"line":273,"column":31}},"30":{"start":{"line":274,"column":2},"end":{"line":274,"column":30}},"31":{"start":{"line":286,"column":0},"end":{"line":289,"column":1}},"32":{"start":{"line":287,"column":2},"end":{"line":287,"column":31}},"33":{"start":{"line":288,"column":2},"end":{"line":288,"column":26}},"34":{"start":{"line":302,"column":0},"end":{"line":304,"column":1}},"35":{"start":{"line":303,"column":2},"end":{"line":303,"column":15}},"36":{"start":{"line":308,"column":0},"end":{"line":308,"column":47}},"37":{"start":{"line":311,"column":0},"end":{"line":311,"column":21}},"38":{"start":{"line":313,"column":0},"end":{"line":313,"column":24}}},"branchMap":{},"code":["'use strict'","","var assign = require('../common/assign')","var promise = require('../common/promise')","var memoryAdapter = require('./adapters/memory')","","","/**"," * Adapter is an abstract base class containing methods to be implemented. All"," * records returned by the adapter must have the primary key `id`. The primary"," * key **MUST** be a string or a number."," *"," * It has one static property, `defaultAdapter` which is a reference to the"," * memory adapter."," */","function Adapter (properties) {","  assign(this, properties)","}","","","/**"," * The Adapter should not be instantiated directly, since the constructor"," * function accepts dependencies. The keys which are injected are:"," *"," * definitions."," * - `recordTypes`: an object which enumerates record types and their"," * definitions."," * - `options`: the options passed to the adapter."," * - `common`: an object containing all internal utilities."," * - `errors`: same as static property on Fortune class."," * - `keys`: an object which enumerates reserved constants for record type"," * - `message`: a function with the signature (`id`, `language`, `data`)."," *"," * These keys are accessible on the instance (`this`)."," *"," * An adapter may expose a `features` static property, which is an object"," * that can contain boolean flags. These are used mainly for checking which"," * additional features may be tested."," *"," * - `logicalOperators`: whether or not `and` and `or` queries are supported."," */","Adapter.prototype.constructor = function () {","  // This exists here only for documentation purposes.","}","","delete Adapter.prototype.constructor","","","/**"," * The responsibility of this method is to ensure that the record types"," * defined are consistent with the backing data store. If there is any"," * mismatch it should either try to reconcile differences or fail."," * This method **SHOULD NOT** be called manually, and it should not accept"," * any parameters. This is the time to do setup tasks like create tables,"," * ensure indexes, etc. On successful completion, it should resolve to no"," * value."," *"," * @return {Promise}"," */","Adapter.prototype.connect = function () {","  var Promise = promise.Promise","  return Promise.resolve()","}","","","/**"," * Close the database connection."," *"," * @return {Promise}"," */","Adapter.prototype.disconnect = function () {","  var Promise = promise.Promise","  return Promise.resolve()","}","","","/**"," * Create records. A successful response resolves to the newly created"," * records."," *"," * **IMPORTANT**: the record must have initial values for each field defined"," * in the record type. For non-array fields, it should be `null`, and for"," * array fields it should be `[]` (empty array). Note that not all fields in"," * the record type may be enumerable, such as denormalized inverse fields, so"," * it may be necessary to iterate over fields using"," * `Object.getOwnPropertyNames`."," *"," * @param {String} type"," * @param {Object[]} records"," * @param {Object} [meta]"," * @return {Promise}"," */","Adapter.prototype.create = function () {","  var Promise = promise.Promise","  return Promise.resolve([])","}","","","/**"," * Find records by IDs and options. If IDs is undefined, it should try to"," * return all records. However, if IDs is an empty array, it should be a"," * no-op. The format of the options may be as follows:"," *"," * ```js"," * {"," *   sort: { ... },"," *   fields: { ... },"," *   exists: { ... },"," *   match: { ... },"," *   range: { ... },"," *"," *   // Limit results to this number. Zero means no limit."," *   limit: 0,"," *"," *   // Offset results by this much from the beginning."," *   offset: 0,"," *"," *   // The logical operator \"and\", may be nested. Optional feature."," *   and: { ... },"," *"," *   // The logical operator \"or\", may be nested. Optional feature."," *   or: { ... },"," *"," *   // Reserved field for custom querying."," *   query: null"," * }"," * ```"," *"," * For the fields `exists`, `match`, and `range`, the logical operator should"," * be \"and\". The `query` field may be used on a per adapter basis to provide"," * custom querying functionality."," *"," * The syntax of the `sort` object is as follows:"," *"," * ```js"," * {"," *   age: false, // descending"," *   name: true // ascending"," * }"," * ```"," *"," * Fields can be specified to be either included or omitted, but not both."," * Use the values `true` to include, or `false` to omit. The syntax of the"," * `fields` object is as follows:"," *"," * ```js"," * {"," *   name: true, // include this field"," *   age: true // also include this field"," * }"," * ```"," *"," * The `exists` object specifies if a field should exist or not (`true` or"," * `false`). For array fields, it should check for non-zero length."," *"," * ```js"," * {"," *   name: true, // check if this fields exists"," *   age: false // check if this field doesn't exist"," * }"," * ```"," *"," * The syntax of the `match` object is straightforward:"," *"," * ```js"," * {"," *   name: 'value', // exact match or containment if array"," *   friends: [ 'joe', 'bob' ] // match any one of these values"," * }"," * ```"," *"," * The `range` object is used to filter between lower and upper bounds. It"," * should take precedence over `match`. For array fields, it should apply on"," * the length of the array. For singular link fields, it should not apply."," *"," * ```js"," * {"," *   range: { // Ranges should be inclusive."," *     age: [ 18, null ], // From 18 and above."," *     name: [ 'a', 'd' ], // Starting with letters A through C."," *     createdAt: [ null, new Date(2016, 0) ] // Dates until 2016."," *   }"," * }"," * ```"," *"," * The return value of the promise should be an array, and the array **MUST**"," * have a `count` property that is the total number of records without limit"," * and offset."," *"," * @param {String} type"," * @param {String[]|Number[]} [ids]"," * @param {Object} [options]"," * @param {Object} [meta]"," * @return {Promise}"," */","Adapter.prototype.find = function () {","  var Promise = promise.Promise","  var results = []","  results.count = 0","  return Promise.resolve(results)","}","","","/**"," * Update records by IDs. Success should resolve to the number of records"," * updated. The `updates` parameter should be an array of objects that"," * correspond to updates by IDs. Each update object must be as follows:"," *"," * ```js"," * {"," *   // ID to update. Required."," *   id: 1,"," *"," *   // Replace a value of a field. Use a `null` value to unset a field."," *   replace: { name: 'Bob' },"," *"," *   // Append values to an array field. If the value is an array, all of"," *   // the values should be pushed."," *   push: { pets: 1 },"," *"," *   // Remove values from an array field. If the value is an array, all of"," *   // the values should be removed."," *   pull: { friends: [ 2, 3 ] },"," *"," *   // The `operate` field is specific to the adapter. This should take"," *   // precedence over all of the above. Warning: using this may bypass"," *   // field definitions and referential integrity. Use at your own risk."," *   operate: null"," * }"," * ```"," *"," * Things to consider:"," *"," * - `push` and `pull` can not be applied to non-arrays."," * - The same value in the same field should not exist in both `push` and"," * `pull`."," *"," * @param {String} type"," * @param {Object[]} updates"," * @param {Object} [meta]"," * @return {Promise}"," */","Adapter.prototype.update = function () {","  var Promise = promise.Promise","  return Promise.resolve(0)","}","","","/**"," * Delete records by IDs, or delete the entire collection if IDs are"," * undefined or empty. Success should resolve to the number of records"," * deleted."," *"," * @param {String} type"," * @param {String[]|Number[]} [ids]"," * @param {Object} [meta]"," * @return {Promise}"," */","Adapter.prototype.delete = function () {","  var Promise = promise.Promise","  return Promise.resolve(0)","}","","","/**"," * Begin a transaction to write to the data store. This method is optional"," * to implement, but useful for ACID. It should resolve to an object"," * containing all of the adapter methods."," *"," * @return {Promise}"," */","Adapter.prototype.beginTransaction = function () {","  var Promise = promise.Promise","  return Promise.resolve(this)","}","","","/**"," * End a transaction. This method is optional to implement."," * It should return a Promise with no value if the transaction is"," * completed successfully, or reject the promise if it failed."," *"," * @param {Error} [error] - If an error is passed, roll back the transaction."," * @return {Promise}"," */","Adapter.prototype.endTransaction = function () {","  var Promise = promise.Promise","  return Promise.resolve()","}","","","/**"," * Apply operators on a record, then return the record. If you make use of"," * update operators, you should implement this method so that the internal"," * implementation of update requests get records in the correct state. This"," * method is optional to implement."," *"," * @param {Object} record"," * @param {Object} operators - The `operate` field on an `update` object."," * @return {Object}"," */","Adapter.prototype.applyOperators = function (record) {","  return record","}","","","// Expose the default adapter.","Adapter.DefaultAdapter = memoryAdapter(Adapter)","","// Expose features object.","Adapter.features = {}","","module.exports = Adapter",""],"l":{"3":1,"4":1,"5":1,"16":1,"17":2,"42":1,"46":1,"60":1,"61":0,"62":0,"71":1,"72":0,"73":0,"93":1,"94":0,"95":0,"196":1,"197":0,"198":0,"199":0,"200":0,"243":1,"244":0,"245":0,"259":1,"260":0,"261":0,"272":1,"273":0,"274":0,"286":1,"287":0,"288":0,"302":1,"303":0,"308":1,"311":1,"313":1}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":34,"column":1}}},"branchMap":{},"code":["'use strict'","","module.exports = {","  // Keys","  constants: require('./constants'),","  keys: require('./keys'),","  events: require('./events'),","  methods: require('./methods'),","","  // Utility functions","  assign: require('./assign'),","  castToNumber: require('./cast_to_number'),","  castValue: require('./cast_value'),","  clone: require('./clone'),","  deepEqual: require('./deep_equal'),","  generateId: require('./generate_id'),","","  // i18n","  message: require('./message'),","","  // Typed responses","  responses: require('./response_classes'),","  errors: require('./errors'),","  successes: require('./success'),","","  // Arrays","  filter: require('./array/filter'),","  find: require('./array/find'),","  includes: require('./array/includes'),","  map: require('./array/map'),","  pull: require('./array/pull'),","  reduce: require('./array/reduce'),","  unique: require('./array/unique')","}",""],"l":{"3":1}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/events.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/events.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":33}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":41}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":35}}},"branchMap":{},"code":["'use strict'","","var constants = require('./constants')","","exports.change = constants.change","exports.sync = constants.sync","exports.connect = constants.connect","exports.disconnect = constants.disconnect","exports.failure = constants.failure",""],"l":{"3":1,"5":1,"6":1,"7":1,"8":1,"9":1}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/methods.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/methods.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":29}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":33}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":33}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":33}}},"branchMap":{},"code":["'use strict'","","var constants = require('./constants')","","exports.find = constants.find","exports.create = constants.create","exports.update = constants.update","exports.delete = constants.delete",""],"l":{"3":1,"5":1,"6":1,"7":1,"8":1}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/cast_to_number.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/cast_to_number.js","s":{"1":1,"2":0,"3":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"castToNumber","line":3,"loc":{"start":{"line":3,"column":17},"end":{"line":3,"column":44}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":8,"column":1}},"2":{"start":{"line":6,"column":2},"end":{"line":6,"column":35}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":41}}},"branchMap":{"1":{"line":7,"type":"cond-expr","locations":[{"start":{"line":7,"column":31},"end":{"line":7,"column":36}},{"start":{"line":7,"column":39},"end":{"line":7,"column":41}}]}},"code":["'use strict'","","module.exports = function castToNumber (id) {","  // Stolen from jQuery source code:","  // https://api.jquery.com/jQuery.isNumeric/","  var float = Number.parseFloat(id)","  return id - float + 1 >= 0 ? float : id","}",""],"l":{"3":1,"6":0,"7":0}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/cast_value.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/cast_value.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":28},"end":{"line":7,"column":55}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":12},"end":{"line":13,"column":25}}},"3":{"name":"(anonymous_3)","line":15,"loc":{"start":{"line":15,"column":10},"end":{"line":15,"column":32}}},"4":{"name":"(anonymous_4)","line":29,"loc":{"start":{"line":29,"column":12},"end":{"line":29,"column":34}}},"5":{"name":"(anonymous_5)","line":41,"loc":{"start":{"line":41,"column":13},"end":{"line":41,"column":26}}},"6":{"name":"(anonymous_6)","line":46,"loc":{"start":{"line":46,"column":12},"end":{"line":46,"column":34}}},"7":{"name":"(anonymous_7)","line":52,"loc":{"start":{"line":52,"column":12},"end":{"line":52,"column":25}}},"8":{"name":"castValue","line":64,"loc":{"start":{"line":64,"column":17},"end":{"line":64,"column":59}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":46}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":44}},"5":{"start":{"line":7,"column":0},"end":{"line":9,"column":1}},"6":{"start":{"line":8,"column":2},"end":{"line":8,"column":36}},"7":{"start":{"line":12,"column":0},"end":{"line":53,"column":1}},"8":{"start":{"line":13,"column":27},"end":{"line":13,"column":48}},"9":{"start":{"line":16,"column":4},"end":{"line":20,"column":5}},"10":{"start":{"line":17,"column":6},"end":{"line":17,"column":23}},"11":{"start":{"line":18,"column":6},"end":{"line":19,"column":49}},"12":{"start":{"line":18,"column":27},"end":{"line":19,"column":49}},"13":{"start":{"line":22,"column":4},"end":{"line":22,"column":19}},"14":{"start":{"line":23,"column":4},"end":{"line":24,"column":47}},"15":{"start":{"line":23,"column":35},"end":{"line":24,"column":47}},"16":{"start":{"line":26,"column":4},"end":{"line":26,"column":12}},"17":{"start":{"line":30,"column":4},"end":{"line":31,"column":39}},"18":{"start":{"line":33,"column":4},"end":{"line":36,"column":9}},"19":{"start":{"line":33,"column":31},"end":{"line":36,"column":9}},"20":{"start":{"line":38,"column":4},"end":{"line":38,"column":36}},"21":{"start":{"line":42,"column":4},"end":{"line":42,"column":50}},"22":{"start":{"line":42,"column":31},"end":{"line":42,"column":50}},"23":{"start":{"line":43,"column":4},"end":{"line":43,"column":21}},"24":{"start":{"line":47,"column":4},"end":{"line":47,"column":51}},"25":{"start":{"line":47,"column":31},"end":{"line":47,"column":51}},"26":{"start":{"line":48,"column":4},"end":{"line":48,"column":39}},"27":{"start":{"line":48,"column":31},"end":{"line":48,"column":39}},"28":{"start":{"line":49,"column":4},"end":{"line":49,"column":69}},"29":{"start":{"line":52,"column":27},"end":{"line":52,"column":41}},"30":{"start":{"line":64,"column":0},"end":{"line":81,"column":1}},"31":{"start":{"line":65,"column":2},"end":{"line":65,"column":22}},"32":{"start":{"line":68,"column":2},"end":{"line":68,"column":31}},"33":{"start":{"line":68,"column":20},"end":{"line":68,"column":31}},"34":{"start":{"line":70,"column":2},"end":{"line":78,"column":33}},"35":{"start":{"line":71,"column":4},"end":{"line":77,"column":5}},"36":{"start":{"line":72,"column":6},"end":{"line":72,"column":26}},"37":{"start":{"line":73,"column":6},"end":{"line":76,"column":7}},"38":{"start":{"line":74,"column":8},"end":{"line":74,"column":22}},"39":{"start":{"line":75,"column":8},"end":{"line":75,"column":13}},"40":{"start":{"line":78,"column":7},"end":{"line":78,"column":33}},"41":{"start":{"line":80,"column":2},"end":{"line":80,"column":62}}},"branchMap":{"1":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":13},"end":{"line":7,"column":24}},{"start":{"line":7,"column":28},"end":{"line":9,"column":1}}]},"2":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":16,"column":4}},{"start":{"line":16,"column":4},"end":{"line":16,"column":4}}]},"3":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":6},"end":{"line":18,"column":6}},{"start":{"line":18,"column":6},"end":{"line":18,"column":6}}]},"4":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":23,"column":4}},{"start":{"line":23,"column":4},"end":{"line":23,"column":4}}]},"5":{"line":30,"type":"cond-expr","locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":28}},{"start":{"line":31,"column":31},"end":{"line":31,"column":39}}]},"6":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":25},"end":{"line":30,"column":32}},{"start":{"line":30,"column":36},"end":{"line":30,"column":58}}]},"7":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4}},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]},"8":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"9":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":4}},{"start":{"line":47,"column":4},"end":{"line":47,"column":4}}]},"10":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":48,"column":4}},{"start":{"line":48,"column":4},"end":{"line":48,"column":4}}]},"11":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":2},"end":{"line":68,"column":2}},{"start":{"line":68,"column":2},"end":{"line":68,"column":2}}]},"12":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":2},"end":{"line":70,"column":2}},{"start":{"line":70,"column":2},"end":{"line":70,"column":2}}]},"13":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":6},"end":{"line":73,"column":6}},{"start":{"line":73,"column":6},"end":{"line":73,"column":6}}]},"14":{"line":80,"type":"cond-expr","locations":[{"start":{"line":80,"column":34},"end":{"line":80,"column":54}},{"start":{"line":80,"column":57},"end":{"line":80,"column":62}}]},"15":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":9},"end":{"line":80,"column":13}},{"start":{"line":80,"column":17},"end":{"line":80,"column":31}}]}},"code":["'use strict'","","var errors = require('./errors')","var message = require('./message')","var castToNumber = require('./cast_to_number')","var BadRequestError = errors.BadRequestError","var buffer = Buffer.from || function (input, encoding) {","  return new Buffer(input, encoding)","}","","","var castByType = [","  [ Number, function (x) { return parseFloat(x) } ],","","  [ Date, function (x, options) {","    if (typeof x === 'string') {","      x = Date.parse(x)","      if (Number.isNaN(x)) throw new BadRequestError(","        message('DateISO8601', options.language))","    }","","    x = new Date(x)","    if (Number.isNaN(x.getTime())) throw new BadRequestError(","      message('DateInvalid', options.language))","","    return x","  } ],","","  [ Buffer, function (x, options) {","    var bufferEncoding = options && options.bufferEncoding ?","      options.bufferEncoding : 'base64'","","    if (typeof x !== 'string') throw new BadRequestError(","      message('BufferEncoding', options.language, {","        bufferEncoding: bufferEncoding","      }))","","    return buffer(x, bufferEncoding)","  } ],","","  [ Boolean, function (x) {","    if (typeof x === 'string') return x === 'true'","    return Boolean(x)","  } ],","","  [ Object, function (x, options) {","    if (typeof x === 'string') return JSON.parse(x)","    if (typeof x === 'object') return x","    throw new BadRequestError(message('JSONParse', options.language))","  } ],","","  [ String, function (x) { return '' + x } ]","]","","","/**"," * Cast a value to the given type. Skip if type is missing or value is null."," *"," * @param {*} value"," * @param {Function} type - Constructor function."," * @param {Object} [options]"," * @return {*}"," */","module.exports = function castValue (value, type, options) {","  var i, j, pair, cast","","  // Special case for empty string: it should be null.","  if (value === '') return null","","  if (type)","    for (i = 0, j = castByType.length; i < j; i++) {","      pair = castByType[i]","      if (pair[0] === type) {","        cast = pair[1]","        break","      }","    }","  else return castToNumber(value)","","  return cast && value !== null ? cast(value, options) : value","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"12":1,"13":0,"16":0,"17":0,"18":0,"22":0,"23":0,"26":0,"30":0,"33":0,"38":0,"42":0,"43":0,"47":0,"48":0,"49":0,"52":0,"64":1,"65":0,"68":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"78":0,"80":0}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/clone.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/clone.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0]},"f":{"1":0},"fnMap":{"1":{"name":"clone","line":9,"loc":{"start":{"line":9,"column":17},"end":{"line":9,"column":40}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":26,"column":1}},"2":{"start":{"line":10,"column":2},"end":{"line":10,"column":33}},"3":{"start":{"line":12,"column":2},"end":{"line":14,"column":16}},"4":{"start":{"line":12,"column":28},"end":{"line":12,"column":42}},"5":{"start":{"line":13,"column":7},"end":{"line":14,"column":16}},"6":{"start":{"line":14,"column":4},"end":{"line":14,"column":16}},"7":{"start":{"line":16,"column":2},"end":{"line":16,"column":28}},"8":{"start":{"line":18,"column":2},"end":{"line":23,"column":3}},"9":{"start":{"line":19,"column":4},"end":{"line":19,"column":22}},"10":{"start":{"line":20,"column":4},"end":{"line":22,"column":49}},"11":{"start":{"line":25,"column":2},"end":{"line":25,"column":15}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":2},"end":{"line":12,"column":2}},{"start":{"line":12,"column":2},"end":{"line":12,"column":2}}]},"2":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":7},"end":{"line":13,"column":7}},{"start":{"line":13,"column":7},"end":{"line":13,"column":7}}]},"3":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":11},"end":{"line":13,"column":24}},{"start":{"line":13,"column":28},"end":{"line":13,"column":77}}]},"4":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":21},"end":{"line":16,"column":23}},{"start":{"line":16,"column":26},"end":{"line":16,"column":28}}]},"5":{"line":20,"type":"cond-expr","locations":[{"start":{"line":22,"column":29},"end":{"line":22,"column":41}},{"start":{"line":22,"column":44},"end":{"line":22,"column":49}}]},"6":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":18},"end":{"line":20,"column":32}},{"start":{"line":20,"column":36},"end":{"line":20,"column":55}},{"start":{"line":21,"column":6},"end":{"line":21,"column":55}},{"start":{"line":22,"column":6},"end":{"line":22,"column":26}}]}},"code":["'use strict'","","/**"," * A fast deep clone function, which covers mostly serializable objects."," *"," * @param {*}"," * @return {*}"," */","module.exports = function clone (input) {","  var output, key, value, isArray","","  if (Array.isArray(input)) isArray = true","  else if (input == null || Object.getPrototypeOf(input) !== Object.prototype)","    return input","","  output = isArray ? [] : {}","","  for (key in input) {","    value = input[key]","    output[key] = value !== null && value !== undefined &&","      Object.getPrototypeOf(value) === Object.prototype ||","      Array.isArray(value) ? clone(value) : value","  }","","  return output","}",""],"l":{"9":1,"10":0,"12":0,"13":0,"14":0,"16":0,"18":0,"19":0,"20":0,"25":0}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/success.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/success.js","s":{"1":1,"2":1,"3":1,"4":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":49}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":29}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":39}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}}},"branchMap":{},"code":["'use strict'","","var responseClass = require('./response_classes')","","exports.OK = responseClass.OK","exports.Created = responseClass.Created","exports.Empty = responseClass.Empty",""],"l":{"3":1,"5":1,"6":1,"7":1}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/array/filter.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/array/filter.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"filter","line":10,"loc":{"start":{"line":10,"column":17},"end":{"line":10,"column":45}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":18,"column":1}},"2":{"start":{"line":11,"column":2},"end":{"line":11,"column":25}},"3":{"start":{"line":13,"column":2},"end":{"line":15,"column":23}},"4":{"start":{"line":14,"column":4},"end":{"line":15,"column":23}},"5":{"start":{"line":15,"column":6},"end":{"line":15,"column":23}},"6":{"start":{"line":17,"column":2},"end":{"line":17,"column":10}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":14,"column":4}},{"start":{"line":14,"column":4},"end":{"line":14,"column":4}}]}},"code":["'use strict'","","/**"," * A more performant `Array.prototype.filter`."," *"," * @param {*[]} array"," * @param {Function} fn"," * @return {Boolean}"," */","module.exports = function filter (array, fn) {","  var i, j, k = [], l = 0","","  for (i = 0, j = array.length; i < j; i++)","    if (fn(array[i], i, array))","      k[l++] = array[i]","","  return k","}",""],"l":{"10":1,"11":0,"13":0,"14":0,"15":0,"17":0}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/array/includes.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/array/includes.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"includes","line":10,"loc":{"start":{"line":10,"column":17},"end":{"line":10,"column":50}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":17,"column":1}},"2":{"start":{"line":11,"column":2},"end":{"line":11,"column":10}},"3":{"start":{"line":13,"column":2},"end":{"line":14,"column":39}},"4":{"start":{"line":14,"column":4},"end":{"line":14,"column":39}},"5":{"start":{"line":14,"column":28},"end":{"line":14,"column":39}},"6":{"start":{"line":16,"column":2},"end":{"line":16,"column":14}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":14,"column":4}},{"start":{"line":14,"column":4},"end":{"line":14,"column":4}}]}},"code":["'use strict'","","/**"," * A more performant `Array.prototype.includes`."," *"," * @param {*[]} array"," * @param {*} value"," * @return {Boolean}"," */","module.exports = function includes (array, value) {","  var i, j","","  for (i = 0, j = array.length; i < j; i++)","    if (array[i] === value) return true","","  return false","}",""],"l":{"10":1,"11":0,"13":0,"14":0,"16":0}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/array/reduce.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/array/reduce.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"reduce","line":11,"loc":{"start":{"line":11,"column":17},"end":{"line":11,"column":59}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":18,"column":1}},"2":{"start":{"line":12,"column":2},"end":{"line":12,"column":28}},"3":{"start":{"line":14,"column":2},"end":{"line":15,"column":33}},"4":{"start":{"line":15,"column":4},"end":{"line":15,"column":33}},"5":{"start":{"line":17,"column":2},"end":{"line":17,"column":10}}},"branchMap":{},"code":["'use strict'","","/**"," * A more performant `Array.prototype.reduce`."," *"," * @param {*[]} array"," * @param {Function} fn"," * @param {*} [initialValue]"," * @return {Boolean}"," */","module.exports = function reduce (array, fn, initialValue) {","  var i, j, k = initialValue","","  for (i = 0, j = array.length; i < j; i++)","    k = fn(k, array[i], i, array)","","  return k","}",""],"l":{"11":1,"12":0,"14":0,"15":0,"17":0}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/array/unique.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/common/array/unique.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"unique","line":10,"loc":{"start":{"line":10,"column":17},"end":{"line":10,"column":37}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":23,"column":1}},"2":{"start":{"line":11,"column":2},"end":{"line":11,"column":15}},"3":{"start":{"line":12,"column":2},"end":{"line":12,"column":17}},"4":{"start":{"line":13,"column":2},"end":{"line":13,"column":13}},"5":{"start":{"line":15,"column":2},"end":{"line":20,"column":3}},"6":{"start":{"line":16,"column":4},"end":{"line":16,"column":12}},"7":{"start":{"line":17,"column":4},"end":{"line":17,"column":40}},"8":{"start":{"line":17,"column":32},"end":{"line":17,"column":40}},"9":{"start":{"line":18,"column":4},"end":{"line":18,"column":18}},"10":{"start":{"line":19,"column":4},"end":{"line":19,"column":18}},"11":{"start":{"line":22,"column":2},"end":{"line":22,"column":15}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":4}},{"start":{"line":17,"column":4},"end":{"line":17,"column":4}}]}},"code":["'use strict'","","/**"," * Return an array with unique values. Values must be primitive, and the array"," * may not be sparse."," *"," * @param {Array}"," * @return {Array}"," */","module.exports = function unique (a) {","  var seen = {}","  var result = []","  var i, j, k","","  for (i = 0, j = a.length; i < j; i++) {","    k = a[i]","    if (seen.hasOwnProperty(k)) continue","    result.push(k)","    seen[k] = true","  }","","  return result","}",""],"l":{"10":1,"11":0,"12":0,"13":0,"15":0,"16":0,"17":0,"18":0,"19":0,"22":0}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/record_type/validate.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/record_type/validate.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":6,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":6,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":40},"end":{"line":15,"column":62}}},"2":{"name":"validate","line":27,"loc":{"start":{"line":27,"column":17},"end":{"line":27,"column":44}}},"3":{"name":"validateField","line":45,"loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":37}}},"4":{"name":"(anonymous_4)","line":79,"loc":{"start":{"line":79,"column":27},"end":{"line":79,"column":43}}},"5":{"name":"castShorthand","line":112,"loc":{"start":{"line":112,"column":0},"end":{"line":112,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":40}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":36}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":29}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":23}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":23}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":29}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":29}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":20}},"10":{"start":{"line":14,"column":0},"end":{"line":14,"column":67}},"11":{"start":{"line":15,"column":0},"end":{"line":17,"column":2}},"12":{"start":{"line":16,"column":2},"end":{"line":16,"column":38}},"13":{"start":{"line":27,"column":0},"end":{"line":36,"column":1}},"14":{"start":{"line":28,"column":2},"end":{"line":28,"column":9}},"15":{"start":{"line":30,"column":2},"end":{"line":31,"column":61}},"16":{"start":{"line":31,"column":4},"end":{"line":31,"column":61}},"17":{"start":{"line":33,"column":2},"end":{"line":33,"column":48}},"18":{"start":{"line":33,"column":22},"end":{"line":33,"column":48}},"19":{"start":{"line":35,"column":2},"end":{"line":35,"column":15}},"20":{"start":{"line":45,"column":0},"end":{"line":103,"column":1}},"21":{"start":{"line":46,"column":2},"end":{"line":46,"column":54}},"22":{"start":{"line":48,"column":2},"end":{"line":49,"column":77}},"23":{"start":{"line":49,"column":4},"end":{"line":49,"column":77}},"24":{"start":{"line":51,"column":2},"end":{"line":52,"column":71}},"25":{"start":{"line":52,"column":4},"end":{"line":52,"column":71}},"26":{"start":{"line":54,"column":2},"end":{"line":56,"column":21}},"27":{"start":{"line":55,"column":4},"end":{"line":56,"column":21}},"28":{"start":{"line":58,"column":2},"end":{"line":60,"column":40}},"29":{"start":{"line":59,"column":4},"end":{"line":60,"column":40}},"30":{"start":{"line":62,"column":2},"end":{"line":64,"column":61}},"31":{"start":{"line":63,"column":4},"end":{"line":64,"column":61}},"32":{"start":{"line":66,"column":2},"end":{"line":68,"column":28}},"33":{"start":{"line":67,"column":4},"end":{"line":68,"column":28}},"34":{"start":{"line":70,"column":2},"end":{"line":88,"column":3}},"35":{"start":{"line":71,"column":4},"end":{"line":73,"column":63}},"36":{"start":{"line":72,"column":6},"end":{"line":73,"column":63}},"37":{"start":{"line":75,"column":4},"end":{"line":77,"column":32}},"38":{"start":{"line":76,"column":6},"end":{"line":77,"column":32}},"39":{"start":{"line":79,"column":4},"end":{"line":83,"column":36}},"40":{"start":{"line":80,"column":6},"end":{"line":80,"column":58}},"41":{"start":{"line":82,"column":6},"end":{"line":83,"column":36}},"42":{"start":{"line":85,"column":4},"end":{"line":87,"column":28}},"43":{"start":{"line":86,"column":6},"end":{"line":87,"column":28}},"44":{"start":{"line":90,"column":2},"end":{"line":98,"column":3}},"45":{"start":{"line":91,"column":4},"end":{"line":93,"column":30}},"46":{"start":{"line":92,"column":6},"end":{"line":93,"column":30}},"47":{"start":{"line":95,"column":4},"end":{"line":97,"column":28}},"48":{"start":{"line":96,"column":6},"end":{"line":97,"column":28}},"49":{"start":{"line":100,"column":2},"end":{"line":102,"column":29}},"50":{"start":{"line":101,"column":4},"end":{"line":102,"column":29}},"51":{"start":{"line":112,"column":0},"end":{"line":136,"column":1}},"52":{"start":{"line":113,"column":2},"end":{"line":113,"column":9}},"53":{"start":{"line":115,"column":2},"end":{"line":133,"column":19}},"54":{"start":{"line":115,"column":33},"end":{"line":115,"column":54}},"55":{"start":{"line":116,"column":7},"end":{"line":133,"column":19}},"56":{"start":{"line":116,"column":40},"end":{"line":116,"column":61}},"57":{"start":{"line":117,"column":7},"end":{"line":133,"column":19}},"58":{"start":{"line":118,"column":4},"end":{"line":118,"column":12}},"59":{"start":{"line":120,"column":4},"end":{"line":121,"column":27}},"60":{"start":{"line":120,"column":18},"end":{"line":120,"column":40}},"61":{"start":{"line":121,"column":9},"end":{"line":121,"column":27}},"62":{"start":{"line":124,"column":4},"end":{"line":128,"column":25}},"63":{"start":{"line":125,"column":6},"end":{"line":125,"column":24}},"64":{"start":{"line":126,"column":6},"end":{"line":126,"column":25}},"65":{"start":{"line":128,"column":9},"end":{"line":128,"column":25}},"66":{"start":{"line":130,"column":4},"end":{"line":131,"column":58}},"67":{"start":{"line":130,"column":35},"end":{"line":130,"column":51}},"68":{"start":{"line":131,"column":9},"end":{"line":131,"column":58}},"69":{"start":{"line":131,"column":42},"end":{"line":131,"column":58}},"70":{"start":{"line":133,"column":7},"end":{"line":133,"column":19}},"71":{"start":{"line":135,"column":2},"end":{"line":135,"column":12}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"2":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"3":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":6},"end":{"line":48,"column":31}},{"start":{"line":48,"column":35},"end":{"line":48,"column":63}}]},"4":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":2},"end":{"line":51,"column":2}},{"start":{"line":51,"column":2},"end":{"line":51,"column":2}}]},"5":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]},"6":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"7":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"8":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":6},"end":{"line":62,"column":21}},{"start":{"line":62,"column":25},"end":{"line":62,"column":40}}]},"9":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":2},"end":{"line":66,"column":2}},{"start":{"line":66,"column":2},"end":{"line":66,"column":2}}]},"10":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":6},"end":{"line":66,"column":20}},{"start":{"line":66,"column":24},"end":{"line":66,"column":38}}]},"11":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":2},"end":{"line":70,"column":2}},{"start":{"line":70,"column":2},"end":{"line":70,"column":2}}]},"12":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":4},"end":{"line":71,"column":4}},{"start":{"line":71,"column":4},"end":{"line":71,"column":4}}]},"13":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":4},"end":{"line":75,"column":4}},{"start":{"line":75,"column":4},"end":{"line":75,"column":4}}]},"14":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":79,"column":4}},{"start":{"line":79,"column":4},"end":{"line":79,"column":4}}]},"15":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":4},"end":{"line":85,"column":4}},{"start":{"line":85,"column":4},"end":{"line":85,"column":4}}]},"16":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":2},"end":{"line":90,"column":2}},{"start":{"line":90,"column":2},"end":{"line":90,"column":2}}]},"17":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":4},"end":{"line":91,"column":4}},{"start":{"line":91,"column":4},"end":{"line":91,"column":4}}]},"18":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":95,"column":4}},{"start":{"line":95,"column":4},"end":{"line":95,"column":4}}]},"19":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":8},"end":{"line":95,"column":25}},{"start":{"line":95,"column":29},"end":{"line":95,"column":66}}]},"20":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":2},"end":{"line":100,"column":2}},{"start":{"line":100,"column":2},"end":{"line":100,"column":2}}]},"21":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":6},"end":{"line":100,"column":23}},{"start":{"line":100,"column":27},"end":{"line":100,"column":65}}]},"22":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":2},"end":{"line":115,"column":2}},{"start":{"line":115,"column":2},"end":{"line":115,"column":2}}]},"23":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":7},"end":{"line":116,"column":7}},{"start":{"line":116,"column":7},"end":{"line":116,"column":7}}]},"24":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":7},"end":{"line":117,"column":7}},{"start":{"line":117,"column":7},"end":{"line":117,"column":7}}]},"25":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":4},"end":{"line":120,"column":4}},{"start":{"line":120,"column":4},"end":{"line":120,"column":4}}]},"26":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":4},"end":{"line":124,"column":4}},{"start":{"line":124,"column":4},"end":{"line":124,"column":4}}]},"27":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":4},"end":{"line":130,"column":4}},{"start":{"line":130,"column":4},"end":{"line":130,"column":4}}]},"28":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":9},"end":{"line":131,"column":9}},{"start":{"line":131,"column":9},"end":{"line":131,"column":9}}]}},"code":["'use strict'","","var find = require('../common/array/find')","var map = require('../common/array/map')","","var keys = require('../common/keys')","var primaryKey = keys.primary","var typeKey = keys.type","var linkKey = keys.link","var inverseKey = keys.inverse","var isArrayKey = keys.isArray","","var plainObject = {}","var nativeTypes = [ String, Number, Boolean, Date, Object, Buffer ]","var stringifiedTypes = map(nativeTypes, function (nativeType) {","  return nativeType.name.toLowerCase()","})","","","/**"," * Given a hash of field definitions, validate that the definitions are in the"," * correct format."," *"," * @param {Object} fields"," * @return {Object}"," */","module.exports = function validate (fields) {","  var key","","  if (typeof fields !== 'object')","    throw new TypeError('Type definition must be an object.')","","  for (key in fields) validateField(fields, key)","","  return fields","}","","","/**"," * Parse a field definition."," *"," * @param {Object} fields"," * @param {String} key"," */","function validateField (fields, key) {","  var value = fields[key] = castShorthand(fields[key])","","  if (typeof value !== 'object' || value.constructor !== Object)","    throw new TypeError('The definition of \"' + key + '\" must be an object.')","","  if (key === primaryKey)","    throw new Error('Can not define primary key \"' + primaryKey + '\".')","","  if (~stringifiedTypes.indexOf(key.toLowerCase()))","    throw new Error('Can not define \"' + key + '\", which conflicts with a ' +","      'native type.')","","  if (key in plainObject)","    throw new Error('Can not define field name \"' + key +","      '\" which is in Object.prototype.')","","  if (!value[typeKey] && !value[linkKey])","    throw new Error('The definition of \"' + key + '\" must contain either ' +","      'the \"' + typeKey + '\" or \"' + linkKey + '\" property.')","","  if (value[typeKey] && value[linkKey])","    throw new Error('Can not define both \"' + typeKey + '\" and \"' + linkKey +","      '\" on \"' + key + '\".')","","  if (value[typeKey]) {","    if (typeof value[typeKey] === 'string')","      value[typeKey] = nativeTypes[","        stringifiedTypes.indexOf(value[typeKey].toLowerCase())]","","    if (typeof value[typeKey] !== 'function')","      throw new Error('The \"' + typeKey + '\" on \"' + key +","        '\" must be a function.')","","    if (!find(nativeTypes, function (type) {","      return type === value[typeKey].prototype.constructor","    }))","      throw new Error('The \"' + typeKey + '\" on \"' + key + '\" must inherit ' +","        'from a valid native type.')","","    if (value[inverseKey])","      throw new Error('The field \"' + inverseKey + '\" may not be defined ' +","        'on \"' + key + '\".')","  }","","  if (value[linkKey]) {","    if (typeof value[linkKey] !== 'string')","      throw new TypeError('The \"' + linkKey + '\" on \"' + key +","        '\" must be a string.')","","    if (value[inverseKey] && typeof value[inverseKey] !== 'string')","      throw new TypeError('The \"' + inverseKey + '\" on \"' + key + '\" ' +","        'must be a string.')","  }","","  if (value[isArrayKey] && typeof value[isArrayKey] !== 'boolean')","    throw new TypeError('The key \"' + isArrayKey + '\" on \"' + key + '\" ' +","        'must be a boolean.')","}","","","/**"," * Cast shorthand definition to standard definition."," *"," * @param {*} value"," * @return {Object}"," */","function castShorthand (value) {","  var obj","","  if (typeof value === 'string') obj = { link: value }","  else if (typeof value === 'function') obj = { type: value }","  else if (Array.isArray(value)) {","    obj = {}","","    if (value[1]) obj.inverse = value[1]","    else obj.isArray = true","","    // Extract type or link.","    if (Array.isArray(value[0])) {","      obj.isArray = true","      value = value[0][0]","    }","    else value = value[0]","","    if (typeof value === 'string') obj.link = value","    else if (typeof value === 'function') obj.type = value","  }","  else return value","","  return obj","}",""],"l":{"3":1,"4":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"13":1,"14":1,"15":1,"16":6,"27":1,"28":0,"30":0,"31":0,"33":0,"35":0,"45":1,"46":0,"48":0,"49":0,"51":0,"52":0,"54":0,"55":0,"58":0,"59":0,"62":0,"63":0,"66":0,"67":0,"70":0,"71":0,"72":0,"75":0,"76":0,"79":0,"80":0,"82":0,"85":0,"86":0,"90":0,"91":0,"92":0,"95":0,"96":0,"100":0,"101":0,"112":1,"113":0,"115":0,"116":0,"117":0,"118":0,"120":0,"121":0,"124":0,"125":0,"126":0,"128":0,"130":0,"131":0,"133":0,"135":0}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/record_type/ensure_types.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/record_type/ensure_types.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"ensureTypes","line":23,"loc":{"start":{"line":23,"column":17},"end":{"line":23,"column":46}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":23}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":29}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":53}},"6":{"start":{"line":11,"column":0},"end":{"line":11,"column":29}},"7":{"start":{"line":12,"column":0},"end":{"line":12,"column":31}},"8":{"start":{"line":13,"column":0},"end":{"line":13,"column":36}},"9":{"start":{"line":23,"column":0},"end":{"line":85,"column":1}},"10":{"start":{"line":24,"column":2},"end":{"line":24,"column":29}},"11":{"start":{"line":25,"column":2},"end":{"line":26,"column":45}},"12":{"start":{"line":28,"column":2},"end":{"line":82,"column":5}},"13":{"start":{"line":29,"column":4},"end":{"line":82,"column":5}},"14":{"start":{"line":30,"column":6},"end":{"line":30,"column":37}},"15":{"start":{"line":32,"column":6},"end":{"line":32,"column":44}},"16":{"start":{"line":32,"column":36},"end":{"line":32,"column":44}},"17":{"start":{"line":34,"column":6},"end":{"line":37,"column":58}},"18":{"start":{"line":35,"column":8},"end":{"line":37,"column":58}},"19":{"start":{"line":39,"column":6},"end":{"line":39,"column":47}},"20":{"start":{"line":41,"column":6},"end":{"line":59,"column":7}},"21":{"start":{"line":42,"column":8},"end":{"line":44,"column":77}},"22":{"start":{"line":43,"column":10},"end":{"line":44,"column":77}},"23":{"start":{"line":46,"column":8},"end":{"line":50,"column":42}},"24":{"start":{"line":47,"column":10},"end":{"line":50,"column":42}},"25":{"start":{"line":52,"column":8},"end":{"line":56,"column":33}},"26":{"start":{"line":53,"column":10},"end":{"line":56,"column":33}},"27":{"start":{"line":58,"column":8},"end":{"line":58,"column":16}},"28":{"start":{"line":64,"column":6},"end":{"line":65,"column":59}},"29":{"start":{"line":67,"column":6},"end":{"line":67,"column":50}},"30":{"start":{"line":69,"column":6},"end":{"line":71,"column":8}},"31":{"start":{"line":73,"column":6},"end":{"line":73,"column":33}},"32":{"start":{"line":74,"column":6},"end":{"line":74,"column":44}},"33":{"start":{"line":75,"column":6},"end":{"line":75,"column":48}},"34":{"start":{"line":76,"column":6},"end":{"line":76,"column":47}},"35":{"start":{"line":77,"column":6},"end":{"line":77,"column":59}},"36":{"start":{"line":79,"column":6},"end":{"line":81,"column":8}},"37":{"start":{"line":84,"column":2},"end":{"line":84,"column":27}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":6},"end":{"line":32,"column":6}},{"start":{"line":32,"column":6},"end":{"line":32,"column":6}}]},"2":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":6},"end":{"line":34,"column":6}},{"start":{"line":34,"column":6},"end":{"line":34,"column":6}}]},"3":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":6},"end":{"line":41,"column":6}},{"start":{"line":41,"column":6},"end":{"line":41,"column":6}}]},"4":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":42,"column":8}},{"start":{"line":42,"column":8},"end":{"line":42,"column":8}}]},"5":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":46,"column":8}},{"start":{"line":46,"column":8},"end":{"line":46,"column":8}}]},"6":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":52,"column":8}},{"start":{"line":52,"column":8},"end":{"line":52,"column":8}}]}},"code":["'use strict'","","var keys = require('../common/keys')","var linkKey = keys.link","var inverseKey = keys.inverse","var isArrayKey = keys.isArray","var denormalizedInverseKey = keys.denormalizedInverse","","","// Generate denormalized inverse field name.","var denormalizedPrefix = '__'","var denormalizedDelimiter = '_'","var denormalizedPostfix = '_inverse'","","","/**"," * Analyze the `types` object to see if `link` and `inverse` values are"," * valid. Also assign denormalized inverse fields."," *"," * @param {Object} types"," * @return {Object}"," */","module.exports = function ensureTypes (types) {","  var denormalizedFields = {}","  var type, field, definition, linkedFields,","    denormalizedField, denormalizedDefinition","","  for (type in types)","    for (field in types[type]) {","      definition = types[type][field]","","      if (!(linkKey in definition)) continue","","      if (!types.hasOwnProperty(definition[linkKey]))","        throw new Error('The value for \"' + linkKey + '\" on \"' + field +","          '\" in type \"' + type +","          '\" is invalid, the record type does not exist.')","","      linkedFields = types[definition[linkKey]]","","      if (inverseKey in definition) {","        if (!linkedFields.hasOwnProperty(definition[inverseKey]))","          throw new Error('The value for \"' + inverseKey + '\" on \"' + field +","            '\" in type \"' + type + '\" is invalid, the field does not exist.')","","        if (linkedFields[definition[inverseKey]][inverseKey] !== field)","          throw new Error('The value for \"' + inverseKey + '\" on \"' + field +","            '\" in type \"' + type +","            '\" is invalid, the inversely related field must define its ' +","            'inverse as \"' + field + '\".')","","        if (linkedFields[definition[inverseKey]][linkKey] !== type)","          throw new Error('The value for \"' + linkKey + '\" on \"' + field +","            '\" in type \"' + type +","            '\" is invalid, the inversely related field must define its link ' +","            'as \"' + type + '\".')","","        continue","      }","","      // Need to assign denormalized inverse. The denormalized inverse field","      // is basically an automatically assigned inverse field that should","      // not be visible to the client, but exists in the data store.","      denormalizedField = denormalizedPrefix + type +","        denormalizedDelimiter + field + denormalizedPostfix","","      denormalizedFields[denormalizedField] = true","","      Object.defineProperty(definition, inverseKey, {","        value: denormalizedField","      })","","      denormalizedDefinition = {}","      denormalizedDefinition[linkKey] = type","      denormalizedDefinition[inverseKey] = field","      denormalizedDefinition[isArrayKey] = true","      denormalizedDefinition[denormalizedInverseKey] = true","","      Object.defineProperty(linkedFields, denormalizedField, {","        value: denormalizedDefinition","      })","    }","","  return denormalizedFields","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"11":1,"12":1,"13":1,"23":1,"24":0,"25":0,"28":0,"29":0,"30":0,"32":0,"34":0,"35":0,"39":0,"41":0,"42":0,"43":0,"46":0,"47":0,"52":0,"53":0,"58":0,"64":0,"67":0,"69":0,"73":0,"74":0,"75":0,"76":0,"77":0,"79":0,"84":0}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/dispatch/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/dispatch/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":1,"58":1,"59":0,"60":0,"61":0,"62":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"dispatch","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":28}}},"2":{"name":"(anonymous_2)","line":40,"loc":{"start":{"line":40,"column":8},"end":{"line":40,"column":27}}},"3":{"name":"(anonymous_3)","line":69,"loc":{"start":{"line":69,"column":8},"end":{"line":69,"column":31}}},"4":{"name":"(anonymous_4)","line":82,"loc":{"start":{"line":82,"column":8},"end":{"line":82,"column":27}}},"5":{"name":"(anonymous_5)","line":84,"loc":{"start":{"line":84,"column":12},"end":{"line":84,"column":24}}},"6":{"name":"(anonymous_6)","line":97,"loc":{"start":{"line":97,"column":9},"end":{"line":97,"column":26}}},"7":{"name":"throwError","line":101,"loc":{"start":{"line":101,"column":4},"end":{"line":101,"column":27}}},"8":{"name":"setDefaults","line":125,"loc":{"start":{"line":125,"column":0},"end":{"line":125,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":40}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":46}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":42}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":57}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":51}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":43}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":25}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":31}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":35}},"12":{"start":{"line":16,"column":0},"end":{"line":16,"column":42}},"13":{"start":{"line":17,"column":0},"end":{"line":17,"column":29}},"14":{"start":{"line":18,"column":0},"end":{"line":18,"column":33}},"15":{"start":{"line":28,"column":0},"end":{"line":105,"column":1}},"16":{"start":{"line":29,"column":2},"end":{"line":29,"column":31}},"17":{"start":{"line":30,"column":2},"end":{"line":30,"column":24}},"18":{"start":{"line":31,"column":2},"end":{"line":31,"column":36}},"19":{"start":{"line":32,"column":2},"end":{"line":32,"column":28}},"20":{"start":{"line":34,"column":2},"end":{"line":34,"column":36}},"21":{"start":{"line":35,"column":2},"end":{"line":35,"column":37}},"22":{"start":{"line":38,"column":2},"end":{"line":104,"column":4}},"23":{"start":{"line":41,"column":4},"end":{"line":41,"column":35}},"24":{"start":{"line":42,"column":4},"end":{"line":42,"column":33}},"25":{"start":{"line":43,"column":4},"end":{"line":43,"column":48}},"26":{"start":{"line":44,"column":4},"end":{"line":44,"column":13}},"27":{"start":{"line":47,"column":4},"end":{"line":47,"column":46}},"28":{"start":{"line":47,"column":13},"end":{"line":47,"column":46}},"29":{"start":{"line":50,"column":4},"end":{"line":54,"column":5}},"30":{"start":{"line":51,"column":6},"end":{"line":51,"column":71}},"31":{"start":{"line":52,"column":6},"end":{"line":52,"column":36}},"32":{"start":{"line":53,"column":6},"end":{"line":53,"column":17}},"33":{"start":{"line":57,"column":4},"end":{"line":59,"column":57}},"34":{"start":{"line":58,"column":6},"end":{"line":59,"column":57}},"35":{"start":{"line":62,"column":4},"end":{"line":64,"column":63}},"36":{"start":{"line":63,"column":6},"end":{"line":64,"column":63}},"37":{"start":{"line":66,"column":4},"end":{"line":66,"column":37}},"38":{"start":{"line":70,"column":4},"end":{"line":70,"column":25}},"39":{"start":{"line":72,"column":4},"end":{"line":72,"column":37}},"40":{"start":{"line":73,"column":4},"end":{"line":73,"column":36}},"41":{"start":{"line":74,"column":4},"end":{"line":74,"column":24}},"42":{"start":{"line":76,"column":4},"end":{"line":77,"column":33}},"43":{"start":{"line":77,"column":6},"end":{"line":77,"column":33}},"44":{"start":{"line":79,"column":4},"end":{"line":79,"column":16}},"45":{"start":{"line":83,"column":4},"end":{"line":93,"column":8}},"46":{"start":{"line":85,"column":8},"end":{"line":85,"column":43}},"47":{"start":{"line":86,"column":8},"end":{"line":86,"column":39}},"48":{"start":{"line":87,"column":8},"end":{"line":87,"column":38}},"49":{"start":{"line":89,"column":8},"end":{"line":89,"column":48}},"50":{"start":{"line":89,"column":22},"end":{"line":89,"column":48}},"51":{"start":{"line":90,"column":8},"end":{"line":90,"column":65}},"52":{"start":{"line":90,"column":37},"end":{"line":90,"column":65}},"53":{"start":{"line":92,"column":8},"end":{"line":92,"column":31}},"54":{"start":{"line":98,"column":4},"end":{"line":99,"column":35}},"55":{"start":{"line":101,"column":4},"end":{"line":103,"column":5}},"56":{"start":{"line":102,"column":6},"end":{"line":102,"column":43}},"57":{"start":{"line":109,"column":0},"end":{"line":116,"column":1}},"58":{"start":{"line":125,"column":0},"end":{"line":145,"column":1}},"59":{"start":{"line":126,"column":2},"end":{"line":140,"column":3}},"60":{"start":{"line":142,"column":2},"end":{"line":142,"column":34}},"61":{"start":{"line":144,"column":2},"end":{"line":144,"column":16}},"62":{"start":{"line":148,"column":0},"end":{"line":148,"column":25}}},"branchMap":{"1":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":4}},{"start":{"line":47,"column":4},"end":{"line":47,"column":4}}]},"2":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":4}},{"start":{"line":50,"column":4},"end":{"line":50,"column":4}}]},"3":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":57,"column":4}},{"start":{"line":57,"column":4},"end":{"line":57,"column":4}}]},"4":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":62,"column":4}},{"start":{"line":62,"column":4},"end":{"line":62,"column":4}}]},"5":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":8},"end":{"line":89,"column":8}},{"start":{"line":89,"column":8},"end":{"line":89,"column":8}}]},"6":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":8},"end":{"line":90,"column":8}},{"start":{"line":90,"column":8},"end":{"line":90,"column":8}}]}},"code":["'use strict'","","var promise = require('../common/promise')","var assign = require('../common/assign')","var unique = require('../common/array/unique')","var message = require('../common/message')","","var responseClass = require('../common/response_classes')","var BadRequestError = responseClass.BadRequestError","var NotFoundError = responseClass.NotFoundError","var MethodError = responseClass.MethodError","var OK = responseClass.OK","var Empty = responseClass.Empty","var Created = responseClass.Created","","var methods = require('../common/methods')","var findMethod = methods.find","var createMethod = methods.create","","","/*!"," * Internal function to dispatch a request. Must be called in the context of"," * the Fortune instance."," *"," * @param {Object} options"," * @return {Promise}"," */","function dispatch (options) {","  var Promise = promise.Promise","  var flows = this.flows","  var recordTypes = this.recordTypes","  var adapter = this.adapter","","  var context = setDefaults(options)","  var method = context.request.method","","  // Start a promise chain.","  return Promise.resolve(context)","","  .then(function (context) {","    var type = context.request.type","    var ids = context.request.ids","    var language = context.request.meta.language","    var error","","    // Make sure that IDs are an array of unique values.","    if (ids) context.request.ids = unique(ids)","","    // If a type is unspecified, block the request.","    if (type === null) {","      error = new BadRequestError(message('UnspecifiedType', language))","      error.isTypeUnspecified = true","      throw error","    }","","    // If a type is specified and it doesn't exist, block the request.","    if (!recordTypes.hasOwnProperty(type))","      throw new NotFoundError(","        message('InvalidType', language, { type: type }))","","    // Block invalid method.","    if (!(method in flows))","      throw new MethodError(","        message('InvalidMethod', language, { method: method }))","","    return adapter.beginTransaction()","  })","","  .then(function (transaction) {","    var chain, flow, i, j","","    context.transaction = transaction","    chain = Promise.resolve(context)","    flow = flows[method]","","    for (i = 0, j = flow.length; i < j; i++)","      chain = chain.then(flow[i])","","    return chain","  })","","  .then(function (context) {","    return context.transaction.endTransaction()","      .then(function () {","        var method = context.request.method","        var response = context.response","        var payload = response.payload","","        if (!payload) return new Empty(response)","        if (method === createMethod) return new Created(response)","","        return new OK(response)","      })","  })","","  // This makes sure to call `endTransaction` before re-throwing the error.","  .catch(function (error) {","    return context.transaction.endTransaction(error)","      .then(throwError, throwError)","","    function throwError () {","      throw assign(error, context.response)","    }","  })","}","","","// Re-exporting internal middlewares.","dispatch.middlewares = {","  create: require('./create'),","  'delete': require('./delete'),","  update: require('./update'),","  find: require('./find'),","  include: require('./include'),","  end: require('./end')","}","","","/*!"," * Set default options on a context's request. For internal use."," *"," * @param {Object} [options]"," * @return {Object}"," */","function setDefaults (options) {","  var context = {","    request: {","      method: findMethod,","      type: null,","      ids: null,","      options: {},","      include: [],","      meta: {},","      payload: null","    },","    response: {","      meta: {},","      payload: null","    }","  }","","  assign(context.request, options)","","  return context","}","","","module.exports = dispatch",""],"l":{"3":1,"4":1,"5":1,"6":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"16":1,"17":1,"18":1,"28":1,"29":0,"30":0,"31":0,"32":0,"34":0,"35":0,"38":0,"41":0,"42":0,"43":0,"44":0,"47":0,"50":0,"51":0,"52":0,"53":0,"57":0,"58":0,"62":0,"63":0,"66":0,"70":0,"72":0,"73":0,"74":0,"76":0,"77":0,"79":0,"83":0,"85":0,"86":0,"87":0,"89":0,"90":0,"92":0,"98":0,"101":1,"102":0,"109":1,"125":1,"126":0,"142":0,"144":0,"148":1}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/dispatch/create.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/dispatch/create.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":35,"loc":{"start":{"line":35,"column":17},"end":{"line":35,"column":36}}},"2":{"name":"(anonymous_2)","line":48,"loc":{"start":{"line":48,"column":8},"end":{"line":48,"column":27}}},"3":{"name":"(anonymous_3)","line":75,"loc":{"start":{"line":75,"column":31},"end":{"line":75,"column":49}}},"4":{"name":"(anonymous_4)","line":80,"loc":{"start":{"line":80,"column":8},"end":{"line":80,"column":27}}},"5":{"name":"(anonymous_5)","line":81,"loc":{"start":{"line":81,"column":36},"end":{"line":81,"column":57}}},"6":{"name":"(anonymous_6)","line":93,"loc":{"start":{"line":93,"column":8},"end":{"line":93,"column":20}}},"7":{"name":"(anonymous_7)","line":98,"loc":{"start":{"line":98,"column":8},"end":{"line":98,"column":34}}},"8":{"name":"(anonymous_8)","line":151,"loc":{"start":{"line":151,"column":49},"end":{"line":151,"column":65}}},"9":{"name":"(anonymous_9)","line":158,"loc":{"start":{"line":158,"column":8},"end":{"line":158,"column":20}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":51}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":41}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":47}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":42}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":42}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":40}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":40}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":44}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":47}},"10":{"start":{"line":14,"column":0},"end":{"line":14,"column":69}},"11":{"start":{"line":15,"column":0},"end":{"line":15,"column":39}},"12":{"start":{"line":16,"column":0},"end":{"line":16,"column":31}},"13":{"start":{"line":18,"column":0},"end":{"line":18,"column":46}},"14":{"start":{"line":19,"column":0},"end":{"line":19,"column":34}},"15":{"start":{"line":20,"column":0},"end":{"line":20,"column":35}},"16":{"start":{"line":21,"column":0},"end":{"line":21,"column":35}},"17":{"start":{"line":22,"column":0},"end":{"line":22,"column":34}},"18":{"start":{"line":23,"column":0},"end":{"line":23,"column":28}},"19":{"start":{"line":24,"column":0},"end":{"line":24,"column":34}},"20":{"start":{"line":25,"column":0},"end":{"line":25,"column":34}},"21":{"start":{"line":26,"column":0},"end":{"line":26,"column":58}},"22":{"start":{"line":35,"column":0},"end":{"line":178,"column":1}},"23":{"start":{"line":36,"column":2},"end":{"line":36,"column":31}},"24":{"start":{"line":37,"column":2},"end":{"line":37,"column":17}},"25":{"start":{"line":38,"column":2},"end":{"line":38,"column":50}},"26":{"start":{"line":39,"column":2},"end":{"line":39,"column":36}},"27":{"start":{"line":40,"column":2},"end":{"line":40,"column":24}},"28":{"start":{"line":41,"column":2},"end":{"line":41,"column":18}},"29":{"start":{"line":42,"column":2},"end":{"line":42,"column":16}},"30":{"start":{"line":43,"column":2},"end":{"line":43,"column":62}},"31":{"start":{"line":46,"column":2},"end":{"line":177,"column":4}},"32":{"start":{"line":49,"column":4},"end":{"line":49,"column":19}},"33":{"start":{"line":51,"column":4},"end":{"line":51,"column":21}},"34":{"start":{"line":53,"column":4},"end":{"line":54,"column":74}},"35":{"start":{"line":54,"column":6},"end":{"line":54,"column":74}},"36":{"start":{"line":56,"column":4},"end":{"line":56,"column":31}},"37":{"start":{"line":57,"column":4},"end":{"line":57,"column":31}},"38":{"start":{"line":58,"column":4},"end":{"line":58,"column":37}},"39":{"start":{"line":59,"column":4},"end":{"line":59,"column":28}},"40":{"start":{"line":61,"column":4},"end":{"line":61,"column":22}},"41":{"start":{"line":62,"column":4},"end":{"line":62,"column":30}},"42":{"start":{"line":64,"column":4},"end":{"line":72,"column":5}},"43":{"start":{"line":65,"column":6},"end":{"line":66,"column":25}},"44":{"start":{"line":66,"column":8},"end":{"line":66,"column":25}},"45":{"start":{"line":69,"column":6},"end":{"line":71,"column":34}},"46":{"start":{"line":70,"column":8},"end":{"line":71,"column":34}},"47":{"start":{"line":71,"column":10},"end":{"line":71,"column":34}},"48":{"start":{"line":74,"column":4},"end":{"line":77,"column":19}},"49":{"start":{"line":76,"column":8},"end":{"line":76,"column":39}},"50":{"start":{"line":81,"column":4},"end":{"line":90,"column":7}},"51":{"start":{"line":82,"column":6},"end":{"line":83,"column":30}},"52":{"start":{"line":82,"column":18},"end":{"line":82,"column":37}},"53":{"start":{"line":83,"column":11},"end":{"line":83,"column":30}},"54":{"start":{"line":86,"column":6},"end":{"line":86,"column":41}},"55":{"start":{"line":89,"column":6},"end":{"line":89,"column":76}},"56":{"start":{"line":94,"column":4},"end":{"line":94,"column":60}},"57":{"start":{"line":95,"column":4},"end":{"line":95,"column":50}},"58":{"start":{"line":99,"column":4},"end":{"line":100,"column":46}},"59":{"start":{"line":104,"column":4},"end":{"line":104,"column":20}},"60":{"start":{"line":107,"column":4},"end":{"line":108,"column":71}},"61":{"start":{"line":108,"column":6},"end":{"line":108,"column":71}},"62":{"start":{"line":110,"column":4},"end":{"line":110,"column":28}},"63":{"start":{"line":112,"column":4},"end":{"line":115,"column":6}},"64":{"start":{"line":118,"column":4},"end":{"line":149,"column":5}},"65":{"start":{"line":119,"column":6},"end":{"line":119,"column":25}},"66":{"start":{"line":122,"column":6},"end":{"line":123,"column":67}},"67":{"start":{"line":123,"column":8},"end":{"line":123,"column":67}},"68":{"start":{"line":125,"column":6},"end":{"line":148,"column":7}},"69":{"start":{"line":126,"column":8},"end":{"line":126,"column":24}},"70":{"start":{"line":127,"column":8},"end":{"line":127,"column":48}},"71":{"start":{"line":129,"column":8},"end":{"line":129,"column":68}},"72":{"start":{"line":129,"column":60},"end":{"line":129,"column":68}},"73":{"start":{"line":131,"column":8},"end":{"line":131,"column":43}},"74":{"start":{"line":132,"column":8},"end":{"line":133,"column":59}},"75":{"start":{"line":134,"column":8},"end":{"line":135,"column":43}},"76":{"start":{"line":138,"column":8},"end":{"line":138,"column":58}},"77":{"start":{"line":138,"column":34},"end":{"line":138,"column":58}},"78":{"start":{"line":139,"column":8},"end":{"line":139,"column":58}},"79":{"start":{"line":139,"column":34},"end":{"line":139,"column":58}},"80":{"start":{"line":141,"column":8},"end":{"line":147,"column":9}},"81":{"start":{"line":142,"column":10},"end":{"line":142,"column":27}},"82":{"start":{"line":143,"column":10},"end":{"line":146,"column":42}},"83":{"start":{"line":144,"column":12},"end":{"line":146,"column":42}},"84":{"start":{"line":151,"column":4},"end":{"line":155,"column":7}},"85":{"start":{"line":152,"column":6},"end":{"line":154,"column":12}},"86":{"start":{"line":159,"column":4},"end":{"line":159,"column":35}},"87":{"start":{"line":161,"column":4},"end":{"line":161,"column":32}},"88":{"start":{"line":162,"column":4},"end":{"line":162,"column":43}},"89":{"start":{"line":164,"column":4},"end":{"line":171,"column":5}},"90":{"start":{"line":165,"column":6},"end":{"line":165,"column":72}},"91":{"start":{"line":167,"column":6},"end":{"line":167,"column":48}},"92":{"start":{"line":167,"column":40},"end":{"line":167,"column":48}},"93":{"start":{"line":169,"column":6},"end":{"line":169,"column":68}},"94":{"start":{"line":169,"column":40},"end":{"line":169,"column":68}},"95":{"start":{"line":170,"column":6},"end":{"line":170,"column":65}},"96":{"start":{"line":174,"column":4},"end":{"line":174,"column":37}},"97":{"start":{"line":176,"column":4},"end":{"line":176,"column":18}}},"branchMap":{"1":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]},"2":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":8},"end":{"line":53,"column":16}},{"start":{"line":53,"column":20},"end":{"line":53,"column":35}}]},"3":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":6},"end":{"line":65,"column":6}},{"start":{"line":65,"column":6},"end":{"line":65,"column":6}}]},"4":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":6},"end":{"line":69,"column":6}},{"start":{"line":69,"column":6},"end":{"line":69,"column":6}}]},"5":{"line":74,"type":"cond-expr","locations":[{"start":{"line":75,"column":6},"end":{"line":77,"column":9}},{"start":{"line":77,"column":12},"end":{"line":77,"column":19}}]},"6":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":6},"end":{"line":82,"column":6}},{"start":{"line":82,"column":6},"end":{"line":82,"column":6}}]},"7":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":4},"end":{"line":107,"column":4}},{"start":{"line":107,"column":4},"end":{"line":107,"column":4}}]},"8":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":6},"end":{"line":122,"column":6}},{"start":{"line":122,"column":6},"end":{"line":122,"column":6}}]},"9":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":8},"end":{"line":129,"column":8}},{"start":{"line":129,"column":8},"end":{"line":129,"column":8}}]},"10":{"line":129,"type":"binary-expr","locations":[{"start":{"line":129,"column":12},"end":{"line":129,"column":41}},{"start":{"line":129,"column":45},"end":{"line":129,"column":58}}]},"11":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":10},"end":{"line":135,"column":23}},{"start":{"line":135,"column":26},"end":{"line":135,"column":43}}]},"12":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":8},"end":{"line":138,"column":8}},{"start":{"line":138,"column":8},"end":{"line":138,"column":8}}]},"13":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":8},"end":{"line":139,"column":8}},{"start":{"line":139,"column":8},"end":{"line":139,"column":8}}]},"14":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":10},"end":{"line":143,"column":10}},{"start":{"line":143,"column":10},"end":{"line":143,"column":10}}]},"15":{"line":152,"type":"cond-expr","locations":[{"start":{"line":153,"column":8},"end":{"line":153,"column":53}},{"start":{"line":154,"column":8},"end":{"line":154,"column":12}}]},"16":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":6},"end":{"line":167,"column":6}},{"start":{"line":167,"column":6},"end":{"line":167,"column":6}}]},"17":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":6},"end":{"line":169,"column":6}},{"start":{"line":169,"column":6},"end":{"line":169,"column":6}}]}},"code":["'use strict'","","var validateRecords = require('./validate_records')","var checkLinks = require('./check_links')","var enforce = require('../record_type/enforce')","var message = require('../common/message')","var promise = require('../common/promise')","var map = require('../common/array/map')","","var errors = require('../common/errors')","var BadRequestError = errors.BadRequestError","","var updateHelpers = require('./update_helpers')","var scrubDenormalizedUpdates = updateHelpers.scrubDenormalizedUpdates","var getUpdate = updateHelpers.getUpdate","var addId = updateHelpers.addId","","var constants = require('../common/constants')","var changeEvent = constants.change","var createMethod = constants.create","var updateMethod = constants.update","var primaryKey = constants.primary","var linkKey = constants.link","var inverseKey = constants.inverse","var isArrayKey = constants.isArray","var denormalizedInverseKey = constants.denormalizedInverse","","","/**"," * Extend context so that it includes the parsed records and create them."," * This mutates the response object."," *"," * @return {Promise}"," */","module.exports = function (context) {","  var Promise = promise.Promise","  var self = this","  var denormalizedFields = self.denormalizedFields","  var recordTypes = self.recordTypes","  var hooks = self.hooks","  var updates = {}","  var links = []","  var transaction, records, type, meta, hook, fields, language","","  // Start a promise chain.","  return Promise.resolve(context.request.payload)","","  .then(function (payload) {","    var i, j, field","","    records = payload","","    if (!records || !records.length)","      throw new BadRequestError(message('CreateRecordsInvalid', language))","","    type = context.request.type","    meta = context.request.meta","    transaction = context.transaction","    language = meta.language","","    hook = hooks[type]","    fields = recordTypes[type]","","    for (field in fields) {","      if (linkKey in fields[field])","        links.push(field)","","      // Delete denormalized inverse fields.","      if (denormalizedInverseKey in fields[field])","        for (i = 0, j = records.length; i < j; i++)","          delete records[i][field]","    }","","    return typeof hook[0] === 'function' ?","      Promise.all(map(records, function (record) {","        return hook[0](context, record)","      })) : records","  })","","  .then(function (results) {","    return Promise.all(map(results, function (record, i) {","      if (record) records[i] = record","      else record = records[i]","","      // Enforce the fields.","      enforce(type, record, fields, meta)","","      // Ensure referential integrity.","      return checkLinks.call(self, transaction, record, fields, links, meta)","    }))","  })","","  .then(function () {","    validateRecords.call(self, records, fields, links, meta)","    return transaction.create(type, records, meta)","  })","","  .then(function (createdRecords) {","    var i, j, k, l, m, n, record, field, inverseField,","      linkedType, linkedIsArray, linkedIds, id","","    // Update inversely linked records on created records.","    // Trying to batch updates to be as few as possible.","    var idCache = {}","","    // Adapter must return something.","    if (!createdRecords.length)","      throw new BadRequestError(message('CreateRecordsFail', language))","","    records = createdRecords","","    Object.defineProperty(context.response, 'records', {","      configurable: true,","      value: records","    })","","    // Iterate over each record to generate updates object.","    for (i = 0, j = records.length; i < j; i++) {","      record = records[i]","","      // Each created record must have an ID.","      if (!(primaryKey in record))","        throw new Error(message('CreateRecordMissingID', language))","","      for (k = 0, l = links.length; k < l; k++) {","        field = links[k]","        inverseField = fields[field][inverseKey]","","        if (!record.hasOwnProperty(field) || !inverseField) continue","","        linkedType = fields[field][linkKey]","        linkedIsArray =","          recordTypes[linkedType][inverseField][isArrayKey]","        linkedIds = Array.isArray(record[field]) ?","          record[field] : [ record[field] ]","","        // Do some initialization.","        if (!updates[linkedType]) updates[linkedType] = []","        if (!idCache[linkedType]) idCache[linkedType] = {}","","        for (m = 0, n = linkedIds.length; m < n; m++) {","          id = linkedIds[m]","          if (id !== null)","            addId(record[primaryKey],","              getUpdate(linkedType, id, updates, idCache),","              inverseField, linkedIsArray)","        }","      }","    }","","    return Promise.all(map(Object.keys(updates), function (type) {","      return updates[type].length ?","        transaction.update(type, updates[type], meta) :","        null","    }))","  })","","  .then(function () {","    var eventData = {}, currentType","","    eventData[createMethod] = {}","    eventData[createMethod][type] = records","","    for (currentType in updates) {","      scrubDenormalizedUpdates(updates[currentType], denormalizedFields)","","      if (!updates[currentType].length) continue","","      if (!(updateMethod in eventData)) eventData[updateMethod] = {}","      eventData[updateMethod][currentType] = updates[currentType]","    }","","    // Summarize changes during the lifecycle of the request.","    self.emit(changeEvent, eventData)","","    return context","  })","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"10":1,"11":1,"13":1,"14":1,"15":1,"16":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"46":0,"49":0,"51":0,"53":0,"54":0,"56":0,"57":0,"58":0,"59":0,"61":0,"62":0,"64":0,"65":0,"66":0,"69":0,"70":0,"71":0,"74":0,"76":0,"81":0,"82":0,"83":0,"86":0,"89":0,"94":0,"95":0,"99":0,"104":0,"107":0,"108":0,"110":0,"112":0,"118":0,"119":0,"122":0,"123":0,"125":0,"126":0,"127":0,"129":0,"131":0,"132":0,"134":0,"138":0,"139":0,"141":0,"142":0,"143":0,"144":0,"151":0,"152":0,"159":0,"161":0,"162":0,"164":0,"165":0,"167":0,"169":0,"170":0,"174":0,"176":0}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/dispatch/validate_records.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/dispatch/validate_records.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"validateRecords","line":23,"loc":{"start":{"line":23,"column":17},"end":{"line":23,"column":73}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":40}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":40}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":36}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":23}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":29}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":29}},"8":{"start":{"line":23,"column":0},"end":{"line":69,"column":1}},"9":{"start":{"line":24,"column":2},"end":{"line":24,"column":36}},"10":{"start":{"line":25,"column":2},"end":{"line":25,"column":30}},"11":{"start":{"line":26,"column":2},"end":{"line":26,"column":19}},"12":{"start":{"line":27,"column":2},"end":{"line":28,"column":57}},"13":{"start":{"line":30,"column":2},"end":{"line":68,"column":3}},"14":{"start":{"line":31,"column":4},"end":{"line":31,"column":20}},"15":{"start":{"line":32,"column":4},"end":{"line":32,"column":38}},"16":{"start":{"line":33,"column":4},"end":{"line":33,"column":44}},"17":{"start":{"line":34,"column":4},"end":{"line":34,"column":44}},"18":{"start":{"line":35,"column":4},"end":{"line":35,"column":69}},"19":{"start":{"line":37,"column":4},"end":{"line":50,"column":7}},"20":{"start":{"line":38,"column":6},"end":{"line":50,"column":7}},"21":{"start":{"line":39,"column":8},"end":{"line":39,"column":27}},"22":{"start":{"line":40,"column":8},"end":{"line":40,"column":51}},"23":{"start":{"line":40,"column":43},"end":{"line":40,"column":51}},"24":{"start":{"line":41,"column":8},"end":{"line":41,"column":27}},"25":{"start":{"line":42,"column":8},"end":{"line":42,"column":17}},"26":{"start":{"line":44,"column":8},"end":{"line":49,"column":9}},"27":{"start":{"line":45,"column":10},"end":{"line":45,"column":21}},"28":{"start":{"line":46,"column":10},"end":{"line":48,"column":30}},"29":{"start":{"line":46,"column":39},"end":{"line":47,"column":78}},"30":{"start":{"line":48,"column":15},"end":{"line":48,"column":30}},"31":{"start":{"line":52,"column":4},"end":{"line":67,"column":5}},"32":{"start":{"line":53,"column":6},"end":{"line":53,"column":26}},"33":{"start":{"line":55,"column":6},"end":{"line":66,"column":7}},"34":{"start":{"line":56,"column":8},"end":{"line":56,"column":27}},"35":{"start":{"line":57,"column":8},"end":{"line":57,"column":29}},"36":{"start":{"line":58,"column":8},"end":{"line":58,"column":67}},"37":{"start":{"line":60,"column":8},"end":{"line":65,"column":9}},"38":{"start":{"line":61,"column":10},"end":{"line":61,"column":21}},"39":{"start":{"line":62,"column":10},"end":{"line":64,"column":66}},"40":{"start":{"line":62,"column":51},"end":{"line":62,"column":77}},"41":{"start":{"line":63,"column":15},"end":{"line":64,"column":66}}},"branchMap":{"1":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"2":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":8},"end":{"line":40,"column":8}},{"start":{"line":40,"column":8},"end":{"line":40,"column":8}}]},"3":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":10},"end":{"line":46,"column":10}},{"start":{"line":46,"column":10},"end":{"line":46,"column":10}}]},"4":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"5":{"line":58,"type":"cond-expr","locations":[{"start":{"line":58,"column":37},"end":{"line":58,"column":42}},{"start":{"line":58,"column":45},"end":{"line":58,"column":67}}]},"6":{"line":58,"type":"cond-expr","locations":[{"start":{"line":58,"column":53},"end":{"line":58,"column":62}},{"start":{"line":58,"column":65},"end":{"line":58,"column":67}}]},"7":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":10},"end":{"line":62,"column":10}},{"start":{"line":62,"column":10},"end":{"line":62,"column":10}}]}},"code":["'use strict'","","var message = require('../common/message')","","var errors = require('../common/errors')","var ConflictError = errors.ConflictError","","var keys = require('../common/keys')","var linkKey = keys.link","var isArrayKey = keys.isArray","var inverseKey = keys.inverse","","/**"," * Do some validation on records to be created or updated to determine"," * if there are any records which have overlapping to-one relationships,"," * or non-unique array relationships."," *"," * @param {Object[]} records"," * @param {Object} fields"," * @param {Object} links"," * @param {Object} meta"," */","module.exports = function validateRecords (records, fields, links, meta) {","  var recordTypes = this.recordTypes","  var language = meta.language","  var toOneMap = {}","  var i, j, k, l, m, n, value, field, record, id, ids, seen,","    fieldLink, fieldInverse, fieldIsArray, inverseIsArray","","  for (i = 0, j = links.length; i < j; i++) {","    field = links[i]","    fieldLink = fields[field][linkKey]","    fieldInverse = fields[field][inverseKey]","    fieldIsArray = fields[field][isArrayKey]","    inverseIsArray = recordTypes[fieldLink][fieldInverse][isArrayKey]","","    if (fieldIsArray)","      for (k = 0, l = records.length; k < l; k++) {","        record = records[k]","        if (!Array.isArray(record[field])) continue","        ids = record[field]","        seen = {}","","        for (m = 0, n = ids.length; m < n; m++) {","          id = ids[m]","          if (seen.hasOwnProperty(id)) throw new ConflictError(","            message('CollisionDuplicate', language, { id: id, field: field }))","          else seen[id] = true","        }","      }","","    if (!inverseIsArray) {","      toOneMap[field] = {}","","      for (k = 0, l = records.length; k < l; k++) {","        record = records[k]","        value = record[field]","        ids = Array.isArray(value) ? value : value ? [ value ] : []","","        for (m = 0, n = ids.length; m < n; m++) {","          id = ids[m]","          if (!toOneMap[field].hasOwnProperty(id)) toOneMap[field][id] = true","          else throw new ConflictError(","            message('CollisionToOne', language, { field: field }))","        }","      }","    }","  }","}",""],"l":{"3":1,"5":1,"6":1,"8":1,"9":1,"10":1,"11":1,"23":1,"24":0,"25":0,"26":0,"27":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"44":0,"45":0,"46":0,"48":0,"52":0,"53":0,"55":0,"56":0,"57":0,"58":0,"60":0,"61":0,"62":0,"63":0}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/dispatch/check_links.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/dispatch/check_links.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"checkLinks","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":63}}},"2":{"name":"(anonymous_2)","line":36,"loc":{"start":{"line":36,"column":32},"end":{"line":36,"column":49}}},"3":{"name":"(anonymous_3)","line":47,"loc":{"start":{"line":47,"column":23},"end":{"line":47,"column":50}}},"4":{"name":"(anonymous_4)","line":52,"loc":{"start":{"line":52,"column":12},"end":{"line":52,"column":31}}},"5":{"name":"(anonymous_5)","line":56,"loc":{"start":{"line":56,"column":42},"end":{"line":56,"column":60}}},"6":{"name":"(anonymous_6)","line":73,"loc":{"start":{"line":73,"column":8},"end":{"line":73,"column":34}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":46}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":40}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":50}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":40}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":44}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":36}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":29}},"10":{"start":{"line":14,"column":0},"end":{"line":14,"column":23}},"11":{"start":{"line":15,"column":0},"end":{"line":15,"column":29}},"12":{"start":{"line":16,"column":0},"end":{"line":16,"column":29}},"13":{"start":{"line":18,"column":0},"end":{"line":18,"column":27}},"14":{"start":{"line":32,"column":0},"end":{"line":85,"column":1}},"15":{"start":{"line":33,"column":2},"end":{"line":33,"column":31}},"16":{"start":{"line":34,"column":2},"end":{"line":34,"column":55}},"17":{"start":{"line":36,"column":2},"end":{"line":84,"column":4}},"18":{"start":{"line":37,"column":4},"end":{"line":39,"column":28}},"19":{"start":{"line":40,"column":4},"end":{"line":40,"column":42}},"20":{"start":{"line":41,"column":4},"end":{"line":41,"column":48}},"21":{"start":{"line":42,"column":4},"end":{"line":42,"column":36}},"22":{"start":{"line":45,"column":4},"end":{"line":45,"column":43}},"23":{"start":{"line":47,"column":4},"end":{"line":70,"column":6}},"24":{"start":{"line":48,"column":6},"end":{"line":48,"column":39}},"25":{"start":{"line":48,"column":23},"end":{"line":48,"column":39}},"26":{"start":{"line":50,"column":6},"end":{"line":69,"column":8}},"27":{"start":{"line":53,"column":8},"end":{"line":53,"column":27}},"28":{"start":{"line":55,"column":8},"end":{"line":66,"column":9}},"29":{"start":{"line":56,"column":10},"end":{"line":58,"column":13}},"30":{"start":{"line":57,"column":12},"end":{"line":57,"column":37}},"31":{"start":{"line":60,"column":10},"end":{"line":65,"column":16}},"32":{"start":{"line":61,"column":12},"end":{"line":65,"column":16}},"33":{"start":{"line":62,"column":14},"end":{"line":65,"column":16}},"34":{"start":{"line":68,"column":8},"end":{"line":68,"column":31}},"35":{"start":{"line":74,"column":4},"end":{"line":74,"column":34}},"36":{"start":{"line":76,"column":4},"end":{"line":81,"column":5}},"37":{"start":{"line":77,"column":6},"end":{"line":77,"column":33}},"38":{"start":{"line":79,"column":6},"end":{"line":80,"column":59}},"39":{"start":{"line":79,"column":19},"end":{"line":80,"column":59}},"40":{"start":{"line":83,"column":4},"end":{"line":83,"column":17}}},"branchMap":{"1":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":45},"end":{"line":37,"column":58}},{"start":{"line":38,"column":6},"end":{"line":39,"column":28}}]},"2":{"line":38,"type":"cond-expr","locations":[{"start":{"line":39,"column":6},"end":{"line":39,"column":8}},{"start":{"line":39,"column":11},"end":{"line":39,"column":28}}]},"3":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":6},"end":{"line":38,"column":35}},{"start":{"line":38,"column":39},"end":{"line":38,"column":61}}]},"4":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":6},"end":{"line":48,"column":6}},{"start":{"line":48,"column":6},"end":{"line":48,"column":6}}]},"5":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":55,"column":8}},{"start":{"line":55,"column":8},"end":{"line":55,"column":8}}]},"6":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":12},"end":{"line":61,"column":12}},{"start":{"line":61,"column":12},"end":{"line":61,"column":12}}]},"7":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":6},"end":{"line":79,"column":6}},{"start":{"line":79,"column":6},"end":{"line":79,"column":6}}]},"8":{"line":80,"type":"cond-expr","locations":[{"start":{"line":80,"column":39},"end":{"line":80,"column":46}},{"start":{"line":80,"column":49},"end":{"line":80,"column":59}}]}},"code":["'use strict'","","var message = require('../common/message')","var promise = require('../common/promise')","var unique = require('../common/array/unique')","var map = require('../common/array/map')","var includes = require('../common/array/includes')","","var errors = require('../common/errors')","var BadRequestError = errors.BadRequestError","","var keys = require('../common/keys')","var primaryKey = keys.primary","var linkKey = keys.link","var isArrayKey = keys.isArray","var inverseKey = keys.inverse","","module.exports = checkLinks","","","/**"," * Ensure referential integrity by checking if related records exist."," *"," * @param {Object} transaction"," * @param {Object} record"," * @param {Object} fields"," * @param {String[]} links - An array of strings indicating which fields are"," * links. Need to pass this so that it doesn't get computed each time."," * @param {Object} [meta]"," * @return {Promise}"," */","function checkLinks (transaction, record, fields, links, meta) {","  var Promise = promise.Promise","  var enforceLinks = this.options.settings.enforceLinks","","  return Promise.all(map(links, function (field) {","    var ids = Array.isArray(record[field]) ? record[field] :","      !record.hasOwnProperty(field) || record[field] === null ?","      [] : [ record[field] ]","    var fieldLink = fields[field][linkKey]","    var fieldInverse = fields[field][inverseKey]","    var findOptions = { fields: {} }","","    // Don't need the entire records.","    findOptions.fields[fieldInverse] = true","","    return new Promise(function (resolve, reject) {","      if (!ids.length) return resolve()","","      return transaction.find(fieldLink, ids, findOptions, meta)","","      .then(function (records) {","        var recordIds, i, j","","        if (enforceLinks) {","          recordIds = unique(map(records, function (record) {","            return record[primaryKey]","          }))","","          for (i = 0, j = ids.length; i < j; i++)","            if (!includes(recordIds, ids[i]))","              return reject(new BadRequestError(","                message('RelatedRecordNotFound', meta.language,","                  { field: field })","              ))","        }","","        return resolve(records)","      })","    })","  }))","","  .then(function (partialRecords) {","    var object = {}, records, i, j","","    for (i = 0, j = partialRecords.length; i < j; i++) {","      records = partialRecords[i]","","      if (records) object[links[i]] =","        fields[links[i]][isArrayKey] ? records : records[0]","    }","","    return object","  })","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"9":1,"10":1,"12":1,"13":1,"14":1,"15":1,"16":1,"18":1,"32":1,"33":0,"34":0,"36":0,"37":0,"40":0,"41":0,"42":0,"45":0,"47":0,"48":0,"50":0,"53":0,"55":0,"56":0,"57":0,"60":0,"61":0,"62":0,"68":0,"74":0,"76":0,"77":0,"79":0,"83":0}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/record_type/enforce.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/record_type/enforce.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":18,"loc":{"start":{"line":18,"column":12},"end":{"line":18,"column":29}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":12},"end":{"line":21,"column":29}}},"3":{"name":"(anonymous_3)","line":24,"loc":{"start":{"line":24,"column":13},"end":{"line":24,"column":30}}},"4":{"name":"(anonymous_4)","line":27,"loc":{"start":{"line":27,"column":10},"end":{"line":27,"column":27}}},"5":{"name":"(anonymous_5)","line":31,"loc":{"start":{"line":31,"column":12},"end":{"line":31,"column":29}}},"6":{"name":"(anonymous_6)","line":34,"loc":{"start":{"line":34,"column":12},"end":{"line":34,"column":29}}},"7":{"name":"enforce","line":49,"loc":{"start":{"line":49,"column":17},"end":{"line":49,"column":63}}},"8":{"name":"checkValue","line":112,"loc":{"start":{"line":112,"column":0},"end":{"line":112,"column":46}}},"9":{"name":"(anonymous_9)","line":119,"loc":{"start":{"line":119,"column":27},"end":{"line":119,"column":43}}},"10":{"name":"matchId","line":133,"loc":{"start":{"line":133,"column":0},"end":{"line":133,"column":21}}},"11":{"name":"(anonymous_11)","line":134,"loc":{"start":{"line":134,"column":9},"end":{"line":134,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":42}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":40}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":36}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":29}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":23}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":23}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":29}},"10":{"start":{"line":17,"column":0},"end":{"line":37,"column":1}},"11":{"start":{"line":19,"column":4},"end":{"line":19,"column":36}},"12":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"13":{"start":{"line":25,"column":4},"end":{"line":25,"column":37}},"14":{"start":{"line":28,"column":4},"end":{"line":29,"column":36}},"15":{"start":{"line":32,"column":4},"end":{"line":32,"column":54}},"16":{"start":{"line":35,"column":4},"end":{"line":35,"column":33}},"17":{"start":{"line":49,"column":0},"end":{"line":109,"column":1}},"18":{"start":{"line":50,"column":2},"end":{"line":50,"column":49}},"19":{"start":{"line":52,"column":2},"end":{"line":52,"column":22}},"20":{"start":{"line":52,"column":13},"end":{"line":52,"column":22}},"21":{"start":{"line":53,"column":2},"end":{"line":53,"column":26}},"22":{"start":{"line":55,"column":2},"end":{"line":106,"column":3}},"23":{"start":{"line":56,"column":4},"end":{"line":56,"column":33}},"24":{"start":{"line":58,"column":4},"end":{"line":61,"column":5}},"25":{"start":{"line":59,"column":6},"end":{"line":59,"column":48}},"26":{"start":{"line":59,"column":30},"end":{"line":59,"column":48}},"27":{"start":{"line":60,"column":6},"end":{"line":60,"column":14}},"28":{"start":{"line":63,"column":4},"end":{"line":63,"column":23}},"29":{"start":{"line":65,"column":4},"end":{"line":80,"column":5}},"30":{"start":{"line":66,"column":6},"end":{"line":77,"column":56}},"31":{"start":{"line":69,"column":8},"end":{"line":72,"column":13}},"32":{"start":{"line":70,"column":10},"end":{"line":72,"column":13}},"33":{"start":{"line":74,"column":8},"end":{"line":75,"column":58}},"34":{"start":{"line":75,"column":10},"end":{"line":75,"column":58}},"35":{"start":{"line":77,"column":11},"end":{"line":77,"column":56}},"36":{"start":{"line":79,"column":6},"end":{"line":79,"column":14}},"37":{"start":{"line":82,"column":4},"end":{"line":105,"column":5}},"38":{"start":{"line":83,"column":6},"end":{"line":94,"column":7}},"39":{"start":{"line":84,"column":8},"end":{"line":86,"column":60}},"40":{"start":{"line":85,"column":10},"end":{"line":86,"column":60}},"41":{"start":{"line":88,"column":8},"end":{"line":91,"column":61}},"42":{"start":{"line":90,"column":10},"end":{"line":91,"column":61}},"43":{"start":{"line":93,"column":8},"end":{"line":93,"column":16}},"44":{"start":{"line":96,"column":6},"end":{"line":98,"column":61}},"45":{"start":{"line":97,"column":8},"end":{"line":98,"column":61}},"46":{"start":{"line":100,"column":6},"end":{"line":102,"column":59}},"47":{"start":{"line":101,"column":8},"end":{"line":102,"column":59}},"48":{"start":{"line":104,"column":6},"end":{"line":104,"column":14}},"49":{"start":{"line":108,"column":2},"end":{"line":108,"column":15}},"50":{"start":{"line":112,"column":0},"end":{"line":130,"column":1}},"51":{"start":{"line":113,"column":2},"end":{"line":113,"column":30}},"52":{"start":{"line":114,"column":2},"end":{"line":114,"column":11}},"53":{"start":{"line":117,"column":2},"end":{"line":117,"column":28}},"54":{"start":{"line":117,"column":22},"end":{"line":117,"column":28}},"55":{"start":{"line":119,"column":2},"end":{"line":121,"column":4}},"56":{"start":{"line":120,"column":4},"end":{"line":120,"column":37}},"57":{"start":{"line":122,"column":2},"end":{"line":123,"column":29}},"58":{"start":{"line":122,"column":13},"end":{"line":122,"column":29}},"59":{"start":{"line":123,"column":7},"end":{"line":123,"column":29}},"60":{"start":{"line":127,"column":2},"end":{"line":129,"column":55}},"61":{"start":{"line":127,"column":21},"end":{"line":129,"column":55}},"62":{"start":{"line":133,"column":0},"end":{"line":137,"column":1}},"63":{"start":{"line":134,"column":2},"end":{"line":136,"column":3}},"64":{"start":{"line":135,"column":4},"end":{"line":135,"column":18}}},"branchMap":{"1":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":11},"end":{"line":28,"column":16}},{"start":{"line":28,"column":20},"end":{"line":28,"column":55}},{"start":{"line":29,"column":6},"end":{"line":29,"column":36}}]},"2":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":11},"end":{"line":32,"column":25}},{"start":{"line":32,"column":29},"end":{"line":32,"column":54}}]},"3":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":2},"end":{"line":52,"column":2}},{"start":{"line":52,"column":2},"end":{"line":52,"column":2}}]},"4":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":4}},{"start":{"line":58,"column":4},"end":{"line":58,"column":4}}]},"5":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":6},"end":{"line":59,"column":6}},{"start":{"line":59,"column":6},"end":{"line":59,"column":6}}]},"6":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":65,"column":4}},{"start":{"line":65,"column":4},"end":{"line":65,"column":4}}]},"7":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":6},"end":{"line":66,"column":6}},{"start":{"line":66,"column":6},"end":{"line":66,"column":6}}]},"8":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":8},"end":{"line":69,"column":8}},{"start":{"line":69,"column":8},"end":{"line":69,"column":8}}]},"9":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":4}},{"start":{"line":82,"column":4},"end":{"line":82,"column":4}}]},"10":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":6},"end":{"line":83,"column":6}},{"start":{"line":83,"column":6},"end":{"line":83,"column":6}}]},"11":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":8},"end":{"line":84,"column":8}},{"start":{"line":84,"column":8},"end":{"line":84,"column":8}}]},"12":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":8},"end":{"line":88,"column":8}},{"start":{"line":88,"column":8},"end":{"line":88,"column":8}}]},"13":{"line":88,"type":"binary-expr","locations":[{"start":{"line":88,"column":12},"end":{"line":88,"column":45}},{"start":{"line":89,"column":10},"end":{"line":89,"column":50}}]},"14":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":6},"end":{"line":96,"column":6}},{"start":{"line":96,"column":6},"end":{"line":96,"column":6}}]},"15":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":6},"end":{"line":100,"column":6}},{"start":{"line":100,"column":6},"end":{"line":100,"column":6}}]},"16":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":10},"end":{"line":100,"column":43}},{"start":{"line":100,"column":47},"end":{"line":100,"column":75}}]},"17":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":2},"end":{"line":117,"column":2}},{"start":{"line":117,"column":2},"end":{"line":117,"column":2}}]},"18":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":2},"end":{"line":122,"column":2}},{"start":{"line":122,"column":2},"end":{"line":122,"column":2}}]},"19":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":2},"end":{"line":127,"column":2}},{"start":{"line":127,"column":2},"end":{"line":127,"column":2}}]},"20":{"line":128,"type":"cond-expr","locations":[{"start":{"line":128,"column":32},"end":{"line":128,"column":51}},{"start":{"line":128,"column":54},"end":{"line":128,"column":68}}]}},"code":["'use strict'","","var message = require('../common/message')","var find = require('../common/array/find')","","var errors = require('../common/errors')","var BadRequestError = errors.BadRequestError","","var keys = require('../common/keys')","var primaryKey = keys.primary","var typeKey = keys.type","var linkKey = keys.link","var isArrayKey = keys.isArray","","","// Check input values.","var checkInput = [","  [ String, function (value) {","    return typeof value === 'string'","  } ],","  [ Number, function (value) {","    return typeof value === 'number'","  } ],","  [ Boolean, function (value) {","    return typeof value === 'boolean'","  } ],","  [ Date, function (value) {","    return value && typeof value.getTime === 'function' &&","      !Number.isNaN(value.getTime())","  } ],","  [ Object, function (value) {","    return value !== null && typeof value === 'object'","  } ],","  [ Buffer, function (value) {","    return Buffer.isBuffer(value)","  } ]","]","","","/**"," * Throw errors for mismatched types on a record."," *"," * @param {String} type"," * @param {Object} record"," * @param {Object} fields"," * @param {Object} meta"," * @return {Object}"," */","module.exports = function enforce (type, record, fields, meta) {","  var i, j, key, value, fieldDefinition, language","","  if (!meta) meta = {}","  language = meta.language","","  for (key in record) {","    fieldDefinition = fields[key]","","    if (!fieldDefinition) {","      if (key !== primaryKey) delete record[key]","      continue","    }","","    value = record[key]","","    if (fieldDefinition[typeKey]) {","      if (fieldDefinition[isArrayKey]) {","        // If the field is defined as an array but the value is not,","        // then throw an error.","        if (!Array.isArray(value))","          throw new BadRequestError(message('EnforceArrayType', language, {","            key: key, type: fieldDefinition[typeKey].name","          }))","","        for (i = 0, j = value.length; i < j; i++)","          checkValue(fieldDefinition, key, value[i], meta)","      }","      else checkValue(fieldDefinition, key, value, meta)","","      continue","    }","","    if (fieldDefinition[linkKey]) {","      if (fieldDefinition[isArrayKey]) {","        if (!Array.isArray(value))","          throw new BadRequestError(","            message('EnforceArray', language, { key: key }))","","        if (type === fieldDefinition[linkKey] &&","          find(value, matchId(record[primaryKey])))","          throw new BadRequestError(","            message('EnforceSameID', language, { key: key }))","","        continue","      }","","      if (Array.isArray(value))","        throw new BadRequestError(","          message('EnforceSingular', language, { key: key }))","","      if (type === fieldDefinition[linkKey] && record[primaryKey] === value)","        throw new BadRequestError(","          message('EnforceSameID', language, { key: key }))","","      continue","    }","  }","","  return record","}","","","function checkValue (field, key, value, meta) {","  var language = meta.language","  var check","","  // Skip `null` case.","  if (value === null) return","","  check = find(checkInput, function (pair) {","    return pair[0] === field[typeKey]","  })","  if (check) check = check[1]","  else check = field[typeKey]","","  // Fields may be nullable, but if they're defined, then they must be defined","  // properly.","  if (!check(value)) throw new BadRequestError(","    message(field[isArrayKey] ? 'EnforceValueArray' : 'EnforceValue',","    language, { key: key, type: field[typeKey].name }))","}","","","function matchId (a) {","  return function (b) {","    return a === b","  }","}",""],"l":{"3":1,"4":1,"6":1,"7":1,"9":1,"10":1,"11":1,"12":1,"13":1,"17":1,"19":0,"22":0,"25":0,"28":0,"32":0,"35":0,"49":1,"50":0,"52":0,"53":0,"55":0,"56":0,"58":0,"59":0,"60":0,"63":0,"65":0,"66":0,"69":0,"70":0,"74":0,"75":0,"77":0,"79":0,"82":0,"83":0,"84":0,"85":0,"88":0,"90":0,"93":0,"96":0,"97":0,"100":0,"101":0,"104":0,"108":0,"112":1,"113":0,"114":0,"117":0,"119":0,"120":0,"122":0,"123":0,"127":0,"133":1,"134":0,"135":0}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/dispatch/update_helpers.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/dispatch/update_helpers.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":20},"end":{"line":10,"column":56}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":6},"end":{"line":15,"column":24}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":16},"end":{"line":29,"column":54}}},"4":{"name":"(anonymous_4)","line":43,"loc":{"start":{"line":43,"column":19},"end":{"line":43,"column":57}}},"5":{"name":"(anonymous_5)","line":57,"loc":{"start":{"line":57,"column":35},"end":{"line":57,"column":74}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":36}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"4":{"start":{"line":10,"column":0},"end":{"line":25,"column":1}},"5":{"start":{"line":11,"column":2},"end":{"line":11,"column":12}},"6":{"start":{"line":13,"column":2},"end":{"line":17,"column":8}},"7":{"start":{"line":14,"column":4},"end":{"line":17,"column":8}},"8":{"start":{"line":16,"column":8},"end":{"line":16,"column":40}},"9":{"start":{"line":19,"column":2},"end":{"line":19,"column":21}},"10":{"start":{"line":20,"column":2},"end":{"line":20,"column":40}},"11":{"start":{"line":20,"column":22},"end":{"line":20,"column":40}},"12":{"start":{"line":21,"column":2},"end":{"line":21,"column":28}},"13":{"start":{"line":22,"column":2},"end":{"line":22,"column":18}},"14":{"start":{"line":23,"column":2},"end":{"line":23,"column":24}},"15":{"start":{"line":24,"column":2},"end":{"line":24,"column":15}},"16":{"start":{"line":29,"column":0},"end":{"line":39,"column":1}},"17":{"start":{"line":30,"column":2},"end":{"line":35,"column":3}},"18":{"start":{"line":31,"column":4},"end":{"line":31,"column":38}},"19":{"start":{"line":31,"column":22},"end":{"line":31,"column":38}},"20":{"start":{"line":32,"column":4},"end":{"line":32,"column":52}},"21":{"start":{"line":32,"column":29},"end":{"line":32,"column":52}},"22":{"start":{"line":33,"column":4},"end":{"line":33,"column":31}},"23":{"start":{"line":34,"column":4},"end":{"line":34,"column":10}},"24":{"start":{"line":37,"column":2},"end":{"line":37,"column":42}},"25":{"start":{"line":37,"column":23},"end":{"line":37,"column":42}},"26":{"start":{"line":38,"column":2},"end":{"line":38,"column":28}},"27":{"start":{"line":43,"column":0},"end":{"line":53,"column":1}},"28":{"start":{"line":44,"column":2},"end":{"line":49,"column":3}},"29":{"start":{"line":45,"column":4},"end":{"line":45,"column":38}},"30":{"start":{"line":45,"column":22},"end":{"line":45,"column":38}},"31":{"start":{"line":46,"column":4},"end":{"line":46,"column":52}},"32":{"start":{"line":46,"column":29},"end":{"line":46,"column":52}},"33":{"start":{"line":47,"column":4},"end":{"line":47,"column":31}},"34":{"start":{"line":48,"column":4},"end":{"line":48,"column":10}},"35":{"start":{"line":51,"column":2},"end":{"line":51,"column":42}},"36":{"start":{"line":51,"column":23},"end":{"line":51,"column":42}},"37":{"start":{"line":52,"column":2},"end":{"line":52,"column":30}},"38":{"start":{"line":57,"column":0},"end":{"line":78,"column":1}},"39":{"start":{"line":58,"column":2},"end":{"line":58,"column":33}},"40":{"start":{"line":61,"column":2},"end":{"line":77,"column":3}},"41":{"start":{"line":62,"column":4},"end":{"line":62,"column":23}},"42":{"start":{"line":64,"column":4},"end":{"line":73,"column":5}},"43":{"start":{"line":65,"column":6},"end":{"line":65,"column":44}},"44":{"start":{"line":65,"column":36},"end":{"line":65,"column":44}},"45":{"start":{"line":67,"column":6},"end":{"line":69,"column":41}},"46":{"start":{"line":68,"column":8},"end":{"line":69,"column":41}},"47":{"start":{"line":69,"column":10},"end":{"line":69,"column":41}},"48":{"start":{"line":71,"column":6},"end":{"line":72,"column":32}},"49":{"start":{"line":72,"column":8},"end":{"line":72,"column":32}},"50":{"start":{"line":76,"column":4},"end":{"line":76,"column":62}},"51":{"start":{"line":76,"column":42},"end":{"line":76,"column":62}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":2},"end":{"line":13,"column":2}},{"start":{"line":13,"column":2},"end":{"line":13,"column":2}}]},"2":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":6},"end":{"line":13,"column":17}},{"start":{"line":13,"column":21},"end":{"line":13,"column":36}}]},"3":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"4":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"5":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]},"6":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"7":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"8":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]},"9":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":4}},{"start":{"line":45,"column":4},"end":{"line":45,"column":4}}]},"10":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"11":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":2},"end":{"line":51,"column":2}},{"start":{"line":51,"column":2},"end":{"line":51,"column":2}}]},"12":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":6},"end":{"line":65,"column":6}},{"start":{"line":65,"column":6},"end":{"line":65,"column":6}}]},"13":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":68,"column":8}},{"start":{"line":68,"column":8},"end":{"line":68,"column":8}}]},"14":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":6},"end":{"line":71,"column":6}},{"start":{"line":71,"column":6},"end":{"line":71,"column":6}}]},"15":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":76,"column":4}},{"start":{"line":76,"column":4},"end":{"line":76,"column":4}}]}},"code":["'use strict'","","var find = require('../common/array/find')","","var keys = require('../common/keys')","var primaryKey = keys.primary","","","// Get a related update object by ID, or return a new one if not found.","exports.getUpdate = function (type, id, updates, cache) {","  var update","","  if (cache[type] && cache[type][id])","    return find(updates[type],","      function (update) {","        return update[primaryKey] === id","      })","","  update = { id: id }","  if (!updates[type]) updates[type] = []","  updates[type].push(update)","  cache[type] = {}","  cache[type][id] = true","  return update","}","","","// Add an ID to an update object.","exports.addId = function (id, update, field, isArray) {","  if (isArray) {","    if (!update.push) update.push = {}","    if (!update.push[field]) update.push[field] = []","    update.push[field].push(id)","    return","  }","","  if (!update.replace) update.replace = {}","  update.replace[field] = id","}","","","// Remove an ID from an update object.","exports.removeId = function (id, update, field, isArray) {","  if (isArray) {","    if (!update.pull) update.pull = {}","    if (!update.pull[field]) update.pull[field] = []","    update.pull[field].push(id)","    return","  }","","  if (!update.replace) update.replace = {}","  update.replace[field] = null","}","","","// Remove denormalized fields from appearing in updates on change events.","exports.scrubDenormalizedUpdates = function (updates, denormalizedFields) {","  var i, update, operation, field","","  // Iterate in reverse, so we can easily remove indices in the array.","  for (i = updates.length; i--;) {","    update = updates[i]","","    for (operation in update) {","      if (operation === primaryKey) continue","","      for (field in update[operation])","        if (field in denormalizedFields)","          delete update[operation][field]","","      if (!Object.keys(update[operation]).length)","        delete update[operation]","    }","","    // If only the primary key is present, then remove the entire update.","    if (Object.keys(update).length === 1) updates.splice(i, 1)","  }","}",""],"l":{"3":1,"5":1,"6":1,"10":1,"11":0,"13":0,"14":0,"16":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"37":0,"38":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"51":0,"52":0,"57":1,"58":0,"61":0,"62":0,"64":0,"65":0,"67":0,"68":0,"69":0,"71":0,"72":0,"76":0}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/dispatch/delete.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/dispatch/delete.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":30,"loc":{"start":{"line":30,"column":17},"end":{"line":30,"column":36}}},"2":{"name":"(anonymous_2)","line":57,"loc":{"start":{"line":57,"column":8},"end":{"line":57,"column":32}}},"3":{"name":"(anonymous_3)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":49}}},"4":{"name":"(anonymous_4)","line":74,"loc":{"start":{"line":74,"column":8},"end":{"line":74,"column":20}}},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":8},"end":{"line":78,"column":25}}},"6":{"name":"(anonymous_6)","line":117,"loc":{"start":{"line":117,"column":49},"end":{"line":117,"column":65}}},"7":{"name":"(anonymous_7)","line":124,"loc":{"start":{"line":124,"column":8},"end":{"line":124,"column":20}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":40}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":40}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":40}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":69}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":39}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":37}},"10":{"start":{"line":15,"column":0},"end":{"line":15,"column":46}},"11":{"start":{"line":16,"column":0},"end":{"line":16,"column":34}},"12":{"start":{"line":17,"column":0},"end":{"line":17,"column":35}},"13":{"start":{"line":18,"column":0},"end":{"line":18,"column":35}},"14":{"start":{"line":19,"column":0},"end":{"line":19,"column":34}},"15":{"start":{"line":20,"column":0},"end":{"line":20,"column":28}},"16":{"start":{"line":21,"column":0},"end":{"line":21,"column":34}},"17":{"start":{"line":22,"column":0},"end":{"line":22,"column":34}},"18":{"start":{"line":30,"column":0},"end":{"line":144,"column":1}},"19":{"start":{"line":31,"column":2},"end":{"line":31,"column":31}},"20":{"start":{"line":32,"column":2},"end":{"line":32,"column":17}},"21":{"start":{"line":33,"column":2},"end":{"line":33,"column":50}},"22":{"start":{"line":34,"column":2},"end":{"line":34,"column":31}},"23":{"start":{"line":35,"column":2},"end":{"line":35,"column":25}},"24":{"start":{"line":36,"column":2},"end":{"line":36,"column":23}},"25":{"start":{"line":37,"column":2},"end":{"line":37,"column":25}},"26":{"start":{"line":38,"column":2},"end":{"line":38,"column":30}},"27":{"start":{"line":39,"column":2},"end":{"line":39,"column":36}},"28":{"start":{"line":40,"column":2},"end":{"line":40,"column":24}},"29":{"start":{"line":41,"column":2},"end":{"line":41,"column":18}},"30":{"start":{"line":42,"column":2},"end":{"line":42,"column":32}},"31":{"start":{"line":43,"column":2},"end":{"line":43,"column":24}},"32":{"start":{"line":44,"column":2},"end":{"line":44,"column":16}},"33":{"start":{"line":45,"column":2},"end":{"line":45,"column":33}},"34":{"start":{"line":47,"column":2},"end":{"line":47,"column":35}},"35":{"start":{"line":49,"column":2},"end":{"line":50,"column":51}},"36":{"start":{"line":50,"column":4},"end":{"line":50,"column":51}},"37":{"start":{"line":50,"column":34},"end":{"line":50,"column":51}},"38":{"start":{"line":52,"column":2},"end":{"line":53,"column":72}},"39":{"start":{"line":53,"column":4},"end":{"line":53,"column":72}},"40":{"start":{"line":55,"column":2},"end":{"line":143,"column":4}},"41":{"start":{"line":58,"column":4},"end":{"line":58,"column":26}},"42":{"start":{"line":60,"column":4},"end":{"line":61,"column":72}},"43":{"start":{"line":61,"column":6},"end":{"line":61,"column":72}},"44":{"start":{"line":63,"column":4},"end":{"line":66,"column":6}},"45":{"start":{"line":68,"column":4},"end":{"line":71,"column":19}},"46":{"start":{"line":70,"column":8},"end":{"line":70,"column":39}},"47":{"start":{"line":75,"column":4},"end":{"line":75,"column":46}},"48":{"start":{"line":79,"column":4},"end":{"line":80,"column":42}},"49":{"start":{"line":83,"column":4},"end":{"line":83,"column":20}},"50":{"start":{"line":86,"column":4},"end":{"line":87,"column":61}},"51":{"start":{"line":87,"column":6},"end":{"line":87,"column":61}},"52":{"start":{"line":90,"column":4},"end":{"line":115,"column":5}},"53":{"start":{"line":91,"column":6},"end":{"line":91,"column":25}},"54":{"start":{"line":92,"column":6},"end":{"line":114,"column":7}},"55":{"start":{"line":93,"column":8},"end":{"line":93,"column":24}},"56":{"start":{"line":94,"column":8},"end":{"line":94,"column":48}},"57":{"start":{"line":96,"column":8},"end":{"line":96,"column":68}},"58":{"start":{"line":96,"column":60},"end":{"line":96,"column":68}},"59":{"start":{"line":98,"column":8},"end":{"line":98,"column":43}},"60":{"start":{"line":99,"column":8},"end":{"line":99,"column":73}},"61":{"start":{"line":100,"column":8},"end":{"line":101,"column":43}},"62":{"start":{"line":104,"column":8},"end":{"line":104,"column":58}},"63":{"start":{"line":104,"column":34},"end":{"line":104,"column":58}},"64":{"start":{"line":105,"column":8},"end":{"line":105,"column":58}},"65":{"start":{"line":105,"column":34},"end":{"line":105,"column":58}},"66":{"start":{"line":107,"column":8},"end":{"line":113,"column":9}},"67":{"start":{"line":108,"column":10},"end":{"line":108,"column":27}},"68":{"start":{"line":109,"column":10},"end":{"line":112,"column":42}},"69":{"start":{"line":110,"column":12},"end":{"line":112,"column":42}},"70":{"start":{"line":117,"column":4},"end":{"line":121,"column":7}},"71":{"start":{"line":118,"column":6},"end":{"line":120,"column":12}},"72":{"start":{"line":125,"column":4},"end":{"line":125,"column":35}},"73":{"start":{"line":127,"column":4},"end":{"line":127,"column":32}},"74":{"start":{"line":128,"column":4},"end":{"line":128,"column":39}},"75":{"start":{"line":130,"column":4},"end":{"line":137,"column":5}},"76":{"start":{"line":131,"column":6},"end":{"line":131,"column":72}},"77":{"start":{"line":133,"column":6},"end":{"line":133,"column":48}},"78":{"start":{"line":133,"column":40},"end":{"line":133,"column":48}},"79":{"start":{"line":135,"column":6},"end":{"line":135,"column":68}},"80":{"start":{"line":135,"column":40},"end":{"line":135,"column":68}},"81":{"start":{"line":136,"column":6},"end":{"line":136,"column":65}},"82":{"start":{"line":140,"column":4},"end":{"line":140,"column":37}},"83":{"start":{"line":142,"column":4},"end":{"line":142,"column":18}}},"branchMap":{"1":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":4}},{"start":{"line":50,"column":4},"end":{"line":50,"column":4}}]},"2":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":2},"end":{"line":52,"column":2}},{"start":{"line":52,"column":2},"end":{"line":52,"column":2}}]},"3":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":6},"end":{"line":52,"column":10}},{"start":{"line":52,"column":14},"end":{"line":52,"column":25}}]},"4":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":60,"column":4}},{"start":{"line":60,"column":4},"end":{"line":60,"column":4}}]},"5":{"line":68,"type":"cond-expr","locations":[{"start":{"line":69,"column":6},"end":{"line":71,"column":9}},{"start":{"line":71,"column":12},"end":{"line":71,"column":19}}]},"6":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":4},"end":{"line":86,"column":4}},{"start":{"line":86,"column":4},"end":{"line":86,"column":4}}]},"7":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":8},"end":{"line":96,"column":8}},{"start":{"line":96,"column":8},"end":{"line":96,"column":8}}]},"8":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":12},"end":{"line":96,"column":41}},{"start":{"line":96,"column":45},"end":{"line":96,"column":58}}]},"9":{"line":100,"type":"cond-expr","locations":[{"start":{"line":101,"column":10},"end":{"line":101,"column":23}},{"start":{"line":101,"column":26},"end":{"line":101,"column":43}}]},"10":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":8},"end":{"line":104,"column":8}},{"start":{"line":104,"column":8},"end":{"line":104,"column":8}}]},"11":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":8},"end":{"line":105,"column":8}},{"start":{"line":105,"column":8},"end":{"line":105,"column":8}}]},"12":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":10},"end":{"line":109,"column":10}},{"start":{"line":109,"column":10},"end":{"line":109,"column":10}}]},"13":{"line":118,"type":"cond-expr","locations":[{"start":{"line":119,"column":8},"end":{"line":119,"column":53}},{"start":{"line":120,"column":8},"end":{"line":120,"column":12}}]},"14":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":6},"end":{"line":133,"column":6}},{"start":{"line":133,"column":6},"end":{"line":133,"column":6}}]},"15":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":6},"end":{"line":135,"column":6}},{"start":{"line":135,"column":6},"end":{"line":135,"column":6}}]}},"code":["'use strict'","","var message = require('../common/message')","var promise = require('../common/promise')","var map = require('../common/array/map')","","var errors = require('../common/errors')","var NotFoundError = errors.NotFoundError","","var updateHelpers = require('./update_helpers')","var scrubDenormalizedUpdates = updateHelpers.scrubDenormalizedUpdates","var getUpdate = updateHelpers.getUpdate","var removeId = updateHelpers.removeId","","var constants = require('../common/constants')","var changeEvent = constants.change","var deleteMethod = constants.delete","var updateMethod = constants.update","var primaryKey = constants.primary","var linkKey = constants.link","var inverseKey = constants.inverse","var isArrayKey = constants.isArray","","","/**"," * Delete records. This does not mutate context."," *"," * @return {Promise}"," */","module.exports = function (context) {","  var Promise = promise.Promise","  var self = this","  var denormalizedFields = self.denormalizedFields","  var request = context.request","  var type = request.type","  var ids = request.ids","  var meta = request.meta","  var language = meta.language","  var recordTypes = self.recordTypes","  var hooks = self.hooks","  var updates = {}","  var fields = recordTypes[type]","  var hook = hooks[type]","  var links = []","  var transaction, field, records","","  transaction = context.transaction","","  for (field in fields)","    if (linkKey in fields[field]) links.push(field)","","  if (!ids || !ids.length)","    throw new NotFoundError(message('DeleteRecordsMissingID', language))","","  return transaction.find(type, ids, null, meta)","","  .then(function (foundRecords) {","    records = foundRecords","","    if (records.length < ids.length)","      throw new NotFoundError(message('DeleteRecordsInvalid', language))","","    Object.defineProperty(context.response, 'records', {","      configurable: true,","      value: records","    })","","    return typeof hook[0] === 'function' ?","      Promise.all(map(records, function (record) {","        return hook[0](context, record)","      })) : records","  })","","  .then(function () {","    return transaction.delete(type, ids, meta)","  })","","  .then(function (count) {","    var i, j, k, l, m, n, record, field, id, inverseField,","      linkedType, linkedIsArray, linkedIds","","    // Remove all instances of the deleted IDs in all records.","    var idCache = {}","","    // Sanity check.","    if (count < ids.length)","      throw new Error(message('DeleteRecordsFail', language))","","    // Loop over each record to generate updates object.","    for (i = 0, j = records.length; i < j; i++) {","      record = records[i]","      for (k = 0, l = links.length; k < l; k++) {","        field = links[k]","        inverseField = fields[field][inverseKey]","","        if (!record.hasOwnProperty(field) || !inverseField) continue","","        linkedType = fields[field][linkKey]","        linkedIsArray = recordTypes[linkedType][inverseField][isArrayKey]","        linkedIds = Array.isArray(record[field]) ?","          record[field] : [ record[field] ]","","        // Do some initialization.","        if (!updates[linkedType]) updates[linkedType] = []","        if (!idCache[linkedType]) idCache[linkedType] = {}","","        for (m = 0, n = linkedIds.length; m < n; m++) {","          id = linkedIds[m]","          if (id !== null)","            removeId(record[primaryKey],","              getUpdate(linkedType, id, updates, idCache),","              inverseField, linkedIsArray)","        }","      }","    }","","    return Promise.all(map(Object.keys(updates), function (type) {","      return updates[type].length ?","        transaction.update(type, updates[type], meta) :","        null","    }))","  })","","  .then(function () {","    var eventData = {}, currentType","","    eventData[deleteMethod] = {}","    eventData[deleteMethod][type] = ids","","    for (currentType in updates) {","      scrubDenormalizedUpdates(updates[currentType], denormalizedFields)","","      if (!updates[currentType].length) continue","","      if (!(updateMethod in eventData)) eventData[updateMethod] = {}","      eventData[updateMethod][currentType] = updates[currentType]","    }","","    // Summarize changes during the lifecycle of the request.","    self.emit(changeEvent, eventData)","","    return context","  })","}",""],"l":{"3":1,"4":1,"5":1,"7":1,"8":1,"10":1,"11":1,"12":1,"13":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"47":0,"49":0,"50":0,"52":0,"53":0,"55":0,"58":0,"60":0,"61":0,"63":0,"68":0,"70":0,"75":0,"79":0,"83":0,"86":0,"87":0,"90":0,"91":0,"92":0,"93":0,"94":0,"96":0,"98":0,"99":0,"100":0,"104":0,"105":0,"107":0,"108":0,"109":0,"110":0,"117":0,"118":0,"125":0,"127":0,"128":0,"130":0,"131":0,"133":0,"135":0,"136":0,"140":0,"142":0}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/dispatch/update.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/dispatch/update.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":1,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":1,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0,0],"25":[0,0],"26":[0,0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"(anonymous_1)","line":45,"loc":{"start":{"line":45,"column":17},"end":{"line":45,"column":36}}},"2":{"name":"(anonymous_2)","line":62,"loc":{"start":{"line":62,"column":8},"end":{"line":62,"column":27}}},"3":{"name":"(anonymous_3)","line":88,"loc":{"start":{"line":88,"column":47},"end":{"line":88,"column":65}}},"4":{"name":"(anonymous_4)","line":93,"loc":{"start":{"line":93,"column":8},"end":{"line":93,"column":27}}},"5":{"name":"(anonymous_5)","line":97,"loc":{"start":{"line":97,"column":36},"end":{"line":97,"column":54}}},"6":{"name":"(anonymous_6)","line":102,"loc":{"start":{"line":102,"column":29},"end":{"line":102,"column":47}}},"7":{"name":"(anonymous_7)","line":113,"loc":{"start":{"line":113,"column":12},"end":{"line":113,"column":30}}},"8":{"name":"(anonymous_8)","line":144,"loc":{"start":{"line":144,"column":14},"end":{"line":144,"column":32}}},"9":{"name":"(anonymous_9)","line":152,"loc":{"start":{"line":152,"column":8},"end":{"line":152,"column":27}}},"10":{"name":"(anonymous_10)","line":170,"loc":{"start":{"line":170,"column":8},"end":{"line":170,"column":20}}},"11":{"name":"(anonymous_11)","line":326,"loc":{"start":{"line":326,"column":56},"end":{"line":326,"column":72}}},"12":{"name":"(anonymous_12)","line":333,"loc":{"start":{"line":333,"column":8},"end":{"line":333,"column":20}}},"13":{"name":"validateUpdates","line":361,"loc":{"start":{"line":361,"column":0},"end":{"line":361,"column":41}}},"14":{"name":"dropFields","line":378,"loc":{"start":{"line":378,"column":0},"end":{"line":378,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":47}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":40}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":38}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":51}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":41}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":47}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":42}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":51}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":47}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":69}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":39}},"13":{"start":{"line":16,"column":0},"end":{"line":16,"column":31}},"14":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}},"15":{"start":{"line":19,"column":0},"end":{"line":19,"column":40}},"16":{"start":{"line":20,"column":0},"end":{"line":20,"column":40}},"17":{"start":{"line":21,"column":0},"end":{"line":21,"column":44}},"18":{"start":{"line":23,"column":0},"end":{"line":23,"column":42}},"19":{"start":{"line":24,"column":0},"end":{"line":24,"column":50}},"20":{"start":{"line":25,"column":0},"end":{"line":25,"column":40}},"21":{"start":{"line":27,"column":0},"end":{"line":27,"column":46}},"22":{"start":{"line":28,"column":0},"end":{"line":28,"column":34}},"23":{"start":{"line":29,"column":0},"end":{"line":29,"column":35}},"24":{"start":{"line":30,"column":0},"end":{"line":30,"column":34}},"25":{"start":{"line":31,"column":0},"end":{"line":31,"column":28}},"26":{"start":{"line":32,"column":0},"end":{"line":32,"column":34}},"27":{"start":{"line":33,"column":0},"end":{"line":33,"column":34}},"28":{"start":{"line":34,"column":0},"end":{"line":34,"column":58}},"29":{"start":{"line":35,"column":0},"end":{"line":35,"column":44}},"30":{"start":{"line":36,"column":0},"end":{"line":36,"column":40}},"31":{"start":{"line":45,"column":0},"end":{"line":357,"column":1}},"32":{"start":{"line":46,"column":2},"end":{"line":46,"column":31}},"33":{"start":{"line":47,"column":2},"end":{"line":47,"column":17}},"34":{"start":{"line":48,"column":2},"end":{"line":48,"column":50}},"35":{"start":{"line":49,"column":2},"end":{"line":49,"column":28}},"36":{"start":{"line":50,"column":2},"end":{"line":50,"column":36}},"37":{"start":{"line":51,"column":2},"end":{"line":51,"column":24}},"38":{"start":{"line":53,"column":2},"end":{"line":53,"column":25}},"39":{"start":{"line":54,"column":2},"end":{"line":54,"column":24}},"40":{"start":{"line":56,"column":2},"end":{"line":56,"column":16}},"41":{"start":{"line":57,"column":2},"end":{"line":57,"column":62}},"42":{"start":{"line":60,"column":2},"end":{"line":356,"column":4}},"43":{"start":{"line":63,"column":4},"end":{"line":63,"column":27}},"44":{"start":{"line":65,"column":4},"end":{"line":65,"column":21}},"45":{"start":{"line":66,"column":4},"end":{"line":66,"column":50}},"46":{"start":{"line":68,"column":4},"end":{"line":68,"column":31}},"47":{"start":{"line":69,"column":4},"end":{"line":69,"column":31}},"48":{"start":{"line":70,"column":4},"end":{"line":70,"column":37}},"49":{"start":{"line":71,"column":4},"end":{"line":71,"column":28}},"50":{"start":{"line":73,"column":4},"end":{"line":73,"column":30}},"51":{"start":{"line":74,"column":4},"end":{"line":74,"column":22}},"52":{"start":{"line":77,"column":4},"end":{"line":86,"column":5}},"53":{"start":{"line":78,"column":6},"end":{"line":78,"column":53}},"54":{"start":{"line":78,"column":36},"end":{"line":78,"column":53}},"55":{"start":{"line":79,"column":6},"end":{"line":85,"column":9}},"56":{"start":{"line":80,"column":8},"end":{"line":85,"column":9}},"57":{"start":{"line":81,"column":10},"end":{"line":81,"column":29}},"58":{"start":{"line":82,"column":10},"end":{"line":82,"column":58}},"59":{"start":{"line":82,"column":30},"end":{"line":82,"column":58}},"60":{"start":{"line":83,"column":10},"end":{"line":83,"column":52}},"61":{"start":{"line":83,"column":27},"end":{"line":83,"column":52}},"62":{"start":{"line":84,"column":10},"end":{"line":84,"column":52}},"63":{"start":{"line":84,"column":27},"end":{"line":84,"column":52}},"64":{"start":{"line":88,"column":4},"end":{"line":90,"column":19}},"65":{"start":{"line":89,"column":6},"end":{"line":89,"column":31}},"66":{"start":{"line":94,"column":4},"end":{"line":95,"column":71}},"67":{"start":{"line":95,"column":6},"end":{"line":95,"column":71}},"68":{"start":{"line":97,"column":4},"end":{"line":149,"column":7}},"69":{"start":{"line":98,"column":6},"end":{"line":98,"column":29}},"70":{"start":{"line":99,"column":6},"end":{"line":99,"column":49}},"71":{"start":{"line":100,"column":6},"end":{"line":100,"column":33}},"72":{"start":{"line":102,"column":6},"end":{"line":104,"column":8}},"73":{"start":{"line":103,"column":8},"end":{"line":103,"column":40}},"74":{"start":{"line":106,"column":6},"end":{"line":107,"column":49}},"75":{"start":{"line":106,"column":19},"end":{"line":107,"column":49}},"76":{"start":{"line":109,"column":6},"end":{"line":109,"column":46}},"77":{"start":{"line":109,"column":19},"end":{"line":109,"column":46}},"78":{"start":{"line":111,"column":6},"end":{"line":148,"column":8}},"79":{"start":{"line":114,"column":8},"end":{"line":114,"column":35}},"80":{"start":{"line":114,"column":20},"end":{"line":114,"column":35}},"81":{"start":{"line":116,"column":8},"end":{"line":124,"column":9}},"82":{"start":{"line":118,"column":10},"end":{"line":119,"column":55}},"83":{"start":{"line":119,"column":12},"end":{"line":119,"column":55}},"84":{"start":{"line":122,"column":10},"end":{"line":123,"column":43}},"85":{"start":{"line":122,"column":41},"end":{"line":123,"column":43}},"86":{"start":{"line":126,"column":8},"end":{"line":126,"column":34}},"87":{"start":{"line":127,"column":8},"end":{"line":127,"column":73}},"88":{"start":{"line":130,"column":8},"end":{"line":130,"column":35}},"89":{"start":{"line":133,"column":8},"end":{"line":133,"column":35}},"90":{"start":{"line":136,"column":8},"end":{"line":137,"column":65}},"91":{"start":{"line":137,"column":10},"end":{"line":137,"column":65}},"92":{"start":{"line":140,"column":8},"end":{"line":140,"column":43}},"93":{"start":{"line":143,"column":8},"end":{"line":147,"column":10}},"94":{"start":{"line":145,"column":10},"end":{"line":145,"column":73}},"95":{"start":{"line":146,"column":10},"end":{"line":146,"column":23}},"96":{"start":{"line":153,"column":4},"end":{"line":153,"column":12}},"97":{"start":{"line":155,"column":4},"end":{"line":155,"column":60}},"98":{"start":{"line":157,"column":4},"end":{"line":160,"column":6}},"99":{"start":{"line":164,"column":4},"end":{"line":165,"column":42}},"100":{"start":{"line":165,"column":6},"end":{"line":165,"column":42}},"101":{"start":{"line":167,"column":4},"end":{"line":167,"column":56}},"102":{"start":{"line":171,"column":4},"end":{"line":172,"column":71}},"103":{"start":{"line":173,"column":4},"end":{"line":173,"column":24}},"104":{"start":{"line":176,"column":4},"end":{"line":176,"column":20}},"105":{"start":{"line":179,"column":4},"end":{"line":324,"column":5}},"106":{"start":{"line":180,"column":6},"end":{"line":180,"column":31}},"107":{"start":{"line":182,"column":6},"end":{"line":323,"column":7}},"108":{"start":{"line":183,"column":8},"end":{"line":183,"column":24}},"109":{"start":{"line":184,"column":8},"end":{"line":184,"column":48}},"110":{"start":{"line":186,"column":8},"end":{"line":186,"column":35}},"111":{"start":{"line":186,"column":27},"end":{"line":186,"column":35}},"112":{"start":{"line":188,"column":8},"end":{"line":188,"column":43}},"113":{"start":{"line":189,"column":8},"end":{"line":189,"column":43}},"114":{"start":{"line":190,"column":8},"end":{"line":191,"column":59}},"115":{"start":{"line":194,"column":8},"end":{"line":194,"column":72}},"116":{"start":{"line":194,"column":41},"end":{"line":194,"column":72}},"117":{"start":{"line":195,"column":8},"end":{"line":195,"column":58}},"118":{"start":{"line":195,"column":34},"end":{"line":195,"column":58}},"119":{"start":{"line":197,"column":8},"end":{"line":197,"column":40}},"120":{"start":{"line":198,"column":8},"end":{"line":198,"column":38}},"121":{"start":{"line":201,"column":8},"end":{"line":277,"column":9}},"122":{"start":{"line":202,"column":10},"end":{"line":202,"column":36}},"123":{"start":{"line":204,"column":10},"end":{"line":237,"column":11}},"124":{"start":{"line":207,"column":12},"end":{"line":207,"column":46}},"125":{"start":{"line":207,"column":38},"end":{"line":207,"column":46}},"126":{"start":{"line":210,"column":12},"end":{"line":213,"column":44}},"127":{"start":{"line":211,"column":14},"end":{"line":213,"column":44}},"128":{"start":{"line":216,"column":12},"end":{"line":224,"column":44}},"129":{"start":{"line":220,"column":14},"end":{"line":224,"column":44}},"130":{"start":{"line":227,"column":12},"end":{"line":233,"column":44}},"131":{"start":{"line":230,"column":14},"end":{"line":233,"column":44}},"132":{"start":{"line":236,"column":12},"end":{"line":236,"column":20}},"133":{"start":{"line":239,"column":10},"end":{"line":239,"column":18}},"134":{"start":{"line":242,"column":10},"end":{"line":256,"column":11}},"135":{"start":{"line":243,"column":12},"end":{"line":243,"column":33}},"136":{"start":{"line":244,"column":12},"end":{"line":255,"column":13}},"137":{"start":{"line":245,"column":14},"end":{"line":245,"column":55}},"138":{"start":{"line":245,"column":39},"end":{"line":245,"column":55}},"139":{"start":{"line":246,"column":14},"end":{"line":253,"column":15}},"140":{"start":{"line":247,"column":16},"end":{"line":250,"column":17}},"141":{"start":{"line":248,"column":18},"end":{"line":248,"column":45}},"142":{"start":{"line":249,"column":18},"end":{"line":249,"column":26}},"143":{"start":{"line":251,"column":16},"end":{"line":251,"column":63}},"144":{"start":{"line":252,"column":16},"end":{"line":252,"column":24}},"145":{"start":{"line":254,"column":14},"end":{"line":254,"column":41}},"146":{"start":{"line":259,"column":10},"end":{"line":273,"column":11}},"147":{"start":{"line":260,"column":12},"end":{"line":260,"column":23}},"148":{"start":{"line":261,"column":12},"end":{"line":272,"column":13}},"149":{"start":{"line":262,"column":14},"end":{"line":262,"column":55}},"150":{"start":{"line":262,"column":39},"end":{"line":262,"column":55}},"151":{"start":{"line":263,"column":14},"end":{"line":270,"column":15}},"152":{"start":{"line":264,"column":16},"end":{"line":267,"column":17}},"153":{"start":{"line":265,"column":18},"end":{"line":265,"column":45}},"154":{"start":{"line":266,"column":18},"end":{"line":266,"column":26}},"155":{"start":{"line":268,"column":16},"end":{"line":268,"column":63}},"156":{"start":{"line":269,"column":16},"end":{"line":269,"column":24}},"157":{"start":{"line":271,"column":14},"end":{"line":271,"column":41}},"158":{"start":{"line":276,"column":10},"end":{"line":276,"column":38}},"159":{"start":{"line":279,"column":8},"end":{"line":290,"column":9}},"160":{"start":{"line":280,"column":10},"end":{"line":281,"column":55}},"161":{"start":{"line":283,"column":10},"end":{"line":289,"column":11}},"162":{"start":{"line":284,"column":12},"end":{"line":284,"column":24}},"163":{"start":{"line":285,"column":12},"end":{"line":288,"column":44}},"164":{"start":{"line":286,"column":14},"end":{"line":288,"column":44}},"165":{"start":{"line":292,"column":8},"end":{"line":303,"column":9}},"166":{"start":{"line":293,"column":10},"end":{"line":294,"column":55}},"167":{"start":{"line":296,"column":10},"end":{"line":302,"column":11}},"168":{"start":{"line":297,"column":12},"end":{"line":297,"column":24}},"169":{"start":{"line":298,"column":12},"end":{"line":301,"column":44}},"170":{"start":{"line":299,"column":14},"end":{"line":301,"column":44}},"171":{"start":{"line":306,"column":8},"end":{"line":322,"column":9}},"172":{"start":{"line":307,"column":10},"end":{"line":308,"column":45}},"173":{"start":{"line":310,"column":10},"end":{"line":321,"column":11}},"174":{"start":{"line":311,"column":12},"end":{"line":311,"column":45}},"175":{"start":{"line":313,"column":12},"end":{"line":314,"column":22}},"176":{"start":{"line":314,"column":14},"end":{"line":314,"column":22}},"177":{"start":{"line":316,"column":12},"end":{"line":320,"column":29}},"178":{"start":{"line":326,"column":4},"end":{"line":330,"column":7}},"179":{"start":{"line":327,"column":6},"end":{"line":329,"column":12}},"180":{"start":{"line":334,"column":4},"end":{"line":334,"column":34}},"181":{"start":{"line":336,"column":4},"end":{"line":336,"column":32}},"182":{"start":{"line":337,"column":4},"end":{"line":337,"column":49}},"183":{"start":{"line":339,"column":4},"end":{"line":350,"column":5}},"184":{"start":{"line":340,"column":6},"end":{"line":340,"column":78}},"185":{"start":{"line":342,"column":6},"end":{"line":342,"column":54}},"186":{"start":{"line":342,"column":46},"end":{"line":342,"column":54}},"187":{"start":{"line":344,"column":6},"end":{"line":349,"column":66}},"188":{"start":{"line":345,"column":8},"end":{"line":345,"column":72}},"189":{"start":{"line":348,"column":11},"end":{"line":349,"column":66}},"190":{"start":{"line":353,"column":4},"end":{"line":353,"column":37}},"191":{"start":{"line":355,"column":4},"end":{"line":355,"column":18}},"192":{"start":{"line":361,"column":0},"end":{"line":375,"column":1}},"193":{"start":{"line":362,"column":2},"end":{"line":362,"column":30}},"194":{"start":{"line":363,"column":2},"end":{"line":363,"column":18}},"195":{"start":{"line":365,"column":2},"end":{"line":367,"column":48}},"196":{"start":{"line":366,"column":4},"end":{"line":367,"column":48}},"197":{"start":{"line":369,"column":2},"end":{"line":374,"column":3}},"198":{"start":{"line":370,"column":4},"end":{"line":370,"column":23}},"199":{"start":{"line":371,"column":4},"end":{"line":373,"column":51}},"200":{"start":{"line":372,"column":6},"end":{"line":373,"column":51}},"201":{"start":{"line":378,"column":0},"end":{"line":389,"column":1}},"202":{"start":{"line":379,"column":2},"end":{"line":379,"column":11}},"203":{"start":{"line":381,"column":2},"end":{"line":382,"column":67}},"204":{"start":{"line":382,"column":4},"end":{"line":382,"column":67}},"205":{"start":{"line":382,"column":39},"end":{"line":382,"column":67}},"206":{"start":{"line":384,"column":2},"end":{"line":385,"column":64}},"207":{"start":{"line":385,"column":4},"end":{"line":385,"column":64}},"208":{"start":{"line":385,"column":39},"end":{"line":385,"column":64}},"209":{"start":{"line":387,"column":2},"end":{"line":388,"column":64}},"210":{"start":{"line":388,"column":4},"end":{"line":388,"column":64}},"211":{"start":{"line":388,"column":39},"end":{"line":388,"column":64}}},"branchMap":{"1":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":6},"end":{"line":78,"column":6}},{"start":{"line":78,"column":6},"end":{"line":78,"column":6}}]},"2":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":6},"end":{"line":79,"column":6}},{"start":{"line":79,"column":6},"end":{"line":79,"column":6}}]},"3":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":10},"end":{"line":82,"column":10}},{"start":{"line":82,"column":10},"end":{"line":82,"column":10}}]},"4":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":10},"end":{"line":83,"column":10}},{"start":{"line":83,"column":10},"end":{"line":83,"column":10}}]},"5":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":10},"end":{"line":84,"column":10}},{"start":{"line":84,"column":10},"end":{"line":84,"column":10}}]},"6":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":94,"column":4}},{"start":{"line":94,"column":4},"end":{"line":94,"column":4}}]},"7":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":6},"end":{"line":106,"column":6}},{"start":{"line":106,"column":6},"end":{"line":106,"column":6}}]},"8":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":6},"end":{"line":109,"column":6}},{"start":{"line":109,"column":6},"end":{"line":109,"column":6}}]},"9":{"line":111,"type":"cond-expr","locations":[{"start":{"line":112,"column":8},"end":{"line":112,"column":40}},{"start":{"line":112,"column":43},"end":{"line":112,"column":49}}]},"10":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":8},"end":{"line":114,"column":8}},{"start":{"line":114,"column":8},"end":{"line":114,"column":8}}]},"11":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":8},"end":{"line":116,"column":8}},{"start":{"line":116,"column":8},"end":{"line":116,"column":8}}]},"12":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":10},"end":{"line":118,"column":10}},{"start":{"line":118,"column":10},"end":{"line":118,"column":10}}]},"13":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":10},"end":{"line":122,"column":10}},{"start":{"line":122,"column":10},"end":{"line":122,"column":10}}]},"14":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":8},"end":{"line":136,"column":8}},{"start":{"line":136,"column":8},"end":{"line":136,"column":8}}]},"15":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":8},"end":{"line":186,"column":8}},{"start":{"line":186,"column":8},"end":{"line":186,"column":8}}]},"16":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":8},"end":{"line":194,"column":8}},{"start":{"line":194,"column":8},"end":{"line":194,"column":8}}]},"17":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":8},"end":{"line":195,"column":8}},{"start":{"line":195,"column":8},"end":{"line":195,"column":8}}]},"18":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":8},"end":{"line":201,"column":8}},{"start":{"line":201,"column":8},"end":{"line":201,"column":8}}]},"19":{"line":201,"type":"binary-expr","locations":[{"start":{"line":201,"column":12},"end":{"line":201,"column":26}},{"start":{"line":201,"column":30},"end":{"line":201,"column":66}}]},"20":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":10},"end":{"line":204,"column":10}},{"start":{"line":204,"column":10},"end":{"line":204,"column":10}}]},"21":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":12},"end":{"line":207,"column":12}},{"start":{"line":207,"column":12},"end":{"line":207,"column":12}}]},"22":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":12},"end":{"line":210,"column":12}},{"start":{"line":210,"column":12},"end":{"line":210,"column":12}}]},"23":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":12},"end":{"line":216,"column":12}},{"start":{"line":216,"column":12},"end":{"line":216,"column":12}}]},"24":{"line":216,"type":"binary-expr","locations":[{"start":{"line":216,"column":16},"end":{"line":216,"column":44}},{"start":{"line":217,"column":14},"end":{"line":217,"column":50}},{"start":{"line":218,"column":14},"end":{"line":218,"column":28}},{"start":{"line":219,"column":14},"end":{"line":219,"column":64}}]},"25":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":12},"end":{"line":227,"column":12}},{"start":{"line":227,"column":12},"end":{"line":227,"column":12}}]},"26":{"line":227,"type":"binary-expr","locations":[{"start":{"line":227,"column":16},"end":{"line":227,"column":38}},{"start":{"line":228,"column":14},"end":{"line":228,"column":45}},{"start":{"line":229,"column":14},"end":{"line":229,"column":34}}]},"27":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":12},"end":{"line":244,"column":12}},{"start":{"line":244,"column":12},"end":{"line":244,"column":12}}]},"28":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":14},"end":{"line":245,"column":14}},{"start":{"line":245,"column":14},"end":{"line":245,"column":14}}]},"29":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":14},"end":{"line":246,"column":14}},{"start":{"line":246,"column":14},"end":{"line":246,"column":14}}]},"30":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":16},"end":{"line":247,"column":16}},{"start":{"line":247,"column":16},"end":{"line":247,"column":16}}]},"31":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":12},"end":{"line":261,"column":12}},{"start":{"line":261,"column":12},"end":{"line":261,"column":12}}]},"32":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":14},"end":{"line":262,"column":14}},{"start":{"line":262,"column":14},"end":{"line":262,"column":14}}]},"33":{"line":263,"type":"if","locations":[{"start":{"line":263,"column":14},"end":{"line":263,"column":14}},{"start":{"line":263,"column":14},"end":{"line":263,"column":14}}]},"34":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":16},"end":{"line":264,"column":16}},{"start":{"line":264,"column":16},"end":{"line":264,"column":16}}]},"35":{"line":279,"type":"if","locations":[{"start":{"line":279,"column":8},"end":{"line":279,"column":8}},{"start":{"line":279,"column":8},"end":{"line":279,"column":8}}]},"36":{"line":279,"type":"binary-expr","locations":[{"start":{"line":279,"column":12},"end":{"line":279,"column":23}},{"start":{"line":279,"column":27},"end":{"line":279,"column":45}}]},"37":{"line":280,"type":"cond-expr","locations":[{"start":{"line":281,"column":12},"end":{"line":281,"column":30}},{"start":{"line":281,"column":33},"end":{"line":281,"column":55}}]},"38":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":12},"end":{"line":285,"column":12}},{"start":{"line":285,"column":12},"end":{"line":285,"column":12}}]},"39":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":8},"end":{"line":292,"column":8}},{"start":{"line":292,"column":8},"end":{"line":292,"column":8}}]},"40":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":23}},{"start":{"line":292,"column":27},"end":{"line":292,"column":45}}]},"41":{"line":293,"type":"cond-expr","locations":[{"start":{"line":294,"column":12},"end":{"line":294,"column":30}},{"start":{"line":294,"column":33},"end":{"line":294,"column":55}}]},"42":{"line":298,"type":"if","locations":[{"start":{"line":298,"column":12},"end":{"line":298,"column":12}},{"start":{"line":298,"column":12},"end":{"line":298,"column":12}}]},"43":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8}},{"start":{"line":306,"column":8},"end":{"line":306,"column":8}}]},"44":{"line":306,"type":"binary-expr","locations":[{"start":{"line":306,"column":12},"end":{"line":306,"column":40}},{"start":{"line":306,"column":44},"end":{"line":306,"column":58}}]},"45":{"line":307,"type":"cond-expr","locations":[{"start":{"line":308,"column":12},"end":{"line":308,"column":25}},{"start":{"line":308,"column":28},"end":{"line":308,"column":45}}]},"46":{"line":313,"type":"if","locations":[{"start":{"line":313,"column":12},"end":{"line":313,"column":12}},{"start":{"line":313,"column":12},"end":{"line":313,"column":12}}]},"47":{"line":327,"type":"cond-expr","locations":[{"start":{"line":328,"column":8},"end":{"line":328,"column":60}},{"start":{"line":329,"column":8},"end":{"line":329,"column":12}}]},"48":{"line":342,"type":"if","locations":[{"start":{"line":342,"column":6},"end":{"line":342,"column":6}},{"start":{"line":342,"column":6},"end":{"line":342,"column":6}}]},"49":{"line":344,"type":"if","locations":[{"start":{"line":344,"column":6},"end":{"line":344,"column":6}},{"start":{"line":344,"column":6},"end":{"line":344,"column":6}}]},"50":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":2},"end":{"line":365,"column":2}},{"start":{"line":365,"column":2},"end":{"line":365,"column":2}}]},"51":{"line":365,"type":"binary-expr","locations":[{"start":{"line":365,"column":6},"end":{"line":365,"column":14}},{"start":{"line":365,"column":18},"end":{"line":365,"column":33}}]},"52":{"line":371,"type":"if","locations":[{"start":{"line":371,"column":4},"end":{"line":371,"column":4}},{"start":{"line":371,"column":4},"end":{"line":371,"column":4}}]},"53":{"line":382,"type":"if","locations":[{"start":{"line":382,"column":4},"end":{"line":382,"column":4}},{"start":{"line":382,"column":4},"end":{"line":382,"column":4}}]},"54":{"line":385,"type":"if","locations":[{"start":{"line":385,"column":4},"end":{"line":385,"column":4}},{"start":{"line":385,"column":4},"end":{"line":385,"column":4}}]},"55":{"line":388,"type":"if","locations":[{"start":{"line":388,"column":4},"end":{"line":388,"column":4}},{"start":{"line":388,"column":4},"end":{"line":388,"column":4}}]}},"code":["'use strict'","","var deepEqual = require('../common/deep_equal')","var promise = require('../common/promise')","var assign = require('../common/assign')","var clone = require('../common/clone')","var validateRecords = require('./validate_records')","var checkLinks = require('./check_links')","var enforce = require('../record_type/enforce')","var message = require('../common/message')","var applyUpdate = require('../common/apply_update')","","var updateHelpers = require('./update_helpers')","var scrubDenormalizedUpdates = updateHelpers.scrubDenormalizedUpdates","var getUpdate = updateHelpers.getUpdate","var addId = updateHelpers.addId","var removeId = updateHelpers.removeId","","var errors = require('../common/errors')","var NotFoundError = errors.NotFoundError","var BadRequestError = errors.BadRequestError","","var find = require('../common/array/find')","var includes = require('../common/array/includes')","var map = require('../common/array/map')","","var constants = require('../common/constants')","var changeEvent = constants.change","var updateMethod = constants.update","var primaryKey = constants.primary","var linkKey = constants.link","var inverseKey = constants.inverse","var isArrayKey = constants.isArray","var denormalizedInverseKey = constants.denormalizedInverse","var updateRecordKey = constants.updateRecord","var linkedHashKey = constants.linkedHash","","","/**"," * Do updates. First, it must find the records to update, then run hooks"," * and validation, then apply the update as well as links on related records."," *"," * @return {Promise}"," */","module.exports = function (context) {","  var Promise = promise.Promise","  var self = this","  var denormalizedFields = self.denormalizedFields","  var adapter = self.adapter","  var recordTypes = self.recordTypes","  var hooks = self.hooks","","  var relatedUpdates = {}","  var hookedUpdates = []","","  var links = []","  var transaction, updates, fields, hook, type, meta, language","","  // Start a promise chain.","  return Promise.resolve(context.request.payload)","","  .then(function (payload) {","    var i, j, update, field","","    updates = payload","    validateUpdates(updates, context.request.meta)","","    type = context.request.type","    meta = context.request.meta","    transaction = context.transaction","    language = meta.language","","    fields = recordTypes[type]","    hook = hooks[type]","","    // Delete denormalized inverse fields, can't be updated.","    for (field in fields) {","      if (linkKey in fields[field]) links.push(field)","      if (denormalizedInverseKey in fields[field])","        for (i = 0, j = updates.length; i < j; i++) {","          update = updates[i]","          if (update.replace) delete update.replace[field]","          if (update.pull) delete update.pull[field]","          if (update.push) delete update.push[field]","        }","    }","","    return transaction.find(type, map(updates, function (update) {","      return update[primaryKey]","    }), null, meta)","  })","","  .then(function (records) {","    if (records.length < updates.length)","      throw new NotFoundError(message('UpdateRecordMissing', language))","","    return Promise.all(map(records, function (record) {","      var update, cloneUpdate","      var hasHook = typeof hook[0] === 'function'","      var id = record[primaryKey]","","      update = find(updates, function (update) {","        return update[primaryKey] === id","      })","","      if (!update) throw new NotFoundError(","        message('UpdateRecordMissing', language))","","      if (hasHook) cloneUpdate = clone(update)","","      return Promise.resolve(hasHook ?","        hook[0](context, record, update) : update)","      .then(function (result) {","        if (result) update = result","","        if (hasHook) {","          // Check if the update has been modified or not.","          if (!deepEqual(update, cloneUpdate))","            context.response.meta.updateModified = true","","          // Runtime safety check: primary key must be the same.","          if (update[primaryKey] !== id) throw new BadRequestError(","            message('InvalidID', language))","        }","","        hookedUpdates.push(update)","        Object.defineProperty(update, updateRecordKey, { value: record })","","        // Shallow clone the record.","        record = assign({}, record)","","        // Apply updates to record.","        applyUpdate(record, update)","","        // Apply operators to record.","        if (update.operate)","          record = adapter.applyOperators(record, update.operate)","","        // Enforce the fields.","        enforce(type, record, fields, meta)","","        // Ensure referential integrity.","        return checkLinks.call(self, transaction, record, fields, links, meta)","        .then(function (linked) {","          Object.defineProperty(update, linkedHashKey, { value: linked })","          return record","        })","      })","    }))","  })","","  .then(function (records) {","    var i, j","","    validateRecords.call(self, records, fields, links, meta)","","    Object.defineProperty(context.response, 'records', {","      configurable: true,","      value: records","    })","","    // Drop fields in the updates that aren't defined in the record type","    // before doing the update.","    for (i = 0, j = hookedUpdates.length; i < j; i++)","      dropFields(hookedUpdates[i], fields)","","    return transaction.update(type, hookedUpdates, meta)","  })","","  .then(function () {","    var inverseField, isArray, linkedType, linkedIsArray, linked, record,","      partialRecord, partialRecords, ids, id, push, pull, update, field","    var i, j, k, l, m, n","","    // Build up related updates based on update objects.","    var idCache = {}","","    // Iterate over each update to generate related updates.","    for (i = 0, j = hookedUpdates.length; i < j; i++) {","      update = hookedUpdates[i]","","      for (k = 0, l = links.length; k < l; k++) {","        field = links[k]","        inverseField = fields[field][inverseKey]","","        if (!inverseField) continue","","        isArray = fields[field][isArrayKey]","        linkedType = fields[field][linkKey]","        linkedIsArray =","          recordTypes[linkedType][inverseField][isArrayKey]","","        // Do some initialization.","        if (!relatedUpdates[linkedType]) relatedUpdates[linkedType] = []","        if (!idCache[linkedType]) idCache[linkedType] = {}","","        record = update[updateRecordKey]","        linked = update[linkedHashKey]","","        // Replacing a link field is pretty complicated.","        if (update.replace && update.replace.hasOwnProperty(field)) {","          id = update.replace[field]","","          if (!Array.isArray(id)) {","            // Don't need to worry about inverse updates if the value does not","            // change.","            if (id === record[field]) continue","","            // Set related field.","            if (id !== null)","              addId(update[primaryKey],","                getUpdate(linkedType, id, relatedUpdates, idCache),","                inverseField, linkedIsArray)","","            // Unset 2nd degree related record.","            if (linked.hasOwnProperty(field) &&","              linked[field][inverseField] !== null &&","              !linkedIsArray &&","              linked[field][inverseField] !== update[primaryKey])","              removeId(id,","                getUpdate(","                  linkedType, linked[field][inverseField],","                  relatedUpdates, idCache),","                inverseField, linkedIsArray)","","            // For unsetting, remove ID from related record.","            if (record[field] !== null &&","              record[field] !== update[field] &&","              record[field] !== id)","              removeId(update[primaryKey],","                getUpdate(","                  linkedType, record[field], relatedUpdates, idCache),","                inverseField, linkedIsArray)","","            // After this point, there's no need to go over push/pull.","            continue","          }","","          ids = id","","          // Compute differences for pull, and mutate the update.","          for (m = 0, n = record[field].length; m < n; m++) {","            id = record[field][m]","            if (!includes(ids, id)) {","              if (!('pull' in update)) update.pull = {}","              if (update.pull.hasOwnProperty(field)) {","                if (Array.isArray(update.pull[field])) {","                  update.pull[field].push(id)","                  continue","                }","                update.pull[field] = [ update.pull[field], id ]","                continue","              }","              update.pull[field] = [ id ]","            }","          }","","          // Compute differences for push, and mutate the update.","          for (m = 0, n = ids.length; m < n; m++) {","            id = ids[m]","            if (!includes(record[field], id)) {","              if (!('push' in update)) update.push = {}","              if (update.push.hasOwnProperty(field)) {","                if (Array.isArray(update.push[field])) {","                  update.push[field].push(id)","                  continue","                }","                update.push[field] = [ update.push[field], id ]","                continue","              }","              update.push[field] = [ id ]","            }","          }","","          // Delete the original replace, since it is no longer valid.","          delete update.replace[field]","        }","","        if (update.pull && update.pull[field]) {","          pull = Array.isArray(update.pull[field]) ?","            update.pull[field] : [ update.pull[field] ]","","          for (m = 0, n = pull.length; m < n; m++) {","            id = pull[m]","            if (id !== null)","              removeId(update[primaryKey],","                getUpdate(linkedType, id, relatedUpdates, idCache),","                inverseField, linkedIsArray)","          }","        }","","        if (update.push && update.push[field]) {","          push = Array.isArray(update.push[field]) ?","            update.push[field] : [ update.push[field] ]","","          for (m = 0, n = push.length; m < n; m++) {","            id = push[m]","            if (id !== null)","              addId(update[primaryKey],","                getUpdate(linkedType, id, relatedUpdates, idCache),","                inverseField, linkedIsArray)","          }","        }","","        // Unset from 2nd degree related records.","        if (linked.hasOwnProperty(field) && !linkedIsArray) {","          partialRecords = Array.isArray(linked[field]) ?","            linked[field] : [ linked[field] ]","","          for (m = 0, n = partialRecords.length; m < n; m++) {","            partialRecord = partialRecords[m]","","            if (partialRecord[inverseField] === update[primaryKey])","              continue","","            removeId(partialRecord[primaryKey],","              getUpdate(","                type, partialRecord[inverseField],","                relatedUpdates, idCache),","              field, isArray)","          }","        }","      }","    }","","    return Promise.all(map(Object.keys(relatedUpdates), function (type) {","      return relatedUpdates[type].length ?","        transaction.update(type, relatedUpdates[type], meta) :","        null","    }))","  })","","  .then(function () {","    var eventData = {}, linkedType","","    eventData[updateMethod] = {}","    eventData[updateMethod][type] = hookedUpdates","","    for (linkedType in relatedUpdates) {","      scrubDenormalizedUpdates(relatedUpdates[linkedType], denormalizedFields)","","      if (!relatedUpdates[linkedType].length) continue","","      if (linkedType !== type)","        eventData[updateMethod][linkedType] = relatedUpdates[linkedType]","","      // Get the union of update IDs.","      else eventData[updateMethod][type] =","        eventData[updateMethod][type].concat(relatedUpdates[type])","    }","","    // Summarize changes during the lifecycle of the request.","    self.emit(changeEvent, eventData)","","    return context","  })","}","","","// Validate updates.","function validateUpdates (updates, meta) {","  var language = meta.language","  var i, j, update","","  if (!updates || !updates.length)","    throw new BadRequestError(","      message('UpdateRecordsInvalid', language))","","  for (i = 0, j = updates.length; i < j; i++) {","    update = updates[i]","    if (!update[primaryKey])","      throw new BadRequestError(","        message('UpdateRecordMissingID', language))","  }","}","","","function dropFields (update, fields) {","  var field","","  for (field in update.replace)","    if (!fields.hasOwnProperty(field)) delete update.replace[field]","","  for (field in update.pull)","    if (!fields.hasOwnProperty(field)) delete update.pull[field]","","  for (field in update.push)","    if (!fields.hasOwnProperty(field)) delete update.push[field]","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"13":1,"14":1,"15":1,"16":1,"17":1,"19":1,"20":1,"21":1,"23":1,"24":1,"25":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"53":0,"54":0,"56":0,"57":0,"60":0,"63":0,"65":0,"66":0,"68":0,"69":0,"70":0,"71":0,"73":0,"74":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"88":0,"89":0,"94":0,"95":0,"97":0,"98":0,"99":0,"100":0,"102":0,"103":0,"106":0,"109":0,"111":0,"114":0,"116":0,"118":0,"119":0,"122":0,"126":0,"127":0,"130":0,"133":0,"136":0,"137":0,"140":0,"143":0,"145":0,"146":0,"153":0,"155":0,"157":0,"164":0,"165":0,"167":0,"171":0,"173":0,"176":0,"179":0,"180":0,"182":0,"183":0,"184":0,"186":0,"188":0,"189":0,"190":0,"194":0,"195":0,"197":0,"198":0,"201":0,"202":0,"204":0,"207":0,"210":0,"211":0,"216":0,"220":0,"227":0,"230":0,"236":0,"239":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"251":0,"252":0,"254":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"268":0,"269":0,"271":0,"276":0,"279":0,"280":0,"283":0,"284":0,"285":0,"286":0,"292":0,"293":0,"296":0,"297":0,"298":0,"299":0,"306":0,"307":0,"310":0,"311":0,"313":0,"314":0,"316":0,"326":0,"327":0,"334":0,"336":0,"337":0,"339":0,"340":0,"342":0,"344":0,"345":0,"348":0,"353":0,"355":0,"361":1,"362":0,"363":0,"365":0,"366":0,"369":0,"370":0,"371":0,"372":0,"378":1,"379":0,"381":0,"382":0,"384":0,"385":0,"387":0,"388":0}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/dispatch/find.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/dispatch/find.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":17},"end":{"line":9,"column":36}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":8},"end":{"line":20,"column":27}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":28,"column":1}},"2":{"start":{"line":10,"column":2},"end":{"line":10,"column":39}},"3":{"start":{"line":11,"column":2},"end":{"line":11,"column":31}},"4":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"5":{"start":{"line":13,"column":2},"end":{"line":13,"column":23}},"6":{"start":{"line":14,"column":2},"end":{"line":14,"column":31}},"7":{"start":{"line":15,"column":2},"end":{"line":15,"column":25}},"8":{"start":{"line":17,"column":2},"end":{"line":17,"column":27}},"9":{"start":{"line":17,"column":13},"end":{"line":17,"column":27}},"10":{"start":{"line":19,"column":2},"end":{"line":27,"column":4}},"11":{"start":{"line":21,"column":4},"end":{"line":24,"column":6}},"12":{"start":{"line":26,"column":4},"end":{"line":26,"column":18}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":2},"end":{"line":17,"column":2}},{"start":{"line":17,"column":2},"end":{"line":17,"column":2}}]}},"code":["'use strict'","","/**"," * Fetch the primary records. This mutates `context.response`"," * for the next method."," *"," * @return {Promise}"," */","module.exports = function (context) {","  var transaction = context.transaction","  var request = context.request","  var type = request.type","  var ids = request.ids","  var options = request.options","  var meta = request.meta","","  if (!type) return context","","  return transaction.find(type, ids, options, meta)","  .then(function (records) {","    Object.defineProperty(context.response, 'records', {","      configurable: true,","      value: records","    })","","    return context","  })","}",""],"l":{"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"17":0,"19":0,"21":0,"26":0}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/dispatch/include.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/dispatch/include.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":1,"100":0,"101":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"include","line":22,"loc":{"start":{"line":22,"column":17},"end":{"line":22,"column":44}}},"2":{"name":"(anonymous_2)","line":52,"loc":{"start":{"line":52,"column":34},"end":{"line":52,"column":52}}},"3":{"name":"(anonymous_3)","line":53,"loc":{"start":{"line":53,"column":23},"end":{"line":53,"column":50}}},"4":{"name":"(anonymous_4)","line":66,"loc":{"start":{"line":66,"column":38},"end":{"line":66,"column":56}}},"5":{"name":"(anonymous_5)","line":74,"loc":{"start":{"line":74,"column":16},"end":{"line":74,"column":35}}},"6":{"name":"(anonymous_6)","line":80,"loc":{"start":{"line":80,"column":12},"end":{"line":80,"column":31}}},"7":{"name":"(anonymous_7)","line":82,"loc":{"start":{"line":82,"column":30},"end":{"line":82,"column":63}}},"8":{"name":"(anonymous_8)","line":83,"loc":{"start":{"line":83,"column":30},"end":{"line":83,"column":48}}},"9":{"name":"(anonymous_9)","line":92,"loc":{"start":{"line":92,"column":40},"end":{"line":92,"column":63}}},"10":{"name":"(anonymous_10)","line":122,"loc":{"start":{"line":122,"column":12},"end":{"line":122,"column":31}}},"11":{"name":"(anonymous_11)","line":128,"loc":{"start":{"line":128,"column":9},"end":{"line":128,"column":26}}},"12":{"name":"(anonymous_12)","line":134,"loc":{"start":{"line":134,"column":8},"end":{"line":134,"column":30}}},"13":{"name":"(anonymous_13)","line":135,"loc":{"start":{"line":135,"column":37},"end":{"line":135,"column":67}}},"14":{"name":"matchId","line":178,"loc":{"start":{"line":178,"column":0},"end":{"line":178,"column":22}}},"15":{"name":"(anonymous_15)","line":179,"loc":{"start":{"line":179,"column":9},"end":{"line":179,"column":27}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":40}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":42}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":46}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":40}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":44}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":36}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":29}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":23}},"10":{"start":{"line":22,"column":0},"end":{"line":175,"column":1}},"11":{"start":{"line":23,"column":2},"end":{"line":23,"column":31}},"12":{"start":{"line":24,"column":2},"end":{"line":24,"column":31}},"13":{"start":{"line":25,"column":2},"end":{"line":25,"column":25}},"14":{"start":{"line":26,"column":2},"end":{"line":26,"column":29}},"15":{"start":{"line":27,"column":2},"end":{"line":27,"column":31}},"16":{"start":{"line":28,"column":2},"end":{"line":28,"column":25}},"17":{"start":{"line":29,"column":2},"end":{"line":29,"column":33}},"18":{"start":{"line":30,"column":2},"end":{"line":30,"column":39}},"19":{"start":{"line":31,"column":2},"end":{"line":31,"column":32}},"20":{"start":{"line":32,"column":2},"end":{"line":32,"column":36}},"21":{"start":{"line":33,"column":2},"end":{"line":33,"column":22}},"22":{"start":{"line":36,"column":2},"end":{"line":36,"column":18}},"23":{"start":{"line":37,"column":2},"end":{"line":37,"column":20}},"24":{"start":{"line":38,"column":2},"end":{"line":39,"column":32}},"25":{"start":{"line":39,"column":4},"end":{"line":39,"column":32}},"26":{"start":{"line":41,"column":2},"end":{"line":41,"column":51}},"27":{"start":{"line":41,"column":37},"end":{"line":41,"column":51}},"28":{"start":{"line":45,"column":2},"end":{"line":50,"column":5}},"29":{"start":{"line":46,"column":4},"end":{"line":50,"column":5}},"30":{"start":{"line":47,"column":6},"end":{"line":47,"column":25}},"31":{"start":{"line":48,"column":6},"end":{"line":48,"column":29}},"32":{"start":{"line":49,"column":6},"end":{"line":49,"column":54}},"33":{"start":{"line":49,"column":30},"end":{"line":49,"column":54}},"34":{"start":{"line":52,"column":2},"end":{"line":174,"column":4}},"35":{"start":{"line":53,"column":4},"end":{"line":131,"column":6}},"36":{"start":{"line":54,"column":6},"end":{"line":54,"column":28}},"37":{"start":{"line":55,"column":6},"end":{"line":55,"column":25}},"38":{"start":{"line":56,"column":6},"end":{"line":56,"column":29}},"39":{"start":{"line":57,"column":6},"end":{"line":57,"column":58}},"40":{"start":{"line":59,"column":6},"end":{"line":63,"column":9}},"41":{"start":{"line":60,"column":8},"end":{"line":63,"column":9}},"42":{"start":{"line":61,"column":10},"end":{"line":61,"column":42}},"43":{"start":{"line":62,"column":10},"end":{"line":62,"column":34}},"44":{"start":{"line":66,"column":6},"end":{"line":130,"column":8}},"45":{"start":{"line":67,"column":8},"end":{"line":67,"column":19}},"46":{"start":{"line":69,"column":8},"end":{"line":75,"column":9}},"47":{"start":{"line":70,"column":10},"end":{"line":70,"column":34}},"48":{"start":{"line":71,"column":10},"end":{"line":71,"column":42}},"49":{"start":{"line":73,"column":10},"end":{"line":74,"column":57}},"50":{"start":{"line":74,"column":37},"end":{"line":74,"column":55}},"51":{"start":{"line":77,"column":8},"end":{"line":77,"column":21}},"52":{"start":{"line":82,"column":8},"end":{"line":119,"column":36}},"53":{"start":{"line":83,"column":10},"end":{"line":118,"column":12}},"54":{"start":{"line":84,"column":12},"end":{"line":84,"column":58}},"55":{"start":{"line":86,"column":12},"end":{"line":86,"column":56}},"56":{"start":{"line":86,"column":47},"end":{"line":86,"column":56}},"57":{"start":{"line":87,"column":12},"end":{"line":88,"column":66}},"58":{"start":{"line":87,"column":44},"end":{"line":88,"column":66}},"59":{"start":{"line":90,"column":12},"end":{"line":90,"column":29}},"60":{"start":{"line":91,"column":12},"end":{"line":91,"column":47}},"61":{"start":{"line":92,"column":12},"end":{"line":106,"column":18}},"62":{"start":{"line":93,"column":14},"end":{"line":94,"column":49}},"63":{"start":{"line":95,"column":14},"end":{"line":95,"column":26}},"64":{"start":{"line":97,"column":14},"end":{"line":103,"column":15}},"65":{"start":{"line":98,"column":16},"end":{"line":98,"column":33}},"66":{"start":{"line":99,"column":16},"end":{"line":102,"column":17}},"67":{"start":{"line":100,"column":18},"end":{"line":100,"column":41}},"68":{"start":{"line":101,"column":18},"end":{"line":101,"column":30}},"69":{"start":{"line":105,"column":14},"end":{"line":105,"column":24}},"70":{"start":{"line":108,"column":12},"end":{"line":113,"column":13}},"71":{"start":{"line":109,"column":14},"end":{"line":109,"column":52}},"72":{"start":{"line":111,"column":14},"end":{"line":111,"column":45}},"73":{"start":{"line":112,"column":14},"end":{"line":112,"column":61}},"74":{"start":{"line":115,"column":12},"end":{"line":117,"column":16}},"75":{"start":{"line":123,"column":8},"end":{"line":127,"column":10}},"76":{"start":{"line":129,"column":8},"end":{"line":129,"column":28}},"77":{"start":{"line":135,"column":4},"end":{"line":165,"column":10}},"78":{"start":{"line":136,"column":6},"end":{"line":136,"column":26}},"79":{"start":{"line":138,"column":6},"end":{"line":138,"column":47}},"80":{"start":{"line":138,"column":33},"end":{"line":138,"column":47}},"81":{"start":{"line":140,"column":6},"end":{"line":141,"column":36}},"82":{"start":{"line":141,"column":8},"end":{"line":141,"column":36}},"83":{"start":{"line":144,"column":6},"end":{"line":145,"column":36}},"84":{"start":{"line":145,"column":8},"end":{"line":145,"column":36}},"85":{"start":{"line":147,"column":6},"end":{"line":158,"column":7}},"86":{"start":{"line":148,"column":8},"end":{"line":148,"column":29}},"87":{"start":{"line":150,"column":8},"end":{"line":150,"column":49}},"88":{"start":{"line":150,"column":41},"end":{"line":150,"column":49}},"89":{"start":{"line":152,"column":8},"end":{"line":152,"column":53}},"90":{"start":{"line":154,"column":8},"end":{"line":157,"column":9}},"91":{"start":{"line":155,"column":10},"end":{"line":155,"column":44}},"92":{"start":{"line":156,"column":10},"end":{"line":156,"column":46}},"93":{"start":{"line":161,"column":6},"end":{"line":162,"column":38}},"94":{"start":{"line":162,"column":8},"end":{"line":162,"column":38}},"95":{"start":{"line":164,"column":6},"end":{"line":164,"column":20}},"96":{"start":{"line":167,"column":4},"end":{"line":171,"column":8}},"97":{"start":{"line":168,"column":6},"end":{"line":171,"column":8}},"98":{"start":{"line":173,"column":4},"end":{"line":173,"column":18}},"99":{"start":{"line":178,"column":0},"end":{"line":182,"column":1}},"100":{"start":{"line":179,"column":2},"end":{"line":181,"column":3}},"101":{"start":{"line":180,"column":4},"end":{"line":180,"column":36}}},"branchMap":{"1":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":23}},{"start":{"line":26,"column":27},"end":{"line":26,"column":29}}]},"2":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"3":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":6},"end":{"line":41,"column":11}},{"start":{"line":41,"column":15},"end":{"line":41,"column":23}},{"start":{"line":41,"column":27},"end":{"line":41,"column":35}}]},"4":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"5":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":6},"end":{"line":45,"column":9}},{"start":{"line":45,"column":13},"end":{"line":45,"column":24}}]},"6":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":6},"end":{"line":49,"column":6}},{"start":{"line":49,"column":6},"end":{"line":49,"column":6}}]},"7":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":8}},{"start":{"line":60,"column":8},"end":{"line":60,"column":8}}]},"8":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":8},"end":{"line":69,"column":8}},{"start":{"line":69,"column":8},"end":{"line":69,"column":8}}]},"9":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":12},"end":{"line":86,"column":12}},{"start":{"line":86,"column":12},"end":{"line":86,"column":12}}]},"10":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":16},"end":{"line":86,"column":28}},{"start":{"line":86,"column":32},"end":{"line":86,"column":45}}]},"11":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":12},"end":{"line":87,"column":12}},{"start":{"line":87,"column":12},"end":{"line":87,"column":12}}]},"12":{"line":93,"type":"cond-expr","locations":[{"start":{"line":94,"column":16},"end":{"line":94,"column":29}},{"start":{"line":94,"column":32},"end":{"line":94,"column":49}}]},"13":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":16},"end":{"line":99,"column":16}},{"start":{"line":99,"column":16},"end":{"line":99,"column":16}}]},"14":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":20},"end":{"line":99,"column":22}},{"start":{"line":99,"column":26},"end":{"line":99,"column":43}}]},"15":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12}},{"start":{"line":108,"column":12},"end":{"line":108,"column":12}}]},"16":{"line":115,"type":"cond-expr","locations":[{"start":{"line":116,"column":14},"end":{"line":116,"column":77}},{"start":{"line":117,"column":14},"end":{"line":117,"column":16}}]},"17":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":6},"end":{"line":138,"column":6}},{"start":{"line":138,"column":6},"end":{"line":138,"column":6}}]},"18":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":6},"end":{"line":140,"column":6}},{"start":{"line":140,"column":6},"end":{"line":140,"column":6}}]},"19":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":6},"end":{"line":144,"column":6}},{"start":{"line":144,"column":6},"end":{"line":144,"column":6}}]},"20":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":8},"end":{"line":150,"column":8}},{"start":{"line":150,"column":8},"end":{"line":150,"column":8}}]},"21":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":8},"end":{"line":154,"column":8}},{"start":{"line":154,"column":8},"end":{"line":154,"column":8}}]},"22":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":6},"end":{"line":161,"column":6}},{"start":{"line":161,"column":6},"end":{"line":161,"column":6}}]},"23":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":4},"end":{"line":167,"column":4}},{"start":{"line":167,"column":4},"end":{"line":167,"column":4}}]}},"code":["'use strict'","","var promise = require('../common/promise')","var map = require('../common/array/map')","var find = require('../common/array/find')","var reduce = require('../common/array/reduce')","","var errors = require('../common/errors')","var BadRequestError = errors.BadRequestError","","var keys = require('../common/keys')","var primaryKey = keys.primary","var linkKey = keys.link","","","/**"," * Fetch included records. This mutates `context.response`"," * for the next method."," *"," * @return {Promise}"," */","module.exports = function include (context) {","  var Promise = promise.Promise","  var request = context.request","  var type = request.type","  var ids = request.ids || []","  var include = request.include","  var meta = request.meta","  var response = context.response","  var transaction = context.transaction","  var records = response.records","  var recordTypes = this.recordTypes","  var i, j, record, id","","  // This cache is used to keep unique IDs per type.","  var idCache = {}","  idCache[type] = {}","  for (i = 0, j = ids.length; i < j; i++)","    idCache[type][ids[i]] = true","","  if (!type || !include || !records) return context","","  // It's necessary to iterate over primary records if no IDs were","  // provided initially.","  if (ids && !ids.length)","    for (i = 0, j = records.length; i < j; i++) {","      record = records[i]","      id = record[primaryKey]","      if (!idCache[type][id]) idCache[type][id] = true","    }","","  return Promise.all(map(include, function (fields) {","    return new Promise(function (resolve, reject) {","      var currentType = type","      var currentIds = []","      var includeOptions = []","      var currentCache, currentOptions, currentField, i, j","","      for (i = 0, j = fields.length; i < j; i++)","        if (Array.isArray(fields[i])) {","          includeOptions[i] = fields[i][1]","          fields[i] = fields[i][0]","        }","","      // Ensure that the first level field is in the record.","      return Promise.all(map(records, function (record) {","        var options","","        if (!record.hasOwnProperty(fields[0])) {","          options = { fields: {} }","          options.fields[fields[0]] = true","","          return transaction.find(type, [ record[primaryKey] ], options, meta)","          .then(function (records) { return records[0] })","        }","","        return record","      }))","","      .then(function (records) {","        // `cursor` refers to the current collection of records.","        return reduce(fields, function (records, field, index) {","          return records.then(function (cursor) {","            currentField = recordTypes[currentType][field]","","            if (!currentType || !currentField) return []","            if (!(linkKey in currentField)) throw new BadRequestError(","              'The field \"' + field + '\" does not define a link.')","","            currentCache = {}","            currentType = currentField[linkKey]","            currentIds = reduce(cursor, function (ids, record) {","              var linkedIds = Array.isArray(record[field]) ?","                record[field] : [ record[field] ]","              var i, j, id","","              for (i = 0, j = linkedIds.length; i < j; i++) {","                id = linkedIds[i]","                if (id && !currentCache[id]) {","                  currentCache[id] = true","                  ids.push(id)","                }","              }","","              return ids","            }, [])","","            if (index in includeOptions)","              currentOptions = includeOptions[index]","            else {","              currentOptions = { fields: {} }","              currentOptions.fields[fields[index + 1]] = true","            }","","            return currentIds.length ?","              transaction.find(currentType, currentIds, currentOptions, meta) :","              []","          })","        }, Promise.resolve(records))","      })","","      .then(function (records) {","        return resolve({","          type: currentType,","          ids: currentIds,","          records: records","        })","      }, function (error) {","        return reject(error)","      })","    })","  }))","","  .then(function (containers) {","    var include = reduce(containers, function (include, container) {","      var i, j, id, record","","      if (!container.ids.length) return include","","      if (!include[container.type])","        include[container.type] = []","","      // Only include unique IDs per type.","      if (!idCache[container.type])","        idCache[container.type] = {}","","      for (i = 0, j = container.ids.length; i < j; i++) {","        id = container.ids[i]","","        if (idCache[container.type][id]) continue","","        record = find(container.records, matchId(id))","","        if (record) {","          idCache[container.type][id] = true","          include[container.type].push(record)","        }","      }","","      // If nothing so far, delete the type from include.","      if (!include[container.type].length)","        delete include[container.type]","","      return include","    }, {})","","    if (Object.keys(include).length)","      Object.defineProperty(context.response, 'include', {","        configurable: true,","        value: include","      })","","    return context","  })","}","","","function matchId (id) {","  return function (record) {","    return record[primaryKey] === id","  }","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"8":1,"9":1,"11":1,"12":1,"13":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"36":0,"37":0,"38":0,"39":0,"41":0,"45":0,"46":0,"47":0,"48":0,"49":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"59":0,"60":0,"61":0,"62":0,"66":0,"67":0,"69":0,"70":0,"71":0,"73":0,"74":0,"77":0,"82":0,"83":0,"84":0,"86":0,"87":0,"90":0,"91":0,"92":0,"93":0,"95":0,"97":0,"98":0,"99":0,"100":0,"101":0,"105":0,"108":0,"109":0,"111":0,"112":0,"115":0,"123":0,"129":0,"135":0,"136":0,"138":0,"140":0,"141":0,"144":0,"145":0,"147":0,"148":0,"150":0,"152":0,"154":0,"155":0,"156":0,"161":0,"162":0,"164":0,"167":0,"168":0,"173":0,"178":1,"179":0,"180":0}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/dispatch/end.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/dispatch/end.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":17},"end":{"line":12,"column":36}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":45},"end":{"line":27,"column":63}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":8},"end":{"line":32,"column":34}}},"4":{"name":"(anonymous_4)","line":45,"loc":{"start":{"line":45,"column":41},"end":{"line":45,"column":64}}},"5":{"name":"(anonymous_5)","line":46,"loc":{"start":{"line":46,"column":51},"end":{"line":46,"column":69}}},"6":{"name":"(anonymous_6)","line":53,"loc":{"start":{"line":53,"column":10},"end":{"line":53,"column":27}}},"7":{"name":"(anonymous_7)","line":63,"loc":{"start":{"line":63,"column":8},"end":{"line":63,"column":20}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":42}},"3":{"start":{"line":12,"column":0},"end":{"line":76,"column":1}},"4":{"start":{"line":13,"column":2},"end":{"line":13,"column":31}},"5":{"start":{"line":14,"column":2},"end":{"line":14,"column":24}},"6":{"start":{"line":15,"column":2},"end":{"line":15,"column":31}},"7":{"start":{"line":16,"column":2},"end":{"line":16,"column":33}},"8":{"start":{"line":17,"column":2},"end":{"line":17,"column":25}},"9":{"start":{"line":18,"column":2},"end":{"line":18,"column":24}},"10":{"start":{"line":19,"column":2},"end":{"line":19,"column":32}},"11":{"start":{"line":20,"column":2},"end":{"line":20,"column":32}},"12":{"start":{"line":23,"column":2},"end":{"line":23,"column":25}},"13":{"start":{"line":24,"column":2},"end":{"line":24,"column":25}},"14":{"start":{"line":27,"column":2},"end":{"line":75,"column":4}},"15":{"start":{"line":28,"column":4},"end":{"line":29,"column":40}},"16":{"start":{"line":33,"column":4},"end":{"line":33,"column":20}},"17":{"start":{"line":34,"column":4},"end":{"line":34,"column":12}},"18":{"start":{"line":36,"column":4},"end":{"line":37,"column":59}},"19":{"start":{"line":37,"column":6},"end":{"line":37,"column":59}},"20":{"start":{"line":37,"column":29},"end":{"line":37,"column":59}},"21":{"start":{"line":39,"column":4},"end":{"line":39,"column":31}},"22":{"start":{"line":39,"column":18},"end":{"line":39,"column":31}},"23":{"start":{"line":42,"column":4},"end":{"line":42,"column":39}},"24":{"start":{"line":45,"column":4},"end":{"line":60,"column":6}},"25":{"start":{"line":46,"column":6},"end":{"line":50,"column":9}},"26":{"start":{"line":47,"column":8},"end":{"line":49,"column":60}},"27":{"start":{"line":54,"column":6},"end":{"line":54,"column":20}},"28":{"start":{"line":57,"column":6},"end":{"line":59,"column":68}},"29":{"start":{"line":58,"column":8},"end":{"line":59,"column":68}},"30":{"start":{"line":59,"column":10},"end":{"line":59,"column":68}},"31":{"start":{"line":59,"column":27},"end":{"line":59,"column":68}},"32":{"start":{"line":64,"column":4},"end":{"line":66,"column":5}},"33":{"start":{"line":68,"column":4},"end":{"line":68,"column":59}},"34":{"start":{"line":68,"column":17},"end":{"line":68,"column":59}},"35":{"start":{"line":71,"column":4},"end":{"line":72,"column":52}},"36":{"start":{"line":72,"column":6},"end":{"line":72,"column":52}},"37":{"start":{"line":74,"column":4},"end":{"line":74,"column":18}}},"branchMap":{"1":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":20},"end":{"line":61,"column":4}},{"start":{"line":61,"column":7},"end":{"line":61,"column":24}}]},"2":{"line":28,"type":"cond-expr","locations":[{"start":{"line":29,"column":6},"end":{"line":29,"column":30}},{"start":{"line":29,"column":33},"end":{"line":29,"column":39}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":6},"end":{"line":37,"column":6}},{"start":{"line":37,"column":6},"end":{"line":37,"column":6}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"5":{"line":48,"type":"cond-expr","locations":[{"start":{"line":49,"column":12},"end":{"line":49,"column":50}},{"start":{"line":49,"column":53},"end":{"line":49,"column":59}}]},"6":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":10},"end":{"line":59,"column":10}},{"start":{"line":59,"column":10},"end":{"line":59,"column":10}}]},"7":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"8":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":4},"end":{"line":71,"column":4}},{"start":{"line":71,"column":4},"end":{"line":71,"column":4}}]},"9":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":8},"end":{"line":71,"column":15}},{"start":{"line":71,"column":19},"end":{"line":71,"column":37}}]}},"code":["'use strict'","","var map = require('../common/array/map')","var promise = require('../common/promise')","","","/**"," * Apply `output` hook per record, this mutates `context.response`."," *"," * @return {Promise}"," */","module.exports = function (context) {","  var Promise = promise.Promise","  var hooks = this.hooks","  var request = context.request","  var response = context.response","  var type = request.type","  var hook = hooks[type]","  var records = response.records","  var include = response.include","","  // Delete temporary keys.","  delete response.records","  delete response.include","","  // Run hooks on primary type.","  return (records ? Promise.all(map(records, function (record) {","    return Promise.resolve(typeof hook[1] === 'function' ?","      hook[1](context, record) : record)","  }))","","  .then(function (updatedRecords) {","    var includeTypes","    var i, j","","    for (i = 0, j = updatedRecords.length; i < j; i++)","      if (updatedRecords[i]) records[i] = updatedRecords[i]","","    if (!include) return void 0","","    // The order of the keys and their corresponding indices matter.","    includeTypes = Object.keys(include)","","    // Run output hooks per include type.","    return Promise.all(map(includeTypes, function (includeType) {","      return Promise.all(map(include[includeType], function (record) {","        return Promise.resolve(","          typeof hooks[includeType][1] === 'function' ?","            hooks[includeType][1](context, record) : record)","      }))","    }))","","    .then(function (types) {","      var i, j, k, l","","      // Assign results of output hooks on includes.","      for (i = 0, j = types.length; i < j; i++)","        for (k = 0, l = types[i].length; k < l; k++)","          if (types[i][k]) include[includeTypes[i]][k] = types[i][k]","    })","  }) : Promise.resolve())","","  .then(function () {","    context.response.payload = {","      records: records","    }","","    if (include) context.response.payload.include = include","","    // Expose the \"count\" property so that it is serializable.","    if (records && 'count' in records)","      context.response.payload.count = records.count","","    return context","  })","}",""],"l":{"3":1,"4":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"23":0,"24":0,"27":0,"28":0,"33":0,"34":0,"36":0,"37":0,"39":0,"42":0,"45":0,"46":0,"47":0,"54":0,"57":0,"58":0,"59":0,"64":0,"68":0,"71":0,"72":0,"74":0}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/global.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/global.js","s":{"1":2},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}}},"branchMap":{},"code":["'use strict'","","window.fortune = require('./')",""],"l":{"3":2}},"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/header.js":{"path":"/home/travis/build/npmtest/node-npmtest-fortune/node_modules/fortune/lib/header.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":36}},"2":{"start":{"line":5,"column":0},"end":{"line":12,"column":13}}},"branchMap":{},"code":["'use strict'","","var pkg = require('../package.json')","","process.stdout.write([","  '/*!',","  ' * Fortune.js',","  ' * Version ' + pkg.version,","  ' * ' + pkg.license + ' License',","  ' * ' + pkg.homepage,","  ' */', ''","].join('\\n'))",""],"l":{"3":1,"5":1}}}